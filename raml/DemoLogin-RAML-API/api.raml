#%RAML 1.0
title: BackBase-Demo-Login
description: Simple Login in BackBase
version: v1
baseUri: "{version}"
mediaType: application/json
protocols: HTTP
traits:
   logged:
      usage: Se aplica cuando se requiere identificar al usuario mediante un id de sesion 
      headers:
         sessionID:
            description: Token para identificar al usuario en la peticiones
            example: 12decfr34e
            required: true

   searchable:
      queryParameters:
         query:
            description: |
               JSON array [{"field1","value1","operator1"},{"field2","value2","operator2"},...,{"fieldN","valueN","operatorN"}] <<description>>
            example: |
               <<example>>
   
   orderable:
      queryParameters:
         orderBy:
            description: |
               Order by field: <<fieldsList>>
            type: string
            required: false
         order:
            description: Order
            enum: [desc, asc]
            default: desc
            required: false

   pageable:
      queryParameters:
         offset:
            description: Skip over a number of elements by specifying an offset value for the query
            type: integer
            required: false
            example: 20
            default: 0
         limit:
            description: Limit the number of elements on the response
            type: integer
            required: false
            example: 80
            default: 10

types:
   User: !include types/login/User.json
   Account: !include types/accounts/Account.json
   Response20X: !include types/Response20X.json
   Response40X: !include types/Response40X.json
   Response50X: !include types/Response50X.json
   
resourceTypes: 
   collection:
      description: Collection of available <<resourcePathName>> in Jukebox.
      get:
         description: Devuelve la lista de las cuentas del usuario
         responses:
            200:
               body:
                  application/json:
                     example: |
                        <<exampleCollection>>
   collection-item:
      description: Detalle de cuenta especifica del usuario
      get:
         description: Devuelve el detalle de una cuenta especifica del usuario
         responses:
            200:
               body:
                  application/json:
                     example: |
                        <<exampleItem>>
            404:
               body:
                  application/json:
                     example: |
                        {"message": "<<resourcePathName|!singularize>> not found" }

/login:
   displayName: Validacion de usuario
   description: Se ingresa usuario y password
   post:
      description: Valida usuario y password.
      body:
         type: User
         example: !include data/login/formUser.json
      responses:
         200:
            description: Validación de credenciales correcta
            headers:
               sessionId:
                  type: string
                  example: 12decfr34e
            body:
               type: Response20X
               example: !include responses/login/Response20X-Access.json
         401:
            description: No cuenta con credenciales de autenticación válidas
            body:
               type: Response40X
               example: !include responses/login/Response40X-InvalidCredentials.json
         403:
            description: Existe una sesión activa.
            body:
               type: Response40X
               example: !include responses/login/Response40X-ActiveSession.json
         500:
            description: Internal Server Error
            body:
               type: Response50X
               example: !include responses/500.json

/logout:
   displayName: Cierra la sesión del usuario
   post:
      is: [ logged ]
      responses:
         200:
            body:
               type: Response20X
               example: !include responses/login/Response20X-logout.json

/accounts:
   type:
      collection:
         exampleCollection: !include data/accounts/accounts.json
   get:
      description: Lista de cuentas del usuario
      is: [
          searchable: {description: "with valid searchable fields: alias", example: "[\"songTitle\", \"Get L\", \"like\"]"},
          orderable: {fieldsList: "alias"},
          pageable,
          logged
      ]
   /{accountId}:
      type:
         collection-item:
            exampleItem: !include data/accounts/account.json
      get:
         description: Obtiene una cuenta especifica del usuario
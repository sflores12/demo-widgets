{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap ae8dfb8780f1a537e6f0?6d38****","webpack:///./lib-bb-event-bus-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./lib-bb-event-bus-ng/scripts/index.js","webpack:///./lib-bb-event-bus-ng/scripts/event-bus.js","webpack:///./lib-bb-event-bus-ng/scripts/detect-bus.js"],"names":["moduleKey","eventBusKey","safeApply","scope","fn","phase","$root","$$phase","$apply","module","provider","widget","undefined","setWidget","widgetInstance","$get","$rootScope","instance","window","Error","name","events","eventBus","publish","topic","payload","subscribe","callback","wrappedCallback","internalArgs","bind","global","features","pubsub","gadgets"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,yC;;;;;;;;;;ACAA,gD;;;;;;;;;;;;;;;ACuBA;;;;AAEA;;;;AACA;;;;;;AAEA,KAAMA,YAAY,kBAAlB;AACA;;;;;AA7BA;;;;;;;;;;;;;;;;;;;;;;;AAkCO,KAAMC,oCAAc,2BAApB;;AAEP;;;;;;AAMA,UAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,UAAO,UAACC,EAAD,EAAQ;AACb,SAAMC,QAAQF,MAAMG,KAAN,CAAYC,OAA1B;AACA,SAAIF,UAAU,QAAV,IAAsBA,UAAU,SAApC,EAA+C;AAC7C,WAAID,MAAO,OAAOA,EAAP,KAAe,UAA1B,EAAuC;AACrCA;AACD;AACF,MAJD,MAIO;AACLD,aAAMK,MAAN,CAAaJ,EAAb;AACD;AACF,IATD;AAUD;;AAED;;;;;mBAKe,0BACZK,MADY,CACLT,SADK,EACM,EADN;;AAGb;;;;AAHa,EAOZU,QAPY,CAOHT,WAPG,EAOU,CAAC,YAAM;AAC5B,OAAIU,SAASC,SAAb;;AAEA,UAAO;AACL;;;;;;AAMAC,gBAAW,mBAACC,cAAD,EAAoB;AAAEH,gBAASG,cAAT;AAA0B,MAPtD;;AASL;;;;;AAKAC,WAAM,CAAC,YAAD,EAAe,UAACC,UAAD,EAAgB;AACnC;AACA,WAAMC,WAAW,yBAAUC,MAAV,EAAkBP,MAAlB,CAAjB;AACA,WAAI,CAACM,QAAL,EAAe;AACb,eAAM,IAAIE,KAAJ,CAAU,0BAAV,CAAN;AACD;AACD,cAAO,wBAAOF,QAAP,EAAiBf,UAAUc,UAAV,CAAjB,CAAP;AACD,MAPK;AAdD,IAAP;AAuBD,EA1BsB,CAPV,EAmCZI,I;;;;;;;;;;;;mBC/FY,UAACC,MAAD,EAASnB,SAAT,EAAuB;AACpC;;;;;AAKA,OAAMoB,WAAW;AACf;;;;;;;;;;;AAWAC,cAAS,iBAACC,KAAD,EAAQC,OAAR;AAAA,cAAoBJ,OAAOE,OAAP,CAAeC,KAAf,EAAsBC,OAAtB,CAApB;AAAA,MAZM;;AAcf;;;;;;;;;;;;;;;AAeAC,gBAAW,mBAACF,KAAD,EAAQG,QAAR,EAAqB;AAC9B,WAAMC,kBAAkB,SAAlBA,eAAkB,GAAqB;AAAA,2CAAjBC,YAAiB;AAAjBA,uBAAiB;AAAA;;AAC3C3B,mBAAUyB,SAASG,IAAT,kBAAc,IAAd,SAAuBD,YAAvB,EAAV;AACD,QAFD;;AAIA,cAAOR,OAAOK,SAAP,CAAiBF,KAAjB,EAAwBI,eAAxB,CAAP;AACD;AAnCc,IAAjB;AAqCA,UAAON,QAAP;AACD,E;;AAED;;;;;;;;;;;;;;;;;mBC9Ce,UAACS,MAAD,EAASpB,MAAT;AAAA,UACZA,UAAUA,OAAOqB,QAAjB,IAA6BrB,OAAOqB,QAAP,CAAgBC,MAA9C,IACCF,UAAUA,OAAOG,OAAjB,IAA4BH,OAAOG,OAAP,CAAeD,MAF/B;AAAA,E","file":"lib-bb-event-bus-ng/scripts/lib-bb-event-bus-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-event-bus-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-event-bus-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"lib-bb-event-bus-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae8dfb8780f1a537e6f0","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-event-bus-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 5\n// module chunks = 3 4 5 6 7 8 9 11 15 17 20 22 24 25","/**\n * @module lib-bb-event-bus-ng\n *\n * @description Event bus module, angular wrapper around CXP's gadgets.pubsub.\n *\n * @example\n * import bbEventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n *\n * angular.module('MyModule', [bbEventBusModuleKey])\n *   .controller('Controller1', [eventBusKey, (eventBus) => ({\n *     $onInit: () => {\n *       eventBus.publish('example.event', { msg: 'Hello' });\n *     },\n *   })])\n *   .controller('Controller2', [eventBusKey, (eventBus) => ({\n *     $onInit: () => {\n *       eventBus.subscribe('example.event', ({ msg }) => {\n *         console.log(`Controller 1 says ${msg}`);\n *       });\n *     },\n *   })])\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport pubSub from './event-bus';\nimport detectBus from './detect-bus';\n\nconst moduleKey = 'lib-bb-event-bus';\n/**\n * @name eventBusKey\n * @type {string}\n * @description Injector name of [EventBus](#EventBus) instance\n */\nexport const eventBusKey = 'lib-bb-event-bus:eventBus';\n\n/**\n * Checks the current phase before executing the function\n * @inner\n * @param scope - angular scope\n * @returns {function(*=)}\n */\nfunction safeApply(scope) {\n  return (fn) => {\n    const phase = scope.$root.$$phase;\n    if (phase === '$apply' || phase === '$digest') {\n      if (fn && (typeof(fn) === 'function')) {\n        fn();\n      }\n    } else {\n      scope.$apply(fn);\n    }\n  };\n}\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default ng\n  .module(moduleKey, [])\n\n  /**\n   * @name EventBusProvider\n   * @type {object}\n   */\n  .provider(eventBusKey, [() => {\n    let widget = undefined;\n\n    return {\n      /**\n       * @name EventBusProvider#setWidget\n       * @type {function}\n       * @param {Object} portalWidget portal client widget instance (a.k.a __WIDGET__)\n       * @return {void}\n       */\n      setWidget: (widgetInstance) => { widget = widgetInstance; },\n\n      /**\n       * @name EventBusProvider#$get\n       * @type {function}\n       * @return {EventBus} An [EventBus](#EventBus) service\n       */\n      $get: ['$rootScope', ($rootScope) => {\n        /* global window */\n        const instance = detectBus(window, widget);\n        if (!instance) {\n          throw new Error('pubsub is not available.');\n        }\n        return pubSub(instance, safeApply($rootScope));\n      }],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus-ng/scripts/index.js","export default (events, safeApply) => {\n  /**\n   * @name EventBus\n   * @type {object}\n   * @description\n   */\n  const eventBus = {\n    /**\n     * @name EventBus#publish\n     * @type {function}\n     * @description Publish an event to the bus. Any subscribers should be notified\n     * @param {string} topic The name of the event, this value is needed to subscribe\n     * @param {any} payload The data payload to provide additional context to the event\n     *\n     * @example\n     * bbEventBus\n     *  .publish('test', {})\n     */\n    publish: (topic, payload) => events.publish(topic, payload),\n\n    /**\n     * @name EventBus#subscribe\n     * @type {function}\n     * @description Subscribe to be notified when an event on the same topic event is `publish`ed.\n     * The callback will trigger an angular digest.\n     * @param {string} topic\n     * @param {Subscription} callback To be called when an event is published on the same topic\n     * @return {void}\n     *\n     * @example\n     * bbEventBus\n     *  .subscribe('test', function(){\n     *    console.log('event')\n     *  })\n     */\n    subscribe: (topic, callback) => {\n      const wrappedCallback = (...internalArgs) => {\n        safeApply(callback.bind(null, ...internalArgs));\n      };\n\n      return events.subscribe(topic, wrappedCallback);\n    },\n  };\n  return eventBus;\n};\n\n/**\n * @typedef Subscription\n * @type {function}\n * @param {any} payload The data payload that was `publish`ed with the event\n * @returns {void}\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus-ng/scripts/event-bus.js","export default (global, widget) =>\n  (widget && widget.features && widget.features.pubsub) ||\n  (global && global.gadgets && global.gadgets.pubsub);\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-event-bus-ng/scripts/detect-bus.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap ed40b4c6a0ad86da1c64?6024","webpack:///./data-bb-cxp-authentication-http-ng/model.xml","webpack:///./data-bb-cxp-authentication-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-challenge-ng\"","webpack:///./data-bb-cxp-authentication-http-ng/scripts/data-bb-cxp-authentication-http.js"],"names":["cXPAuthenticationDataModuleKey","cXPAuthenticationDataKey","module","provider","config","baseUri","setHeaders","headers","setBaseUri","setApiRoot","apiRoot","setUsernameParamName","usernameParam","setPasswordParamName","passwordParam","setAuthUri","authUri","$get","$httpProvider","interceptors","push","name","conf","httpClient","v6ApiRoot","window","b$","portal","v5ApiRoot","serverRoot","defaultHeaders","Accept","endpoint","Object","assign","formDataParameters","username","password","buildQueryString","obj","loginParam","getProfile","method","url","postLogin","data","postLogout"],"mappings":"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","file":"data-bb-cxp-authentication-http-ng/scripts/data-bb-cxp-authentication-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-challenge-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-cxp-authentication-http-ng\", [\"vendor-bb-angular\", \"lib-bb-challenge-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-cxp-authentication-http-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-challenge-ng\"));\n\telse\n\t\troot[\"data-bb-cxp-authentication-http-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-challenge-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed40b4c6a0ad86da1c64","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./data-bb-cxp-authentication-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module data-bb-cxp-authentication-http-ng\n *\n * @description A data module for accessing the CXP Authentication REST API\n *\n * @returns {String} `data-bb-cxp-authentication-http-ng`\n * @example\n * import cXPAuthenticationDataModuleKey, {\n *   cXPAuthenticationDataKey,\n * } from 'data-bb-cxp-authentication-http-ng';\n *\n * For compatibility with CX 6 config-bb-provider is needed with these options\n *\n * define('config-bb-providers-ng', function (require, exports) {\n *   exports.default = [\n *     ['data-bb-cxp-authentication-http-ng:cXPAuthenticationDataProvider', function(endpoint) {\n *       endpoint.setHeaders({\n *         Accept: '* /*',\n *         'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n *         'Cache-Control': 'no-cache, no-store, must-revalidate',\n *         'X-Requested-With': 'XMLHttpRequest',\n *       });\n *       endpoint.setApiRoot('/gateway/api')\n *       endpoint.setAuthUri('/auth');\n *       endpoint.setUsernameParamName('username');\n *       endpoint.setPasswordParamName('password');\n *     }],\n *   ];\n * });\n */\n\nimport ng from 'vendor-bb-angular';\nimport bbChallengeModuleKey, {\n  bbChallengeKey,\n} from 'lib-bb-challenge-ng';\n\nimport cXPAuthenticationData from './data-bb-cxp-authentication-http';\n\nconst cXPAuthenticationDataModuleKey = 'data-bb-cxp-authentication-http-ng';\n/**\n * @name cXPAuthenticationDataKey\n * @type {string}\n * @description Angular dependency injection key for the CXP Authentication data service\n */\nexport const cXPAuthenticationDataKey =\n  'data-bb-cxp-authentication-http-ng:cXPAuthenticationData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(cXPAuthenticationDataModuleKey, [bbChallengeModuleKey])\n\n  /**\n   * @name CXPAuthenticationData\n   * @type {object}\n   * @constructor\n   *\n   * @description Public api for service data-bb-cxp-authentication-http\n   *\n   */\n  .provider(cXPAuthenticationDataKey, [() => {\n    const config = {\n      baseUri: '',\n    };\n\n    /**\n     * @name CXPAuthenticationDataProvider\n     * @type {object}\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * angular.module(...)\n     *   .config(['data-bb-cxp-authentication-http-ng:cXPAuthenticationDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     */\n    return {\n      /**\n       * @name CXPAuthenticationDataProvider#setHeaders\n       * @type {function}\n       * @param {object} headers\n       * Object with all headers that should be included for all HTTP requests\n       */\n      setHeaders: (headers) => {\n        config.headers = headers;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#setApiRoot\n       * @type {function}\n       * @param {string} apiRoot Root for API calls\n       */\n      setApiRoot: (apiRoot) => {\n        config.apiRoot = apiRoot;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#setUsernameParamName\n       * @type {function}\n       * @param {string} usernameParam New username param key\n       */\n      setUsernameParamName: (usernameParam) => {\n        config.usernameParam = usernameParam;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#setPasswordParamName\n       * @type {function}\n       * @param {string} passwordParam New password param key\n       */\n      setPasswordParamName: (passwordParam) => {\n        config.passwordParam = passwordParam;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#authUri\n       * @type {function}\n       * @param {string} authUri Auth URI which will included in all HTTP requests\n       */\n      setAuthUri: (authUri) => {\n        config.authUri = authUri;\n      },\n      /**\n       * @name CXPAuthenticationDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        bbChallengeKey,\n        /* into */\n        cXPAuthenticationData(config),\n      ],\n    };\n  }])\n\n  .config(['$httpProvider', ($httpProvider) => {\n    // Configure $http service to use challenge interceptor\n    $httpProvider.interceptors.push(bbChallengeKey);\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./data-bb-cxp-authentication-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 7 8 9 10 11 12 13 14 15 17 18","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-challenge-ng\"\n// module id = 3\n// module chunks = 0","/* global window */\nexport default (conf) => (httpClient) => {\n  // v6ApiRoot will be found only in compatibility mode. To use it without compatibility\n  // set api root via config provider\n  const v6ApiRoot = () => window.b$ && window.b$.portal && window.b$.portal.config.apiRoot;\n  const v5ApiRoot = () => window.b$ && window.b$.portal && window.b$.portal.config.serverRoot;\n  const apiRoot = conf.apiRoot || v6ApiRoot() || v5ApiRoot() || '';\n  const authUri = conf.authUri || '/bb-public-api/security';\n  const defaultHeaders = {\n    Accept: 'application/json',\n    'Content-Type': 'application/x-www-form-urlencoded;',\n    'Cache-Control': 'no-cache, no-store, must-revalidate',\n  };\n\n  const config = {\n    endpoint: `${conf.baseUri}${apiRoot}${authUri}`,\n    headers: Object.assign(defaultHeaders, conf.headers || {}),\n    formDataParameters: {\n      username: conf.usernameParam || 'j_username',\n      password: conf.passwordParam || 'j_password',\n    },\n  };\n\n  /**\n   * @name CXPAuthenticationData#buildQueryString\n   * @type {function}\n   * @inner\n   * @description Builds query string with username and password keys and values\n   * @param {object} obj Object with query values\n   * @param {string} obj.username Username\n   * @param {string} obj.password Password\n   * @returns {string} Query string\n   */\n  function buildQueryString(obj) {\n    const loginParam = `${config.formDataParameters.username}=${obj.username}`;\n    const passwordParam = `${config.formDataParameters.password}=${obj.password}`;\n    return `${loginParam}&${passwordParam}`;\n  }\n\n  /**\n   * @name CXPAuthenticationData#getProfile\n   * @type {function}\n   * @description Retrieves profile information from CX 6\n   * @param {object} headers custom headers\n   * @returns {Promise.<object>} A promise resolving to object with headers and data keys\n   */\n  function getProfile(headers = {}) {\n    return httpClient({\n      method: 'GET',\n      url: `${conf.baseUri}${apiRoot}/bb-public-api/profile.json`,\n      headers: Object.assign(config.headers, headers),\n    });\n  }\n\n  /**\n   * @name CXPAuthenticationData#postLogin\n   * @type {function}\n   * @description Perform a POST request to the URI.\n   * @param {object} data configuration object\n   * @param {object} headers custom headers\n   * @returns {Promise.<object>} A promise resolving to object with headers and data keys\n   *\n   * @example\n   * cXPAuthenticationData\n   *  .postLogin(data, headers)\n   *  .then(function(result){\n   *    console.log(result)\n   *  });\n   */\n  function postLogin(data = {}, headers = {}) {\n    return httpClient({\n      method: 'POST',\n      url: `${config.endpoint}/login`,\n      data: buildQueryString(data),\n      headers: Object.assign(config.headers, headers),\n    });\n  }\n\n  /**\n   * @name CXPAuthenticationData#postLogout\n   * @type {function}\n   * @description Perform a POST request to the URI.\n   * @param {object} headers custom headers\n   * @returns {Promise.<object>} A promise resolving to object with headers and data keys\n   *\n   * @example\n   * cXPAuthenticationData\n   *  .postLogout(headers)\n   *  .then(function(result){\n   *    console.log(result)\n   *  });\n   */\n  function postLogout(data = {}, headers = {}) {\n    const url = `${config.endpoint}/logout`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      data,\n      headers: Object.assign(config.headers, headers),\n    });\n  }\n\n  return ({\n    getProfile,\n    postLogin,\n    postLogout,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./data-bb-cxp-authentication-http-ng/scripts/data-bb-cxp-authentication-http.js"],"sourceRoot":""}
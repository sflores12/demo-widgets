{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 2af75219d40a7b52f448?f686*","webpack:///./ui-bb-budget-card-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///./ui-bb-budget-card-ng/scripts/index.js","webpack:///external \"ui-bb-format-amount\"","webpack:///./ui-bb-budget-card-ng/scripts/component.js","webpack:///./ui-bb-budget-card-ng/scripts/controller.js","webpack:///./ui-bb-budget-card-ng/scripts/constants.js"],"names":["module","component","name","uiBbBudgetCardNg","controller","bindings","labels","budgetIcon","chartWrapperClass","chartColorLevel","spent","spendingLimit","spentPercentage","availableAmount","onUpdate","onDelete","template","uiBbBudgetCardController","$scope","$element","$window","$timeout","$ctrl","animationStart","getRotatingElements","leftElToRotate","querySelector","CLASS_CHART_SLICE_LEFT","rightElToRotate","CLASS_CHART_SLICE_RIGHT","checkAmountAnimationDelay","percentage","calculateRotationAngle","Math","round","toggleFullSliceRotation","slice","classList","contains","remove","add","styleBudgetChart","WARNING","chartColor","CLASS_CHART_WARNING","amountColor","CLASS_LABEL_WARNING","DANGER","wrapperClass","CLASS_CHART_DANGER_BRIGHT","CLASS_CHART_DANGER","CLASS_LABEL_DANGER","amountSpentColor","CLASS_CHART_SUCCESS","CLASS_LABEL_SUCCESS","animateAmountLeft","timestamp","progress","animateAvailableAmount","parseInt","amount","$digest","requestAnimationFrame","checkChartAnimationDelay","animateChart","perc","isRightSide","resetChart","value","doAnimations","$onInit","$watch","Object","assign","CHART_LEVEL","SUCCESS","CHART_SLICE_CLASSES","CARD_COLOR_CLASSES"],"mappings":"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","file":"ui-bb-budget-card-ng/scripts/ui-bb-budget-card-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-format-amount\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-budget-card-ng\", [\"vendor-bb-angular\", \"ui-bb-format-amount\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-budget-card-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-format-amount\"));\n\telse\n\t\troot[\"ui-bb-budget-card-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"ui-bb-format-amount\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2af75219d40a7b52f448","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-budget-card-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 17\n// module chunks = 1 2 3","/**\n * @module ui-bb-budget-card-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbBudgetCardNg from 'ui-bb-budget-card-ng';\n *\n * export const dependencyKeys = [\n *   uiBbBudgetCardNg,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-budget-card-ng class=\"col-xs-12\"\n * />\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport uiBbFormatAmount from 'ui-bb-format-amount';\n\nimport component from './component';\n\n/**\n * @description The angular module name\n * @name default\n * @type {string}\n */\nexport default angular\n  .module('ui-bb-budget-card-ng', [\n    uiBbFormatAmount,\n  ])\n  .component('uiBbBudgetCardNg', component)\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-budget-card-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount\"\n// module id = 22\n// module chunks = 2","/**\n * @name uiBbBudgetCardNg\n * @type {object}\n * @description\n * Component used to display data using a lightweight chart\n *\n * @property {object} labels Contains translated component labels\n * @property {string} labels.title Title label\n * @property {string} labels.spent Spent label\n * @property {string} labels.chart Chart's center label\n * @property {string} labels.limit Limit label\n * @property {string} labels.edit Edit button label\n * @property {string} labels.delete Delete button label\n * @property {string} budgetIcon Font awesome icon class\n * @property {string} chartWrapperClass It sets a class on the chart wrapper\n * @property {string} chartColorLevel Sets the color level of the chart - success, warning, danger\n * @property {object} spent Amount object that is passed to the format ui component\n * @property {object} spendingLimit Spending limit object that is passed to the format ui component\n * @property {number} spentPercentage The percentage of the chart\n * @property {object} availableAmount Available amount object that is passed\n * to the format ui component\n * @property {?function} onUpdate Function to be called after click on Edit button. If not provided,\n * button will be hidden. If delete handler is also not provided, whole dropdown will be hidden\n * @property {?function} onDelete Function to be called after click on Delete button.\n * If not provided, button will be hidden. If edit handler is also not provided,\n * whole dropdown will be hidden\n */\n\nimport uiBbBudgetCardController from './controller';\n\nconst uiBbBudgetCardNg = {\n  controller: uiBbBudgetCardController,\n  bindings: {\n    labels: '=',\n    budgetIcon: '@',\n    chartWrapperClass: '@',\n    chartColorLevel: '@',\n    spent: '=',\n    spendingLimit: '=',\n    spentPercentage: '@',\n    availableAmount: '=',\n    onUpdate: '&?',\n    onDelete: '&?',\n  },\n  template: `\n    <div class=\"budget-card-container panel\">\n      <div class=\"budget-card-title panel-heading panel-heading-small\"\n        data-ng-class=\"{ 'pr-0': $ctrl.onUpdate || $ctrl.onDelete }\"\n      >\n        <i class=\"transaction-type-icon budget-card-category-icon\"\n          data-ng-class=\"$ctrl.budgetIcon\"\n          aria-hidden=\"true\"\n        ></i>\n\n        <label data-ng-bind=\"$ctrl.labels.title\"></label>\n\n        <div data-ng-if=\"$ctrl.onUpdate || $ctrl.onDelete\"\n          class=\"pull-right\" uib-dropdown keyboard-nav\n        >\n          <button\n            uib-dropdown-toggle\n            class=\"budget-card-options-btn btn btn-link\"\n            data-label=\"Options\"\n          >\n            <i class=\"fa fa-ellipsis-v\" aria-hidden=\"true\" data-role=\"more-actions\"></i>\n          </button>\n          <ul\n            class=\"dropdown-menu dropdown-menu-right\"\n            uib-dropdown-menu role=\"menu\"\n            aria-labelledby=\"simple-btn-keyboard-nav\"\n          >\n            <li data-role=\"menuitem\">\n              <a href=\"javascript:void(0)\"\n                data-ng-if=\"$ctrl.onUpdate\"\n                data-ng-bind=\"$ctrl.labels.edit\"\n                data-ng-click=\"$ctrl.onUpdate()\"\n              ></a>\n              <a href=\"javascript:void(0)\"\n                data-ng-if=\"$ctrl.onDelete\"\n                data-ng-bind=\"$ctrl.labels.delete\"\n                data-ng-click=\"$ctrl.onDelete()\"\n              ></a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"budget-card-body panel-body-small\">\n        <div class=\"budget-card-chart panel-offset progress-indicator donut rotate-anticlockwise\"\n          data-ng-class=\"$ctrl.wrapperClass\"\n        >\n          <div class=\"donut-left-slice\"\n            data-ng-class=\"$ctrl.chartColor\"\n          ></div>\n          <div class=\"donut-right-slice\"\n            data-ng-class=\"$ctrl.chartColor\"\n          ></div>\n          <div class=\"progress-indicator-donut-overlay\">\n            <div class=\"d-table\">\n              <div class=\"d-table-cell\"\n                data-ng-class=\"$ctrl.amountColor\"\n              >\n                <h3 class=\"label-amount-left\">\n                  <ui-bb-format-amount class=\"amount-regular-color amount-integer\"\n                    data-amount=\"$ctrl.animateAvailableAmount\"\n                    data-currency=\"$ctrl.availableAmount.currencyCode\"\n                    data-wrap\n                  ></ui-bb-format-amount>\n                </h3>\n\n                <div data-ng-bind=\"$ctrl.labels.chart\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"panel-offset\">\n          <div class=\"budget-amount-group\"\n            data-ng-class=\"$ctrl.amountSpentColor\"\n          >\n            <span class=\"budget-amount-label\"\n              data-ng-class=\"$ctrl.amountSpentColor\"\n              data-ng-bind=\"$ctrl.labels.spent\"\n            ></span>\n            <ui-bb-format-amount class=\"budget-amount amount-regular-color amount-integer\"\n              data-amount=\"$ctrl.spent.amount\"\n              data-currency=\"$ctrl.spent.currencyCode\"\n              data-wrap\n            ></ui-bb-format-amount>\n          </div>\n\n          <div class=\"budget-amount-group\">\n            <span class=\"budget-amount-label\"\n              data-ng-bind=\"$ctrl.labels.limit\"\n            ></span>\n            <ui-bb-format-amount class=\"budget-amount amount-regular-color amount-integer\"\n              data-amount=\"$ctrl.spendingLimit.amount\"\n              data-currency=\"$ctrl.spendingLimit.currencyCode\"\n              data-wrap\n            ></ui-bb-format-amount>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n};\n\nexport default uiBbBudgetCardNg;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-budget-card-ng/scripts/component.js","import { CHART_LEVEL, CARD_COLOR_CLASSES, CHART_SLICE_CLASSES } from './constants';\n\n/* global angular, document */\n/**\n * @name uiBbBudgetCardController\n * @ngkey uiBbBudgetCardController\n * @type {function}\n *\n * @description\n * Card chart controller\n */\nconst uiBbBudgetCardController = function uiBbBudgetCardController(\n  $scope,\n  $element,\n  $window,\n  $timeout\n) {\n  const $ctrl = this;\n\n  /**\n   * @description\n   * Holder for the timestamp\n   *\n   * @inner\n   *\n   * @name animationStart\n   * @type {number}\n   */\n  let animationStart = null;\n\n  /**\n   * @name getRotatingElements\n   * @type {function}\n   *\n   * @description\n   * Returns rotating elements from DOM\n   *\n   * @inner\n   * @returns {object} Object with left and right rotating element\n   */\n  const getRotatingElements = () => ({\n    leftElToRotate: $element[0].querySelector(`.${CHART_SLICE_CLASSES.CLASS_CHART_SLICE_LEFT}`),\n    rightElToRotate: $element[0].querySelector(`.${CHART_SLICE_CLASSES.CLASS_CHART_SLICE_RIGHT}`),\n  });\n\n  /**\n   * @name checkAmountAnimationDelay\n   * @type {function}\n   *\n   * @description\n   * Helper function used to get the amount animation delay\n   *\n   * @inner\n   *\n   * @param {percentage} percentage of the full circle\n   * @returns {number}\n   */\n  const checkAmountAnimationDelay = percentage => (\n    percentage < 50 ? 300 : 600\n  );\n\n  /**\n   * @name calculateRotationAngle\n   * @type {function}\n   *\n   * @description\n   * Helper function used to calculate the rotation angle\n   *\n   * @inner\n   *\n   * @param {percentage} percentage of the full circle\n   * @returns {number}\n   */\n  const calculateRotationAngle = percentage =>\n    Math.round(360 * ((percentage < 50 ? percentage : (percentage - 50)) / 100));\n\n  /**\n   * @name toggleFullSliceRotation\n   * @type {function}\n   *\n   * @description\n   * Helper function used to tougle the class 'rotate-n-180-deg'\n   *\n   * @inner\n   *\n   * @param {slice} DOM element\n   * @returns {void}\n   */\n  const toggleFullSliceRotation = slice => (\n    slice.classList.contains('rotate-n-180-deg')\n      ? slice.classList.remove('rotate-n-180-deg')\n      : slice.classList.add('rotate-n-180-deg')\n  );\n\n  /**\n   * @name styleBudgetChart\n   * @type {function}\n   *\n   * @description\n   * Helper function used to style the budget chart\n   *\n   * @inner\n   *\n   * @returns {void}\n   */\n  const styleBudgetChart = () => {\n    switch ($ctrl.chartColorLevel) {\n      case CHART_LEVEL.WARNING:\n        $ctrl.chartColor = CARD_COLOR_CLASSES.CLASS_CHART_WARNING;\n        $ctrl.amountColor = CARD_COLOR_CLASSES.CLASS_LABEL_WARNING;\n        break;\n      case CHART_LEVEL.DANGER:\n        $ctrl.wrapperClass =\n          `${$ctrl.chartWrapperClass} ${CARD_COLOR_CLASSES.CLASS_CHART_DANGER_BRIGHT}`;\n\n        $ctrl.chartColor = CARD_COLOR_CLASSES.CLASS_CHART_DANGER;\n        $ctrl.amountColor = CARD_COLOR_CLASSES.CLASS_LABEL_DANGER;\n        $ctrl.amountSpentColor = CARD_COLOR_CLASSES.CLASS_LABEL_DANGER;\n        break;\n      default:\n        $ctrl.chartColor = CARD_COLOR_CLASSES.CLASS_CHART_SUCCESS;\n        $ctrl.amountColor = CARD_COLOR_CLASSES.CLASS_LABEL_SUCCESS;\n    }\n  };\n\n  /**\n   * @name animateAmountLeft\n   * @type {function}\n   *\n   * @description\n   * Helper function used to animate number counting\n   *\n   * @inner\n   *\n   * @param {timestamp} current timestamp\n   * @returns {void}\n   */\n  const animateAmountLeft = (timestamp) => {\n    if (!$ctrl.availableAmount) {\n      return;\n    }\n\n    if (!animationStart) {\n      animationStart = timestamp;\n    }\n\n    const progress = timestamp - animationStart;\n\n    if ($ctrl.animateAvailableAmount <= parseInt($ctrl.availableAmount.amount, 10)) {\n      $ctrl.animateAvailableAmount = $ctrl.availableAmount.amount;\n      return;\n    }\n\n    $ctrl.animateAvailableAmount -= 2;\n    $scope.$digest();\n\n    if (progress < checkAmountAnimationDelay($ctrl.spentPercentage)) {\n      $window.requestAnimationFrame(animateAmountLeft);\n    } else {\n      $ctrl.animateAvailableAmount = $ctrl.availableAmount.amount;\n      $scope.$digest();\n    }\n  };\n\n  /**\n   * @name checkChartAnimationDelay\n   * @type {function}\n   *\n   * @description\n   * Helper function used to get the chart animation delay\n   *\n   * @inner\n   *\n   * @param {percentage} percentage of the full circle\n   * @returns {number}\n   */\n  const checkChartAnimationDelay = percentage => (\n    percentage < 50 ? 600 : 300\n  );\n\n  /**\n   * @name animateChart\n   * @type {function}\n   *\n   * @description\n   * Helper function used to animate donat chart\n   *\n   * @inner\n   *\n   * @returns {void}\n   */\n  const animateChart = () => {\n    const perc = parseInt($ctrl.spentPercentage, 10);\n    const isRightSide = perc >= 0 && perc < 50;\n    const { leftElToRotate, rightElToRotate } = getRotatingElements();\n\n    if (perc === 50) {\n      toggleFullSliceRotation(leftElToRotate);\n    } else if (isRightSide) {\n      leftElToRotate.classList\n        .add(`rotate-n-${calculateRotationAngle(perc)}-deg`, 'transition-base');\n    } else if (!isRightSide || perc > 100) {\n      toggleFullSliceRotation(leftElToRotate);\n      leftElToRotate.classList.add('transition-base');\n\n      $timeout(() => {\n        toggleFullSliceRotation(leftElToRotate);\n        leftElToRotate.classList.add('reset-slice');\n\n        if (perc > 100) {\n          rightElToRotate.classList.add('rotate-n-180-deg', 'transition-base');\n        } else {\n          rightElToRotate.classList\n            .add(`rotate-n-${calculateRotationAngle(perc)}-deg`, 'transition-base');\n        }\n      }, checkChartAnimationDelay(perc));\n    }\n  };\n\n  /**\n   * @description\n   * Resets chart slices classes to initial state\n   *\n   * @name Controller#resetChart\n   * @type {function}\n   * @inner\n   */\n  const resetChart = () => {\n    $ctrl.amountSpentColor = null;\n    $ctrl.wrapperClass = $ctrl.chartWrapperClass;\n    const { leftElToRotate, rightElToRotate } = getRotatingElements();\n    leftElToRotate.classList.value = rightElToRotate.classList.value = '';\n    $timeout(() => {\n      leftElToRotate.classList.add(CHART_SLICE_CLASSES.CLASS_CHART_SLICE_LEFT);\n      leftElToRotate.classList.add($ctrl.chartColor);\n      rightElToRotate.classList.add(CHART_SLICE_CLASSES.CLASS_CHART_SLICE_RIGHT);\n      rightElToRotate.classList.add($ctrl.chartColor);\n    });\n  };\n\n  /**\n   * @description\n   * Trigger all chart related animations (circle, amount)\n   * and apply correct color\n   *\n   * @name Controller#doAnimations\n   * @type {function}\n   * @inner\n   */\n  const doAnimations = () => {\n    // reset classes if they have been appended already (chart update)\n    resetChart();\n\n    $window.requestAnimationFrame(animateAmountLeft);\n    $timeout(animateChart);\n    styleBudgetChart();\n  };\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name Controller#$onInit\n   * @type {function}\n   * @returns {void}\n   */\n  const $onInit = () => {\n    $scope.$watch('$ctrl.availableAmount.amount', doAnimations);\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n\n    /**\n     * @description\n     * Animated available amount\n     *\n     * @name animateAvailableAmount\n     * @type {number}\n     */\n    animateAvailableAmount: $ctrl.spendingLimit ? $ctrl.spendingLimit.amount : null,\n\n    /**\n     * @description\n     * Chart color\n     *\n     * @name chartColor\n     * @type {string}\n     */\n    chartColor: '',\n\n    /**\n     * @description\n     * Amount color\n     *\n     * @name amountColor\n     * @type {string}\n     */\n    amountColor: '',\n\n    /**\n     * @description\n     * Amount spent color\n     *\n     * @name amountSpentColor\n     * @type {string}\n     */\n    amountSpentColor: '',\n  });\n};\n\nexport default uiBbBudgetCardController;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-budget-card-ng/scripts/controller.js","/**\n * @name ChartLevel\n * @description\n * A set of constants which defines the color level\n * of the chart\n *\n * @type {object}\n */\nexport const CHART_LEVEL = {\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  DANGER: 'danger',\n};\n\n/**\n * @name CHART_SLICE_CLASSES\n * @description\n * A set of constants which defines CSS classes of\n * chart moving slices\n *\n * @type {object}\n */\nexport const CHART_SLICE_CLASSES = {\n  CLASS_CHART_SLICE_LEFT: 'donut-left-slice',\n  CLASS_CHART_SLICE_RIGHT: 'donut-right-slice',\n};\n\n/**\n * @name CARD_COLOR_CLASSES\n * @description\n * A set of constants which defines the color level\n * classes used to style the chart\n *\n * @type {object}\n */\nexport const CARD_COLOR_CLASSES = {\n  CLASS_LABEL_SUCCESS: 'label-color-success',\n  CLASS_CHART_SUCCESS: 'indicator-color-success',\n\n  CLASS_LABEL_WARNING: 'label-color-warning',\n  CLASS_CHART_WARNING: 'indicator-color-warning',\n\n  CLASS_LABEL_DANGER: 'label-color-danger',\n  CLASS_CHART_DANGER: 'indicator-color-danger',\n  CLASS_CHART_DANGER_BRIGHT: 'indicator-color-danger-bright',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-budget-card-ng/scripts/constants.js"],"sourceRoot":""}
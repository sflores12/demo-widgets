{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6631228c8804ae47938b","webpack:///./model.xml","webpack:///./scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./scripts/interceptors.js","webpack:///./scripts/utils.js","webpack:///./scripts/constans.js","webpack:///./scripts/configuration.js"],"names":["moduleKey","bbChallengeKey","module","provider","challengeToIntent","setChallengeToIntent","challengeToIntentObject","constructor","Object","assign","$get","bbIntent","$injector","$q","name","intents","noop","resolveIntent","keys","forEach","key","intentKey","create","intentResponse","interceptor","responseError","_response","response","status","header","headers","HEADER_ATTRIBUTE","config","$http","get","isChallengeResponse","reject","Promise","getChallengeTypeKey","newResolve","parseChallengeHeader","then","headerResult","processChallengeResponse","customHeaders","challengeType","split","isChallengeStatus","responseStatus","STATUS_CODE","Boolean","entries","map","value","join","result","QUOTE","DELIMITER","KEY_VALUE_SEPARATOR","next","keyLen","valueLen","valueIndex","length","indexOf","substring","trim","Error","push","JSON","parse","challengeResponse","challengeRequest","sms"],"mappings":"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","file":"lib-bb-challenge-ng/scripts/lib-bb-challenge-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-challenge-ng\", [\"vendor-bb-angular\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-challenge-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"lib-bb-challenge-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6631228c8804ae47938b","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module lib-bb-challenge\n * @description Handles challenge response\n * Known limitations of the library:\n * - It can only work with one request at a time.\n * - It can only work if the intent is handled on the same page.\n * On web, that could be a modal. On mobile if it navigates away,\n * the original page would need to be \"retained\".\n *\n * @example\n * The best place to inject library is the data module of capability that requires MFA\n * // index.js\n * ///////////\n * // Import lib-bb-challenge-ng\n * import bbChallengeModuleKey, {\n *   bbChallengeKey,\n * } from 'lib-bb-challenge-ng';\n *\n * // Inject it in your data module\n * export default angular\n *   .module(moduleKey, [\n *     cXPAuthenticationDataModuleKey,\n *     ...\n *     bbChallengeModuleKey,\n *   ])\n *   .provider(cXPAuthenticationDataKey, [() => {\n *     ...\n *     return {\n *       $get: [\n *         bbChallengeKey,\n *         // Into\n *         cXPAuthenticationData,\n *       ],\n *     }\n *   }])\n *   .config(['$httpProvider', ($httpProvider) => {\n *     // Configure $http service to use challenge interceptor\n *     $httpProvider.interceptors.push(bbChallengeKey);\n *   }])\n */\nimport angular from 'vendor-bb-angular';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport interceptor from './interceptors';\nimport challengeToIntentConf from './configuration';\n\nconst moduleKey = 'lib-bb-challenge-ng';\n\n/**\n * The dependency injection key for the BbChallenge Service\n * @name bbChallengeKey\n * @type {string}\n */\nexport const bbChallengeKey = `${moduleKey}:challenge`;\n\n/**\n * @name default\n * @type {string}\n * @description Angular module name\n */\nexport default angular\n  .module(moduleKey, [bbIntentModuleKey])\n  /**\n   * A provider that allows configuration of the challenge type/intent key map.\n   *\n   * @name BbChallengeProvider\n   * @ngkey lib-bb-challenge-ng:challengeProvider\n   * @type {object}\n   * @example\n   * // General usage:\n   * angular.module(...)\n   *   .config([\n   *     `${bbChallengeKey}Provider`,\n   *     (challengeProvider) => {\n   *       challengeProvider.setChallengeToIntent(...);\n   *     }\n   *   ]);\n   *\n   * export default [\n   *   ['lib-bb-challenge-ng:challengeProvider', (challenges) => {\n   *       challenges.setChallengeToIntent({sms: 'some.intent'});\n   *   }],\n   * ];\n   */\n  .provider(bbChallengeKey, () => {\n    let challengeToIntent = challengeToIntentConf;\n    return {\n      /**\n       * @name BbChallengeProvider#setChallengeToIntent\n       * @type {function}\n       * @param {object.<string>} routes A map of challenge types to intent keys\n       */\n      setChallengeToIntent: (challengeToIntentObject) => {\n        if ((!!challengeToIntentObject) && (challengeToIntentObject.constructor === Object)) {\n          challengeToIntent = Object.assign(challengeToIntentConf, challengeToIntentObject);\n        }\n      },\n\n      /**\n       * @name BbChallengeProvider#$get\n       * @type {function}\n       * @returns {function} Challenge service\n       */\n      $get: [\n        bbIntentKey,\n        '$injector',\n        '$q',\n        (bbIntent, $injector, $q) => interceptor(bbIntent, $injector, $q, challengeToIntent),\n      ],\n    };\n  })\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 3\n// module chunks = 0","import utils from './utils';\nimport { challengeResponse, challengeRequest } from './constans';\n\nexport default (bbIntent, $injector, $q, challengeToIntent) => {\n  const intents = {};\n  const noop = () => {};\n\n  let resolveIntent = noop;\n  // create all the intents upfront\n  Object.keys(challengeToIntent).forEach((key) => {\n    const intentKey = challengeToIntent[key];\n\n    intents[intentKey] = bbIntent.create(intentKey, (intentResponse) => {\n      resolveIntent(intentResponse);\n    });\n  });\n\n  const interceptor = {\n    responseError: (_response) => {\n      const response = _response;\n      const status = response.status;\n      const header =\n        response.headers(challengeResponse.HEADER_ATTRIBUTE) ||\n        response.config.headers[challengeResponse.HEADER_ATTRIBUTE];\n      const $http = $injector.get('$http');\n\n      if (!utils.isChallengeResponse(status, header)) {\n        return $q.reject(response);\n      }\n\n      return new Promise(newResolve => {\n        const intentKey = challengeToIntent[utils.getChallengeTypeKey(header)];\n        resolveIntent = newResolve;\n        intents[intentKey](utils.parseChallengeHeader(header));\n      })\n      .then(intentResponse => {\n        const headerResult = utils.processChallengeResponse(intentResponse);\n        const customHeaders = { [challengeRequest.HEADER_ATTRIBUTE]: headerResult };\n        delete response.config.headers[challengeResponse.HEADER_ATTRIBUTE];\n\n        Object.assign(response.config.headers, customHeaders);\n        resolveIntent = noop;\n      })\n      .then(() => $http(response.config));\n    },\n  };\n\n  return interceptor;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/interceptors.js","import { challengeResponse } from './constans';\nconst getChallengeTypeKey = challengeType => challengeType.split(' ')[0];\n\nconst isChallengeStatus = responseStatus =>\n  responseStatus === challengeResponse.STATUS_CODE;\n\nconst isChallengeResponse = (status, header) =>\n  Boolean(isChallengeStatus(status) && header);\n\nconst processChallengeResponse = response => Object.entries(response)\n  .map(([key, value]) => {\n    if (typeof value === 'string') {\n      return `${key}=\"${value}\"`;\n    }\n    return `${key}=${value}`;\n  })\n  .join(', ');\n\nconst parseChallengeHeader = header => {\n  const result = [];\n  const QUOTE = '\"';\n  const DELIMITER = ',';\n  const KEY_VALUE_SEPARATOR = '=';\n\n  let next = header;\n  let keyLen;\n  let key;\n  let value;\n  let valueLen;\n  let valueIndex;\n  while (next.length > 0) {\n    keyLen = next.indexOf(KEY_VALUE_SEPARATOR);\n    if (keyLen === -1){\n      keyLen = 0;\n    }\n    key = next.substring(0, keyLen).trim();\n    next = next.substring(keyLen + 1);\n   \n    value = null;\n    valueLen = 0;\n    valueIndex = 0;\n    if (next[0] === QUOTE) {\n      // Value is a string\n      do {\n        valueIndex++;\n        if (valueIndex > next.length) {\n          throw new Error('Malformed attribute value');\n        }\n\n        if (next[valueIndex] === QUOTE) {\n          if (next[valueIndex - 1] !== '\\\\') {\n            valueLen = valueIndex + 1;\n            value = next.substring(0, valueLen);\n          }\n        }\n      } while (!value);\n    } else {\n      // Value is a token\n      valueLen = next.indexOf(DELIMITER);\n      value = next.substring(valueIndex, valueLen).trim();\n    }\n    next = next.substring(valueLen + 1);\n    result.push(`\"${key}\": ${value}`);\n  }\n\n  return JSON.parse(`{${result.join(',')}}`);\n};\nexport default {\n  getChallengeTypeKey,\n  parseChallengeHeader,\n  isChallengeResponse,\n  processChallengeResponse,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/utils.js","export const challengeResponse = {\n  STATUS_CODE: 401,\n  HEADER_ATTRIBUTE: 'WWW-Authenticate',\n};\n\nexport const challengeRequest = {\n  HEADER_ATTRIBUTE: 'X-MFA',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/constans.js","/**\n * @name challengeToIntentConf\n * @type {object}\n *\n * Challenge type to intent key map\n * It can be customized in config-bb-providers\n *\n * export default [\n *   ['lib-bb-challenge-ng:challengeProvider', (challenges) => {\n *       challenges.setChallengeToIntent({sms: 'some.intent'});\n *   }],\n * ];\n */\nexport default {\n  sms: 'sms.auth.step',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/configuration.js"],"sourceRoot":""}
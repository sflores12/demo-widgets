{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap dcaf2abb135ce9e57553","webpack:///./ui-bb-loading-indicator-ng/model.xml","webpack:///external \"vendor-bb-angular\"","webpack:///./ui-bb-loading-indicator-ng/scripts/index.js","webpack:///./ui-bb-loading-indicator-ng/scripts/component.js","webpack:///./ui-bb-loading-indicator-ng/scripts/loading-indicator.controller.js"],"names":["module","component","name","bindings","isLoading","showDelay","loadingText","transclude","template","controller","uiBbLoadingIndicatorController","$timeout","ctrl","Object","assign","timeout","showComponent","$onChanges","changedObj","currentValue","cancel"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;;;;;;;ACoBA;;;;AAEA;;;;;;AAEA;;;;;AAxBA;;;;;;;;;;;;;;;;;;;;mBA6Be,0BAAQA,MAAR,CAAe,4BAAf,EAA6C,EAA7C,EACZC,SADY,CACF,wBADE,uBAEZC,I;;;;;;;;;;;;;AC/BH;;;;;;AAEA;;;;;;;;;;;;;;mBAce;AACbC,aAAU;AACRC,gBAAW,GADH;AAERC,gBAAW,GAFH;AAGRC,kBAAa;AAHL,IADG;AAMbC,eAAY,IANC;AAObC,iOAPa;AAabC,eAAY,CAAC,UAAD;AAbC,E;;;;;;;;;;;;AChBf;;;;;;;AAOA,KAAMC,iCAAiC,SAASA,8BAAT,CAAwCC,QAAxC,EAAkD;AACvF,OAAMC,OAAO,IAAb;AACAC,UAAOC,MAAP,CAAcF,IAAd,EAAoB,EAAEG,SAAS,IAAX,EAAiBC,eAAeJ,KAAKR,SAArC,EAApB;AACAQ,QAAKK,UAAL,GAAkB,UAACC,UAAD,EAAgB;AAChC,SAAIA,WAAWd,SAAX,CAAqBe,YAAzB,EAAuC;AACrCP,YAAKG,OAAL,GAAeJ,SAAS,YAAM;AAC5BC,cAAKI,aAAL,GAAqB,IAArB;AACAJ,cAAKG,OAAL,GAAe,IAAf;AACD,QAHc,EAGZH,KAAKP,SAAL,IAAkB,CAHN,CAAf;AAID,MALD,MAKO;AACL,WAAIO,KAAKG,OAAT,EAAkB;AAChBJ,kBAASS,MAAT,CAAgBR,KAAKG,OAArB;AACD;AACDH,YAAKI,aAAL,GAAqB,KAArB;AACD;AACF,IAZD;AAaD,EAhBD;;mBAkBeN,8B","file":"ui-bb-loading-indicator-ng/scripts/ui-bb-loading-indicator-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-loading-indicator-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-loading-indicator-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"ui-bb-loading-indicator-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dcaf2abb135ce9e57553","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-loading-indicator-ng/model.xml\n// module id = 0\n// module chunks = 20","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40","/**\n * @module ui-bb-loading-indicator-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbLoadingIndicatorKey from 'ui-bb-loading-indicator-ng';\n *\n * export const dependencyKeys = [\n *   uiBbLoadingIndicatorKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-loading-indicator-ng\n *   is-loading=\"$ctrl.loading\"\n *   show-delay=\"$ctrl.loadingDelay\"\n *   loading-text=\"Loading...\">\n *   Content available when loading is finished\n * </ui-bb-loading-indicator-ng>\n */\nimport angular from 'vendor-bb-angular';\n\nimport component from './component';\n\n/**\n * @description The angular module name\n * @name default\n * @type {string}\n */\nexport default angular.module('ui-bb-loading-indicator-ng', [])\n  .component('uiBbLoadingIndicatorNg', component)\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-loading-indicator-ng/scripts/index.js","import UiBbLoadingIndicatorController from './loading-indicator.controller';\n\n/**\n * @name uiBbLoadingIndicatorNg\n * @type {object}\n * @description\n * Loading indicator component.\n *\n * @property {boolean} isLoading Controls whether or not loading indicator is visible\n * @property {?number} showDelay Loading message display delay in ms\n *\n * Can be used to avoid bad user experience while rebuilding parts of the current form\n * based on changes in user input/selection. Rather than displaying loading message immediately,\n * it will pop up on slow server response only\n * @property {string} loadingText Loading message\n */\nexport default {\n  bindings: {\n    isLoading: '<',\n    showDelay: '<',\n    loadingText: '@',\n  },\n  transclude: true,\n  template: `\n    <div data-ng-if=\"$ctrl.showComponent\" class=\"jumbotron text-center\">\n      {{ $ctrl.loadingText || 'Loading...' }}\n    </div>\n    <ng-transclude data-ng-if=\"!$ctrl.showComponent\"></ng-transclude>\n  `,\n  controller: ['$timeout', UiBbLoadingIndicatorController],\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-loading-indicator-ng/scripts/component.js","/**\n * @name uiBbLoadingIndicatorController\n * @ngkey uiBbLoadingIndicatorController\n * @type {function}\n * @description\n * Loading indicator Controller\n */\nconst uiBbLoadingIndicatorController = function uiBbLoadingIndicatorController($timeout) {\n  const ctrl = this;\n  Object.assign(ctrl, { timeout: null, showComponent: ctrl.isLoading });\n  ctrl.$onChanges = (changedObj) => {\n    if (changedObj.isLoading.currentValue) {\n      ctrl.timeout = $timeout(() => {\n        ctrl.showComponent = true;\n        ctrl.timeout = null;\n      }, ctrl.showDelay || 0);\n    } else {\n      if (ctrl.timeout) {\n        $timeout.cancel(ctrl.timeout);\n      }\n      ctrl.showComponent = false;\n    }\n  };\n};\n\nexport default uiBbLoadingIndicatorController;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-loading-indicator-ng/scripts/loading-indicator.controller.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9a6bb0b6e4e123cfca30","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http.js"],"names":["accessGroupsDataModuleKey","accessGroupsDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","getAccessgroupsData","params","url","method","then","catch","err","postAccessgroupsDataRecord","getAccessgroupsFunction","postAccessgroupsFunctionRecord","getAccessgroupsConfigFunctions","postAccessgroupsUsersRecord","getAccessgroupsUsers","postAccessgroupsServiceagreementsRecord","getAccessgroupsServiceagreements","postAccessgroupsUsercontextRecord","getAccessgroupsDataRecord","id","putAccessgroupsDataRecord","deleteAccessgroupsDataRecord","getAccessgroupsFunctionRecord","putAccessgroupsFunctionRecord","deleteAccessgroupsFunctionRecord","getAccessgroupsUsersRecord","getAccessgroupsUsersPrivileges","getAccessgroupsUsersPermissions","postAccessgroupsUsersFunctionRecord","postAccessgroupsUsersDataRecord","getAccessgroupsUsersPrivilegesArrangements","getAccessgroupsUsersPermissionsSummary","getAccessgroupsServiceagreementsRecord","serviceAgreementId","putAccessgroupsServiceagreementsRecord","getAccessgroupsServiceagreementsRoles","getAccessgroupsServiceagreementsAdminsMe","postAccessgroupsServiceagreementsIngestServiceagreementsRecord","getAccessgroupsServiceagreementsParticipants","getAccessgroupsServiceagreementsAdmins","putAccessgroupsServiceagreementsAdminsRecord","getAccessgroupsServiceagreementsUsers","putAccessgroupsServiceagreementsUsersRecord","getAccessgroupsServiceagreementsFunctions","deleteAccessgroupsServiceagreementsUsersRecord","userId","putAccessgroupsServiceagreementsConsumersFunctionsRecord","consumerId","deleteAccessgroupsServiceagreementsConsumersFunctionsRecord","functionAccessGroupId","putAccessgroupsServiceagreementsConsumersFunctionsDataRecord","deleteAccessgroupsServiceagreementsConsumersFunctionsDataRecord","dataAccessGroupId","getAccessgroupsServiceagreementsFunctionsData","getAccessgroupsUsercontextServiceagreements","getAccessgroupsUsercontextServiceagreementsLegalentities","schemas"],"mappings":"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","file":"data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-accessgroups-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-accessgroups-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-accessgroups-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9a6bb0b6e4e123cfca30","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-accessgroups-http-ng\n *\n * @description A data module for accessing the AccessGroups REST API.\n *\n * @returns {String} `data-bb-accessgroups-http-ng`\n * @example\n * import accessGroupsDataModuleKey, {\n *   accessGroupsDataKey,\n * } from 'data-bb-accessgroups-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport accessGroupsData from './data-bb-accessgroups-http';\n\nconst accessGroupsDataModuleKey = 'data-bb-accessgroups-http-ng';\n/**\n * @name accessGroupsDataKey\n * @type {string}\n * @description Angular dependency injection key for the AccessGroupsData service\n */\nexport const accessGroupsDataKey = 'data-bb-accessgroups-http-ng:accessGroupsData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(accessGroupsDataModuleKey, [])\n  \n  /**\n   * @constructor AccessGroupsData\n   * @type {object}\n   *\n   * @description Public api for data-bb-accessgroups-http-ng service\n   *\n   */\n  .provider(accessGroupsDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name AccessGroupsDataProvider\n     * @type {object}\n     * @ngkey data-bb-accessgroups-http-ng:accessGroupsDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-accessgroups-http-ng:accessGroupsDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-accessgroups-http-ng:accessGroupsDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name AccessGroupsDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name AccessGroupsDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       accessGroupsData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['AccessGroupsData.GetDataAccessGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"dataAccessGroupId\":{\"type\":\"string\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.DataAccessGroupItem'] = {\"properties\":{\"dataAccessGroupId\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.DataAccessGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"type\":{\"type\":\"string\",\"required\":true},\"items\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.GetFunctionAccessGroups'] = {\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.FunctionAccessGroupItem'] = {\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.FunctionAccessGroupItemBase'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"permissions\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"required\":true},\"assignedPrivileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetFunctions'] = {\"type\":\"array\",\"items\":{\"properties\":{\"functionId\":{\"type\":\"string\",\"required\":true},\"functionCode\":{\"type\":\"string\",\"required\":true},\"resource\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true},\"privileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserItem'] = {\"properties\":{\"userId\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.AssignFunctionAccessGroup'] = {\"properties\":{\"functionAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":true},\"revoke\":{\"type\":\"boolean\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.AssignDataAccessGroup'] = {\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"required\":true},\"revoke\":{\"type\":\"boolean\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.GetUser'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupsByFunctionAccessGroup\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetUsers'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"userId\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S+$\",\"required\":true},\"serviceAgreementId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupsByFunctionAccessGroup\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}}};\n  \n  definedTypes['AccessGroupsData.GetPrivileges'] = {\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ArrangementPrivileges'] = {\"type\":\"array\",\"items\":{\"properties\":{\"arrangementId\":{\"type\":\"string\",\"required\":true},\"privileges\":{\"type\":\"array\",\"items\":{\"properties\":{\"privilege\":{\"type\":\"string\",\"required\":true},\"limits\":{\"type\":\"array\",\"items\":{\"properties\":{\"limitType\":{\"enum\":[\"daily\",\"weekly\",\"monthly\",\"upper\"],\"required\":true},\"amount\":{\"type\":\"number\",\"required\":false}}},\"required\":false}}},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementPost'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"providers\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true},\"consumers\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementPut'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":128,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":false},\"description\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":255,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":false},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetServiceAgreements'] = {\"type\":\"array\",\"items\":{\"properties\":{\"creatorLegalEntity\":{\"type\":\"string\",\"required\":true},\"providers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":false},\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false},\"consumers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":false},\"dataAccessGroupFunctionAccessGroupPairs\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupId\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementItem'] = {\"properties\":{\"creatorLegalEntity\":{\"type\":\"string\",\"required\":true},\"providers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":false},\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false},\"consumers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":false},\"dataAccessGroupFunctionAccessGroupPairs\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionAccessGroupId\":{\"type\":\"string\",\"required\":true},\"dataAccessGroupId\":{\"type\":\"string\",\"required\":true}}},\"required\":false},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementParticipants'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"externalId\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true},\"roles\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"maxItems\":2,\"uniqueItems\":true,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.GetServiceAgreementRoles'] = {\"properties\":{\"roles\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.IdItem'] = {\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.UpdateAdmins'] = {\"properties\":{\"consumers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":true}}},\"minItems\":1,\"required\":false},\"providers\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"admins\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":true}}},\"minItems\":1,\"required\":false}}};\n  \n  definedTypes['AccessGroupsData.GetServiceAgreementsAdmin'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S+$\",\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":false},\"name\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"description\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"isMaster\":{\"type\":\"boolean\",\"default\":false,\"required\":false},\"roles\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"maxItems\":2,\"uniqueItems\":true,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ServiceAgreementUsers'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"externalId\":{\"type\":\"string\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"required\":true},\"fullName\":{\"type\":\"string\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.ProviderUserForServiceAgreement'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.ExposeFunctionAccessGroups'] = {\"properties\":{\"functionAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"uniqueItems\":true,\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.ExposeDataAccessGroups'] = {\"properties\":{\"dataAccessGroupIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"uniqueItems\":true,\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.ServicesAgreementIngest'] = {\"properties\":{\"name\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":false},\"description\":{\"type\":\"string\",\"minLength\":1,\"pattern\":\"^\\\\S(.*(\\\\S))?$\",\"required\":true},\"consumersToIngest\":{\"type\":\"array\",\"items\":{\"properties\":{\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":false},\"functionDataGroupPairs\":{\"type\":\"array\",\"items\":{\"properties\":{\"functionGroup\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":false},\"dataGroup\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"minItems\":1,\"uniqueItems\":true,\"required\":true}}},\"uniqueItems\":true,\"required\":false}}},\"minItems\":1,\"uniqueItems\":true,\"required\":true},\"providersToIngest\":{\"type\":\"array\",\"items\":{\"properties\":{\"users\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"uniqueItems\":true,\"required\":false}}},\"minItems\":1,\"uniqueItems\":true,\"required\":true}}};\n  \n  definedTypes['AccessGroupsData.PermissionsSummary'] = {\"type\":\"array\",\"items\":{\"properties\":{\"resource\":{\"type\":\"string\",\"required\":true},\"function\":{\"type\":\"string\",\"required\":true},\"permissions\":{\"type\":\"object\",\"properties\":{},\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContextServiceAgreements-GET'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"externalId\":{\"type\":\"string\",\"minLength\":1,\"maxLength\":36,\"pattern\":\"^\\\\S+$\",\"required\":false},\"name\":{\"type\":\"string\",\"required\":true},\"description\":{\"type\":\"string\",\"required\":true},\"isMaster\":{\"type\":\"boolean\",\"default\":false,\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContextLegalEntities-GET'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true}}}};\n  \n  definedTypes['AccessGroupsData.UserContext-POST'] = {\"properties\":{\"serviceAgreementId\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":true},\"legalEntityId\":{\"type\":\"string\",\"pattern\":\"^[0-9a-f]{32}\",\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef AccessGroupsData.AdminItem\n   * @type {Object}\n   * @property {String} id\n   * @property {Array.<String>} admins\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ArrangementPrivilegeItem\n   * @type {Object}\n   * @property {String} arrangementId\n   * @property {Array.<AccessGroupsData.PrivilegeItem>} privileges\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ArrangementPrivileges\n   * @type {Array.<AccessGroupsData.ArrangementPrivilegeItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.AssignDataAccessGroup\n   * @type {Object}\n   * @property {String} functionAccessGroupId\n   * @property {Array.<String>} dataAccessGroupIds\n   * @property {Boolean} revoke\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.AssignFunctionAccessGroup\n   * @type {Object}\n   * @property {Array.<String>} functionAccessGroupIds\n   * @property {Boolean} revoke\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ConsumerItem\n   * @type {Object}\n   * @property {?Array.<String>} users User external ids\n   * @property {?Array.<AccessGroupsData.Definitions/saPairs>} functionDataGroupPairs Function and data group pairs\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ConsumersItem\n   * @type {Object}\n   * @property {?String} id\n   * @property {?Array.<AccessGroupsData.PairItem>} dataAccessGroupFunctionAccessGroupPairs\n   * @property {?Array.<String>} admins\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataAccessGroupItem\n   * @type {Object}\n   * @property {String} dataAccessGroupId Data group id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataAccessGroupItemBase\n   * @type {Object}\n   * @property {String} name Data group name\n   * @property {String} description Data group description\n   * @property {String} legalEntityId Id of Legal Entity on which Data group belongs.\n   * @property {String} type Data group type\n   * @property {Array.<String>} items Data group items\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.DataaccessgroupsforfunctionaccessgroupItem\n   * @type {Object}\n   * @property {String} functionAccessGroupId\n   * @property {?Array.<String>} dataAccessGroupIds\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.Definitions/saPairs\n   * @type {Object}\n   * @property {?String} functionGroup\n   * @property {Array.<String>} dataGroup\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ExposeDataAccessGroups\n   * @type {Object}\n   * @property {Array.<String>} dataAccessGroupIds\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ExposeFunctionAccessGroups\n   * @type {Object}\n   * @property {Array.<String>} functionAccessGroupIds\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionAccessGroupItem\n   * @type {Object}\n   * @property {String} functionAccessGroupId Function group id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionAccessGroupItemBase\n   * @type {Object}\n   * @property {String} name Function group name\n   * @property {String} description Function group description\n   * @property {String} legalEntityId Id of Legal Entity on which Function group belongs.\n   * @property {?Array.<AccessGroupsData.PermissionItem>} permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.FunctionsItem\n   * @type {Object}\n   * @property {String} functionId\n   * @property {String} functionCode\n   * @property {String} resource\n   * @property {String} name\n   * @property {Array.<AccessGroupsData.PrivilegeItem>} privileges\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetDataAccessGroups\n   * @type {Array.<AccessGroupsData.DataAccessGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetFunctionAccessGroups\n   * @type {Array.<AccessGroupsData.FunctionAccessGroupItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetFunctions\n   * @type {Array.<AccessGroupsData.FunctionsItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetPrivileges\n   * @type {Array.<AccessGroupsData.GetPrivilegesItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetPrivilegesItem\n   * @type {Object}\n   * @property {String} privilege\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetServiceAgreementRoles\n   * @type {Object}\n   * @property {Array.<String>} roles\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetServiceAgreements\n   * @type {Array.<AccessGroupsData.ServiceagreementGet>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetServiceAgreementsAdmin\n   * @type {Array.<AccessGroupsData.ServiceagreementAdminItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetUser\n   * @type {Object}\n   * @property {String} id\n   * @property {String} userId\n   * @property {String} serviceAgreementId\n   * @property {?Array.<AccessGroupsData.DataaccessgroupsforfunctionaccessgroupItem>} dataAccessGroupsByFunctionAccessGroup\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.GetUsers\n   * @type {Array.<AccessGroupsData.GetUser>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.IdItem\n   * @type {Object}\n   * @property {String} id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.LegalEntityItem\n   * @type {Object}\n   * @property {String} id\n   * @property {String} name Legal entity name to display\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.LimitItem\n   * @type {Object}\n   * @property {String} limitType One of \"daily\", \"weekly\", \"monthly\", \"upper\"\n   * @property {?Number} amount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PairItem\n   * @type {Object}\n   * @property {String} functionAccessGroupId\n   * @property {String} dataAccessGroupId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PermissionItem\n   * @type {Object}\n   * @property {String} functionId\n   * @property {Array.<AccessGroupsData.PrivilegeItem>} assignedPrivileges\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PermissionsSummary\n   * @type {Array.<AccessGroupsData.PermissionsSummaryItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PermissionsSummaryItem\n   * @type {Object}\n   * @property {String} resource Resource name\n   * @property {String} function Business function name\n   * @property {AccessGroupsData.permissions} permissions Allowed user permissions\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.PrivilegeItem\n   * @type {Object}\n   * @property {String} privilege\n   * @property {?Array.<AccessGroupsData.LimitItem>} limits\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ProviderItem\n   * @type {Object}\n   * @property {?Array.<String>} users User external ids\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ProviderUserForServiceAgreement\n   * @type {Object}\n   * @property {String} id\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ProvidersItem\n   * @type {Object}\n   * @property {?String} id\n   * @property {?Array.<String>} users\n   * @property {?Array.<String>} admins\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementItem\n   * @type {Object}\n   * @property {String} creatorLegalEntity\n   * @property {?Array.<AccessGroupsData.ProvidersItem>} providers\n   * @property {?Array.<AccessGroupsData.ConsumersItem>} consumers\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPartialItem\n   * @type {Object}\n   * @property {String} id\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {String} name Service agreement name to display\n   * @property {String} description Brief text to describe service agreement\n   * @property {Boolean} isMaster Defines default service agreement when none selected, only one can hold true value\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementParticipantItem\n   * @type {Object}\n   * @property {String} id Legal Entity Id\n   * @property {String} externalId External id of the Legal Entity\n   * @property {String} name Name of the Legal Entity\n   * @property {Array.<String>} roles The roles into the service agreement for the given user\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementParticipants\n   * @type {Array.<AccessGroupsData.ServiceAgreementParticipantItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPost\n   * @type {Object}\n   * @property {String} name Service Agreement name\n   * @property {String} description Service Agreement description\n   * @property {Array.<String>} providers Service Agreement providers\n   * @property {Array.<String>} consumers Service Agreement consumers\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementPut\n   * @type {Object}\n   * @property {?String} name Service Agreement name\n   * @property {?String} description Service Agreement description\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUserGet\n   * @type {Object}\n   * @property {String} id\n   * @property {String} externalId\n   * @property {String} legalEntityId\n   * @property {String} fullName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceAgreementUsers\n   * @type {Array.<AccessGroupsData.ServiceAgreementUserGet>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceagreementAdminItem\n   * @type {Object}\n   * @property {String} id Service agreement id\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {String} name Name of the service agreement\n   * @property {String} description Description of the service agreement\n   * @property {?Boolean} isMaster Defines weather service agreement is master\n   * @property {Array.<String>} roles The roles into the service agreement for the given user\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServiceagreementGet\n   * @type {Object}\n   * @property {String} creatorLegalEntity\n   * @property {?Array.<AccessGroupsData.ProvidersItem>} providers\n   * @property {?Array.<AccessGroupsData.ConsumersItem>} consumers\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.ServicesAgreementIngest\n   * @type {Object}\n   * @property {String} name The service agreement name\n   * @property {?String} externalId External ID of Service Agreement\n   * @property {String} description Description\n   * @property {Array.<AccessGroupsData.ConsumerItem>} consumersToIngest Consumers of the service agreement\n   * @property {Array.<AccessGroupsData.ProviderItem>} providersToIngest Providers of the service agreement\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UpdateAdmins\n   * @type {Object}\n   * @property {?Array.<AccessGroupsData.AdminItem>} consumers\n   * @property {?Array.<AccessGroupsData.AdminItem>} providers\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContext-POST\n   * @type {Object}\n   * @property {String} serviceAgreementId\n   * @property {String} legalEntityId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContextLegalEntities-GET\n   * @type {Array.<AccessGroupsData.LegalEntityItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserContextServiceAgreements-GET\n   * @type {Array.<AccessGroupsData.ServiceAgreementPartialItem>}\n   */\n  \n  /**\n   * @typedef AccessGroupsData.UserItem\n   * @type {Object}\n   * @property {String} userId\n   * @property {?String} serviceAgreementId\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef AccessGroupsData.permissions\n   * @type {Object}\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsData\n   * @type {Function}\n   * @description # List Data Groups\n\nProvides a list of all data groups for given Legal Entity ID and type.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.legalEntityId Id of Legal Entity. Eg: 1002.\n     \n   * @param {string} params.type Type od data group. Eg: arrangements.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetDataAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsData(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsData(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Create Data Group\n\nCreates a new data group.\n   \n   * @param {AccessGroupsData.DataAccessGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsDataRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsDataRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunction\n   * @type {Function}\n   * @description # List Function Groups\n\nProvides a list of all function groups for given Legal Entity ID.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.legalEntityId Legal Entity ID. Eg: 1002.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctionAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunction(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunction(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Create Function Group\n\nCreates a new function group.\n   \n   * @param {AccessGroupsData.FunctionAccessGroupItemBase} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsFunctionRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsFunctionRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsConfigFunctions\n   * @type {Function}\n   * @description # List All Business Functions\n\nProvides a list of all available business functions that can be used in setting up Entitlements permissions.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctions} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsConfigFunctions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsConfigFunctions(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/config/functions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersRecord\n   * @type {Function}\n   * @description # Create User Access\n\nCreates a new user access.\n   \n   * @param {AccessGroupsData.UserItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsers\n   * @type {Function}\n   * @description # List User Accesses\n\nProvides all user accesses (optionally can be queried by user ID or service agreement ID).\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.userId User ID. Eg: 8a48e2685d788166015d791b0b9f0003.\n     \n   * @param {?string} params.serviceAgreementId Service agreement ID. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsers(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsers(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Create Service Agreement\n\nCreates a new Service Agreement with specified providers and consumers.\n   \n   * @param {AccessGroupsData.ServiceAgreementPost} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreements\n   * @type {Function}\n   * @description # List Service Agreements\n\nProvides a list of all service agreements that have been created by given Legal Entity (creator).\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.creatorId Legal entity ID that created the service agreement.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetServiceAgreements} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsercontextRecord\n   * @type {Function}\n   * @description Create user context for current user\n   \n   * @param {AccessGroupsData.UserContext-POST} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsercontextRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsercontextRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Retrieve Data Group details\n\nRetrieves details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.DataAccessGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsDataRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsDataRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Update Data Group details\n\nUpdates details for a specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.DataAccessGroupItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsDataRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsDataRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsDataRecord\n   * @type {Function}\n   * @description # Delete Data Group\n\nDeletes the specific data group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsDataRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsDataRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/data/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Retrieve Function Group details\n\nRetrieves details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.FunctionAccessGroupItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsFunctionRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsFunctionRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Update Function Group details\n\nUpdates details for a specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.FunctionAccessGroupItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsFunctionRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsFunctionRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsFunctionRecord\n   * @type {Function}\n   * @description # Delete Function Group\n\nDeletes the specific function group.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsFunctionRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsFunctionRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/function/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersRecord\n   * @type {Function}\n   * @description # Provides User Access details\n\nProvides User Access details such as assigned user id, service agreement id, function groups and data groups.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetUser} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersRecord(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersRecord(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPrivileges\n   * @type {Function}\n   * @description # List User privileges for given Business function\n\nProvides a list of user privileges for given business function(eg. Contacts).\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User ID. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d788166015d791b0b9f0003.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPrivileges(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPrivileges(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/privileges`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPermissions\n   * @type {Function}\n   * @description # Check if User is allowed to perform given action\n\nChecks if the user has the specific privileges for given business function.\n\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User Id. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d787f78015d791ab6123456.\n     \n   * @param {string} params.functionName Name of Function. Eg: Contacts.\n     \n   * @param {string} params.resourceName Name of Resource. Eg: Contacts.\n     \n   * @param {string} params.privileges comma-separated privileges. Eg: view,create,execute.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPermissions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPermissions(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/permissions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersFunctionRecord\n   * @type {Function}\n   * @description # Assign/remove Function groups to user access\n\nAssigns or removes the specified Function Groups to the given User access.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.AssignFunctionAccessGroup} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersFunctionRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersFunctionRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}/function`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsUsersDataRecord\n   * @type {Function}\n   * @description # Assign/remove Data groups to user access\n\nAssigns or removes specified Data Groups to the given User access/function group.\n\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.AssignDataAccessGroup} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsUsersDataRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsUsersDataRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/${id}/data`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPrivilegesArrangements\n   * @type {Function}\n   * @description # List Arrangements that user has access to\n\nProvides (retrieve) list of Arrangements along with appropriate privilege(s) that given User has access to.\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.userId User Id. Eg: 8a48e2685d787f78015d791ab6ad0002.\n     \n   * @param {?string} params.serviceAgreementId Service Agreement Id. Eg: 8a48e2685d787f78015d791ab6123456.\n     \n   * @param {string} params.functionName Name of function. Eg: Product Summary.\n     \n   * @param {string} params.resourceName Name of resource. Eg: Product Summary.\n     \n   * @param {?string} params.privilegeName Name of privilege. Eg: view.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ArrangementPrivileges} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPrivilegesArrangements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPrivilegesArrangements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/privileges/arrangements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsersPermissionsSummary\n   * @type {Function}\n   * @description # User Permissions Summary\n\nReturns aggregated summary of user permissions.\nReturned data structure will contain all allowed Resources + Business Functions + Permissions.\n\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.PermissionsSummary} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsersPermissionsSummary(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsersPermissionsSummary(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/users/permissions/summary`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Retrieve Service Agreement details\n\nRetrieves Service Agreement details by given ID.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsRecord(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsRecord(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsRecord\n   * @type {Function}\n   * @description # Update Service Agreement details\n\nUpdates name, description and external Id for a specific service agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {AccessGroupsData.ServiceAgreementPut} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsRecord(serviceAgreementId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsRecord(serviceAgreementId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsRoles\n   * @type {Function}\n   * @description # List Service Agreement Roles\n\nProvides a list of all service agreement roles.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetServiceAgreementRoles} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsRoles(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsRoles(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/roles`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsAdminsMe\n   * @type {Function}\n   * @description # List Service Agreements where the User is Admin\n\nProvides a list of all Service Agreements where the authenticated User is Admin.\n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetServiceAgreementsAdmin} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsAdminsMe(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsAdminsMe(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/admins/me`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#postAccessgroupsServiceagreementsIngestServiceagreementsRecord\n   * @type {Function}\n   * @description # Ingest Service Agreement\n\nCreates new Service Agreement (required to provide Legal Entity participants together with Admins).\n   \n   * @param {AccessGroupsData.ServicesAgreementIngest} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.IdItem} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .postAccessgroupsServiceagreementsIngestServiceagreementsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postAccessgroupsServiceagreementsIngestServiceagreementsRecord(data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/ingest/serviceagreements`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsParticipants\n   * @type {Function}\n   * @description # Retrieve Service Agreement participants\n\nRetrieves Legal Entities that are participants in Service Agreement together with their roles in the Service Agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementParticipants} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsParticipants(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsParticipants(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}/participants`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsAdmins\n   * @type {Function}\n   * @description # Retrieve Service Agreement admins\n\nRetrieves Users that are admins in Service Agreement.\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsAdmins(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsAdmins(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${serviceAgreementId}/admins`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsAdminsRecord\n   * @type {Function}\n   * @description # Add admins in Service Agreement\n\nAdds Admins to a given Service Agreement, per role and Legal Entity participant.\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.UpdateAdmins} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsAdminsRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsAdminsRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/admins`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsUsers\n   * @type {Function}\n   * @description # List users in Service Agreement\n\nProvides a list of all users that belong to a given Service Agreement.\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.ServiceAgreementUsers} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsUsers(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsUsers(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/users`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsUsersRecord\n   * @type {Function}\n   * @description # Add User in a Service Agreement\n\nAdds a User in a Service Agreement (Users can be added only from Provider Legal Entity participant).\n   \n   * @param {string} id \n     \n   \n   * @param {AccessGroupsData.ProviderUserForServiceAgreement} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsUsersRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsUsersRecord(id, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/users`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsFunctions\n   * @type {Function}\n   * @description # List Exposed Function Groups\n\nProvides a list of the exposed Function Groups for every Consumer under the same Service Agreement.\n\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetFunctionAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsFunctions(id, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsFunctions(id, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/functions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsServiceagreementsUsersRecord\n   * @type {Function}\n   * @description # Remove User from Service Agreement\n\nRemoves the specified User from given Service Agreement.\n   \n   * @param {string} id \n     \n   \n   * @param {string} userId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsServiceagreementsUsersRecord(id, userId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsServiceagreementsUsersRecord(id, userId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/users/${userId}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsConsumersFunctionsRecord\n   * @type {Function}\n   * @description # Expose Function Groups in Service Agreement\n\nExposes Function Groups to a Service Agreement.\nThe Function Groups can be exposed only by Admin of Consumer Legal Entity participant.\n\n   \n   * @param {string} id \n     \n   \n   * @param {string} consumerId \n     \n   \n   * @param {AccessGroupsData.ExposeFunctionAccessGroups} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsConsumersFunctionsRecord(id, consumerId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsConsumersFunctionsRecord(id, consumerId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/consumers/${consumerId}/functions`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsServiceagreementsConsumersFunctionsRecord\n   * @type {Function}\n   * @description # Remove Exposed Function Group\n\nRemoves Function Group from Service Agreement.\nThe Function Group can be removed only by Admin of Consumer Legal Entity participant.\n   \n   * @param {string} id \n     \n   \n   * @param {string} consumerId \n     \n   \n   * @param {string} functionAccessGroupId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsServiceagreementsConsumersFunctionsRecord(id, consumerId, functionAccessGroupId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsServiceagreementsConsumersFunctionsRecord(id, consumerId, functionAccessGroupId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/consumers/${consumerId}/functions/${functionAccessGroupId}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#putAccessgroupsServiceagreementsConsumersFunctionsDataRecord\n   * @type {Function}\n   * @description # Expose Data Groups in Service Agreement\n\nExposes Data Groups to a Service Agreement.\nThe Data Groups can be exposed only by Admin of Consumer Legal Entity participant.\n\n   \n   * @param {string} id \n     \n   \n   * @param {string} consumerId \n     \n   \n   * @param {string} functionAccessGroupId \n     \n   \n   * @param {AccessGroupsData.ExposeDataAccessGroups} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .putAccessgroupsServiceagreementsConsumersFunctionsDataRecord(id, consumerId, functionAccessGroupId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putAccessgroupsServiceagreementsConsumersFunctionsDataRecord(id, consumerId, functionAccessGroupId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/consumers/${consumerId}/functions/${functionAccessGroupId}/data`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#deleteAccessgroupsServiceagreementsConsumersFunctionsDataRecord\n   * @type {Function}\n   * @description # Remove Exposed Data Group\n\nRemoves Data Group from Service Agreement.\nThe Data Group can be removed only by Admin of Consumer Legal Entity participant.\n   \n   * @param {string} id \n     \n   \n   * @param {string} consumerId \n     \n   \n   * @param {string} functionAccessGroupId \n     \n   \n   * @param {string} dataAccessGroupId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>}\n   *\n   * @example\n   * accessGroupsData\n   *  .deleteAccessgroupsServiceagreementsConsumersFunctionsDataRecord(id, consumerId, functionAccessGroupId, dataAccessGroupId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteAccessgroupsServiceagreementsConsumersFunctionsDataRecord(id, consumerId, functionAccessGroupId, dataAccessGroupId, data, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/consumers/${consumerId}/functions/${functionAccessGroupId}/data/${dataAccessGroupId}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsServiceagreementsFunctionsData\n   * @type {Function}\n   * @description # List Exposed Data Groups\n\nProvides a list of the exposed Data Groups for a specific Function Group under a specific Service Agreement.\n\n   \n   * @param {string} id \n     \n   \n   * @param {string} functionAccessGroupId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.GetDataAccessGroups} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsServiceagreementsFunctionsData(id, functionAccessGroupId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsServiceagreementsFunctionsData(id, functionAccessGroupId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/serviceagreements/${id}/functions/${functionAccessGroupId}/data`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsercontextServiceagreements\n   * @type {Function}\n   * @description Retrieve the list service agreement of the current user\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.UserContextServiceAgreements-GET} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsercontextServiceagreements(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsercontextServiceagreements(params, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext/serviceagreements`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name AccessGroupsData#getAccessgroupsUsercontextServiceagreementsLegalentities\n   * @type {Function}\n   * @description Retrieve the list legal entities for a service agreement of the current user\n   \n   * @param {string} serviceAgreementId \n     \n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.query The search term used to search. Eg: backb.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link AccessGroupsData.UserContextLegalEntities-GET} on success \n   *\n   * @example\n   * accessGroupsData\n   *  .getAccessgroupsUsercontextServiceagreementsLegalentities(serviceAgreementId, params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getAccessgroupsUsercontextServiceagreementsLegalentities(serviceAgreementId, params, headers) {\n    const url = `${baseUri}${version}/accessgroups/usercontext/serviceagreements/${serviceAgreementId}/legalentities`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name AccessGroupsData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsDataRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"items\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsDataRecord = definedTypes['AccessGroupsData.DataAccessGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"permissions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"functionId\": {\n            \"type\": \"string\",\n            \"required\": true\n          },\n          \"assignedPrivileges\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {\n                \"privilege\": {\n                  \"type\": \"string\",\n                  \"required\": true\n                },\n                \"limits\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"properties\": {\n                      \"limitType\": {\n                        \"enum\": [\n                          \"daily\",\n                          \"weekly\",\n                          \"monthly\",\n                          \"upper\"\n                        ],\n                        \"required\": true\n                      },\n                      \"amount\": {\n                        \"type\": \"number\",\n                        \"required\": false\n                      }\n                    }\n                  },\n                  \"required\": false\n                }\n              }\n            },\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsFunctionRecord = definedTypes['AccessGroupsData.FunctionAccessGroupItemBase'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"userId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": true\n    },\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersRecord = definedTypes['AccessGroupsData.UserItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"providers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"required\": true\n    },\n    \"consumers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsRecord = definedTypes['AccessGroupsData.ServiceAgreementPost'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsercontextRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsercontextRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"serviceAgreementId\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": true\n    },\n    \"legalEntityId\": {\n      \"type\": \"string\",\n      \"pattern\": \"^[0-9a-f]{32}\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsercontextRecord = definedTypes['AccessGroupsData.UserContext-POST'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsDataRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"dataAccessGroupId\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsDataRecord = definedTypes['AccessGroupsData.DataAccessGroupItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupId\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsFunctionRecord = definedTypes['AccessGroupsData.FunctionAccessGroupItem'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersFunctionRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersFunctionRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": true\n    },\n    \"revoke\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersFunctionRecord = definedTypes['AccessGroupsData.AssignFunctionAccessGroup'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsUsersDataRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsUsersDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"dataAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"required\": true\n    },\n    \"revoke\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsUsersDataRecord = definedTypes['AccessGroupsData.AssignDataAccessGroup'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 128,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": false\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": false\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsRecord = definedTypes['AccessGroupsData.ServiceAgreementPut'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the postAccessgroupsServiceagreementsIngestServiceagreementsRecord method\n   *\n   * @name AccessGroupsData#schemas.postAccessgroupsServiceagreementsIngestServiceagreementsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 36,\n      \"pattern\": \"^\\\\S+$\",\n      \"required\": false\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"pattern\": \"^\\\\S(.*(\\\\S))?$\",\n      \"required\": true\n    },\n    \"consumersToIngest\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": false\n          },\n          \"functionDataGroupPairs\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {\n                \"functionGroup\": {\n                  \"type\": \"string\",\n                  \"pattern\": \"^[0-9a-f]{32}\",\n                  \"required\": false\n                },\n                \"dataGroup\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"properties\": {}\n                  },\n                  \"minItems\": 1,\n                  \"uniqueItems\": true,\n                  \"required\": true\n                }\n              }\n            },\n            \"uniqueItems\": true,\n            \"required\": false\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"required\": true\n    },\n    \"providersToIngest\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"users\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": false\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postAccessgroupsServiceagreementsIngestServiceagreementsRecord = definedTypes['AccessGroupsData.ServicesAgreementIngest'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsAdminsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsAdminsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"consumers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"required\": true\n          },\n          \"admins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": true\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"required\": false\n    },\n    \"providers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"required\": true\n          },\n          \"admins\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"properties\": {}\n            },\n            \"uniqueItems\": true,\n            \"required\": true\n          }\n        }\n      },\n      \"minItems\": 1,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsAdminsRecord = definedTypes['AccessGroupsData.UpdateAdmins'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsUsersRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsUsersRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsUsersRecord = definedTypes['AccessGroupsData.ProviderUserForServiceAgreement'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsConsumersFunctionsRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsConsumersFunctionsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"functionAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsConsumersFunctionsRecord = definedTypes['AccessGroupsData.ExposeFunctionAccessGroups'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putAccessgroupsServiceagreementsConsumersFunctionsDataRecord method\n   *\n   * @name AccessGroupsData#schemas.putAccessgroupsServiceagreementsConsumersFunctionsDataRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"dataAccessGroupIds\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {}\n      },\n      \"minItems\": 1,\n      \"uniqueItems\": true,\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.putAccessgroupsServiceagreementsConsumersFunctionsDataRecord = definedTypes['AccessGroupsData.ExposeDataAccessGroups'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getAccessgroupsData,\n    \n    postAccessgroupsDataRecord,\n    \n    getAccessgroupsFunction,\n    \n    postAccessgroupsFunctionRecord,\n    \n    getAccessgroupsConfigFunctions,\n    \n    postAccessgroupsUsersRecord,\n    \n    getAccessgroupsUsers,\n    \n    postAccessgroupsServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreements,\n    \n    postAccessgroupsUsercontextRecord,\n    \n    getAccessgroupsDataRecord,\n    \n    putAccessgroupsDataRecord,\n    \n    deleteAccessgroupsDataRecord,\n    \n    getAccessgroupsFunctionRecord,\n    \n    putAccessgroupsFunctionRecord,\n    \n    deleteAccessgroupsFunctionRecord,\n    \n    getAccessgroupsUsersRecord,\n    \n    getAccessgroupsUsersPrivileges,\n    \n    getAccessgroupsUsersPermissions,\n    \n    postAccessgroupsUsersFunctionRecord,\n    \n    postAccessgroupsUsersDataRecord,\n    \n    getAccessgroupsUsersPrivilegesArrangements,\n    \n    getAccessgroupsUsersPermissionsSummary,\n    \n    getAccessgroupsServiceagreementsRecord,\n    \n    putAccessgroupsServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreementsRoles,\n    \n    getAccessgroupsServiceagreementsAdminsMe,\n    \n    postAccessgroupsServiceagreementsIngestServiceagreementsRecord,\n    \n    getAccessgroupsServiceagreementsParticipants,\n    \n    getAccessgroupsServiceagreementsAdmins,\n    \n    putAccessgroupsServiceagreementsAdminsRecord,\n    \n    getAccessgroupsServiceagreementsUsers,\n    \n    putAccessgroupsServiceagreementsUsersRecord,\n    \n    getAccessgroupsServiceagreementsFunctions,\n    \n    deleteAccessgroupsServiceagreementsUsersRecord,\n    \n    putAccessgroupsServiceagreementsConsumersFunctionsRecord,\n    \n    deleteAccessgroupsServiceagreementsConsumersFunctionsRecord,\n    \n    putAccessgroupsServiceagreementsConsumersFunctionsDataRecord,\n    \n    deleteAccessgroupsServiceagreementsConsumersFunctionsDataRecord,\n    \n    getAccessgroupsServiceagreementsFunctionsData,\n    \n    getAccessgroupsUsercontextServiceagreements,\n    \n    getAccessgroupsUsercontextServiceagreementsLegalentities,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-accessgroups-http-ng/scripts/data-bb-accessgroups-http.js"],"sourceRoot":""}
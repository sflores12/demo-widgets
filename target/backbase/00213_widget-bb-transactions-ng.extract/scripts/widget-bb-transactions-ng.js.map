{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*********","webpack:///webpack/bootstrap 5be62e011dbef719fb37?cc87*********","webpack:///./widget-bb-transactions-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114**","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-transactions-ng/scripts/index.js","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-state-container-ng\"","webpack:///external \"model-bb-transactions-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///./widget-bb-transactions-ng/scripts/controller.js","webpack:///./widget-bb-transactions-ng/scripts/constants.js","webpack:///./widget-bb-transactions-ng/scripts/default-hooks.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/index.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/initial-state.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/init.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/list.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/helpers.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/product.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/transaction.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/search.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/export.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/currencies.js","webpack:///./widget-bb-transactions-ng/scripts/view-model/notification.js","webpack:///./widget-bb-transactions-ng/scripts/service.js"],"names":["defaultHooks","hooksKey","serviceKey","viewModelKey","module","factory","bbIntent","controller","run","viewModel","init","name","TransactionsController","SEARCH_MIN_QUERY","SEARCH_INPUT_DEBOUNCE","searchActions","CANCEL","INPUT","debounce","func","wait","immediate","timeout","debouncedFn","args","context","later","apply","callNow","clearTimeout","setTimeout","DEFAULT_MAX_NAV_PAGES","model","hooks","widget","eventBus","$window","scope","service","stateContainer","intents","maxNavPages","getLongPreference","dismissTime","Math","abs","loadAllTransactionsInitially","getBooleanPreference","selectors","transactions","createSelector","rawData","processTransactions","searchTransactions","state","search","transaction","data","searching","initialLoading","loadingTransactions","loading","searchingTransactions","loadedAll","searchedAll","category","totalCount","total","error","product","productId","id","paginationType","size","from","loadFrom","searchFrom","orderBy","sort","direction","hasTodayTransactions","today","exportFailed","export","exportTransactionsFailed","value","Boolean","afterExportError","beforeExport","hasTodaysTransactions","pageParams","currentPage","totalItems","loadMorePromise","searchMorePromise","filterNullProperties","Object","keys","obj","reduce","acc","prop","assign","getLoadParams","combiningParams","getState","params","processRequestParams","getSearchParams","searchState","query","bookingDateLessThan","bookingDateGreaterThan","amountGreaterThan","amountLessThan","creditDebitIndicator","isFilterCriteriaEmpty","filter","key","length","cancelSearch","cancel","applySearchFilter","Promise","resolve","toDate","fromDate","amountFrom","amountTo","searchMore","catch","then","loadTransactions","load","loadMore","done","doneFn","extendLoadMoreParams","changePage","onProductSelect","payload","afterSelectProductSuccess","checkTodayTransactions","onTransactionClick","selectedTransaction","storeCurrentTransaction","publish","TRANSACTION_SELECTED","onTransactionSearchInput","onTransactionSelect","beforeStore","showProductDetails","onTransactionSearch","detail","action","text","$digest","handleViewCategoryIntent","loadCurrentTransaction","handleChangeTransactionCategoryIntent","updateTransactionCategory","list","afterUpdateSuccess","afterUpdateError","dismissNotification","notification","removeNotification","notificationId","changeTransactionCategory","transactionObj","bindEvents","subscribe","PRODUCT_SELECTED","addEventListener","SEARCH","initIntent","handle","VIEW_CATEGORY_TRANSACTIONS","VIEW_CATEGORY_DBIT_TRANSACTIONS","VIEW_CATEGORY_CRDT_TRANSACTIONS","create","SHOW_PRODUCT_DETAILS","CHANGE_TRANSACTION_CATEGORY","$onInit","setupSelectedProduct","isDefaultProductFirst","reject","CXP_ITEM_LOADED","getId","BB_ITEM_LOADED","initList","afterLoadDone","onSort","header","sortable","exportToFile","exportFormat","format","loadingError","allTransactionsLoaded","searchLoading","searchLoadingError","isSearching","searchAllTransactionsLoaded","showAllTransactions","currencies","errors","transactionsError","Event","Action","Message","Text","Intent","processProductSelected","productSelected","defaultPaginationType","defaultSortableColumn","defaultSortableDirection","isTransactionsShown","DEFAULT_PAGE_SIZE","DEFAULT_PAGINATION_TYPE","stateParams","pageSize","sortDirection","getStringPreference","loadOnInit","initialState","createAction","notifications","beforeLoad","afterLoadSuccess","response","requestParams","afterLoadError","beforeTodayTransactionsLoad","afterTodayTransactionsLoadSuccess","afterTodayTransactionsLoadError","item","map","Date","now","message","level","errorMessages","uiError","code","isSameDay","bookingDate","date","some","afterSelectProductError","beforeSearch","afterSearchSuccess","afterSearchError","padded","num","String","formatDate","getFullYear","getMonth","getDate","raw","uri","getExportFileResource","location","getSelectedProduct","selectedProduct","getCurrentTransaction","transactionId","categoryName","storeTransactionAsCurrent","getCurrencies"],"mappings":"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","file":"widget-bb-transactions-ng/scripts/widget-bb-transactions-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-bb-transactions-ng\"), require(\"lib-bb-extension-helpers-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-transactions-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-state-container-ng\", \"model-bb-transactions-ng\", \"lib-bb-extension-helpers-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-transactions-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-state-container-ng\"), require(\"model-bb-transactions-ng\"), require(\"lib-bb-extension-helpers-ng\"));\n\telse\n\t\troot[\"widget-bb-transactions-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-state-container-ng\"], root[\"model-bb-transactions-ng\"], root[\"lib-bb-extension-helpers-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_57__, __WEBPACK_EXTERNAL_MODULE_63__, __WEBPACK_EXTERNAL_MODULE_72__, __WEBPACK_EXTERNAL_MODULE_73__, __WEBPACK_EXTERNAL_MODULE_74__, __WEBPACK_EXTERNAL_MODULE_75__, __WEBPACK_EXTERNAL_MODULE_76__, __WEBPACK_EXTERNAL_MODULE_77__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5be62e011dbef719fb37","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-transactions-ng/model.xml\n// module id = 0\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_57__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 57\n// module chunks = 8 10","module.exports = __WEBPACK_EXTERNAL_MODULE_63__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 63\n// module chunks = 8 10","/**\n * @module widget-bb-transactions-ng\n *\n * @description\n * Transactions widget.\n */\nimport angular from 'vendor-bb-angular';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport intentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport modelModuleKey, { modelTransactionsKey } from 'model-bb-transactions-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\nimport createViewModel from './view-model/index';\nimport createService from './service';\n\nconst hooksKey = 'widget-bb-transactions-ng:hooks';\nconst serviceKey = 'widget-bb-transactions-ng:service';\nconst viewModelKey = 'widget-bb-transactions-ng:viewModel';\n\nexport default angular\n  .module('widget-bb-transactions-ng', [\n    modelModuleKey,\n    widgetModuleKey,\n    eventBusModuleKey,\n    intentModuleKey,\n    stateContainerModuleKey,\n    bbExtensionHelpersModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    widgetKey,\n    hooksKey,\n    /* into */\n    createViewModel,\n  ])\n  .factory(serviceKey, [\n    modelTransactionsKey,\n    viewModelKey,\n    '$window',\n    /* into */\n    createService,\n  ])\n\n  .factory(extensionHelpersContextKey, [\n    bbIntentKey,\n    (bbIntent) => ({ bbIntent }),\n  ])\n\n  .controller('TransactionsController', [\n    modelTransactionsKey,\n    hooksKey,\n    widgetKey,\n    eventBusKey,\n    bbIntentKey,\n    '$window',\n    '$scope',\n    viewModelKey,\n    serviceKey,\n    bbStateContainerKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([viewModelKey, viewModel => {\n    viewModel.init();\n  }])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_72__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 72\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_73__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 73\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_74__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 74\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_75__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 75\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_76__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-transactions-ng\"\n// module id = 76\n// module chunks = 10","module.exports = __WEBPACK_EXTERNAL_MODULE_77__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 77\n// module chunks = 10","import { Message, Intent } from './constants';\n\nconst SEARCH_MIN_QUERY = 2;\nconst SEARCH_INPUT_DEBOUNCE = 1000;\n\nconst searchActions = {\n  CANCEL: 'cancel',\n  INPUT: 'input',\n};\n\nconst debounce = (func, wait, immediate) => {\n  let timeout;\n  return function debouncedFn(...args) {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\n/**\n * @name DEFAULT_MAX_NAV_PAGES\n * @description Defines the default maxNavPages for the accounts page\n * as defined in the widget model.xml\n * @type {number}\n * @inner\n */\nconst DEFAULT_MAX_NAV_PAGES = 3;\n\n/**\n * @name TransactionsController\n * @ngkey TransactionsController\n * @type {object}\n * @description\n * Transactions widget controller\n */\nexport default function TransactionsController(\n  model,\n  hooks,\n  widget,\n  eventBus,\n  bbIntent,\n  $window,\n  scope,\n  viewModel,\n  service,\n  stateContainer\n) {\n  /**\n   * @description\n   * A set of intents that the controller uses or handles.\n   *\n   * @name TransactionsController#intents\n   * @type {object}\n   * @inner\n   */\n  const intents = {};\n\n  /**\n   * @name TransactionsController#maxNavPages\n   * @type {number} maxNaxPages\n   * @inner\n   * @description\n   * Maximum number of navigation pages to display\n   */\n  const maxNavPages =\n    widget.getLongPreference('bb.transaction.maxNavPages') || DEFAULT_MAX_NAV_PAGES;\n\n  /**\n   * @name TransactionsController#dismissTime\n   * @type {number}\n   * @inner\n   *\n   * @description\n   * Number of seconds to dismiss the notification\n   */\n  const dismissTime =\n    Math.abs(widget.getLongPreference('bb.transaction.notificationDismissTime')) || 3;\n\n  /**\n   * @name TransactionsController#loadAllTransactionsInitially\n   * @type {boolean}\n   * @inner\n   *\n   * @description\n   * Defines whether data should be shown if no account is selected\n   */\n  const loadAllTransactionsInitially =\n    widget.getBooleanPreference('bb.transaction.loadAllTransactionsOnInit');\n\n  /**\n   * State selectors\n   * @type {object}\n   * @inner\n   */\n  const selectors = {\n    transactions: stateContainer.createSelector(\n      ({ transactions }) => (transactions.rawData === null ?\n        null : hooks.processTransactions(transactions.rawData))\n    ),\n    searchTransactions: stateContainer.createSelector(\n      state => (state.search.rawData === null ?\n        null : hooks.processTransactions(state.search.rawData))\n    ),\n    transaction: stateContainer.createSelector(state => state.transaction.data),\n    searching: stateContainer.createSelector(state => state.searching),\n    initialLoading: stateContainer.createSelector(state => state.initialLoading),\n    loadingTransactions: stateContainer.createSelector(state => state.transactions.loading),\n    searchingTransactions: stateContainer.createSelector(state => state.search.loading),\n    loading: stateContainer.createSelector(\n      state => (state.searching ? state.search.loading : state.transactions.loading)\n    ),\n    loadedAll: stateContainer.createSelector(state => state.transactions.loadedAll),\n    searchedAll: stateContainer.createSelector(state => state.search.loadedAll),\n    category: stateContainer.createSelector(state => state.search.category),\n    totalCount: stateContainer.createSelector(\n      state => (state.searching ? state.search.total : state.transactions.total)\n    ),\n    error: stateContainer.createSelector(state => state.error),\n    product: stateContainer.createSelector(state => state.product.data),\n    productId: stateContainer.createSelector(\n      state => (state.product.data === null ? -1 : state.product.data.id)\n    ),\n    paginationType: stateContainer.createSelector(state => state.paginationType),\n    size: stateContainer.createSelector(\n      state => (state.searching ? state.search.size : state.transactions.size)\n    ),\n    from: stateContainer.createSelector(\n      state => (state.searching ? state.search.from : state.transactions.from)\n    ),\n    loadFrom: stateContainer.createSelector(state => state.transactions.from),\n    searchFrom: stateContainer.createSelector(state => state.search.from),\n    orderBy: stateContainer.createSelector(state => state.sort.orderBy),\n    direction: stateContainer.createSelector(state => state.sort.direction),\n    hasTodayTransactions:\n      stateContainer.createSelector(state => state.transactions.hasTodayTransactions),\n    today: stateContainer.createSelector(state => state.transactions.today),\n    exportFailed: stateContainer.createSelector(state => state.export.exportFailed),\n  };\n\n  /**\n   * @name TransactionsController#state\n   * @description State on transactions\n   * @deprecated since 1.10.0. Use `viewModel.getState()` instead.\n   * @type {Object}\n   */\n  const state = {\n    get exportTransactionsFailed() { return selectors.exportFailed(); },\n    set exportTransactionsFailed(value) {\n      if (Boolean(value)) {\n        viewModel.export.afterExportError();\n      } else {\n        viewModel.export.beforeExport();\n      }\n    },\n    export: {\n      get hasTodaysTransactions() { return selectors.hasTodayTransactions(); },\n      get today() { return selectors.today(); },\n    },\n    get transactions() { return selectors.transactions(); },\n    sort: {\n      get orderBy() { return selectors.orderBy(); },\n      get direction() { return selectors.direction(); },\n    },\n    pageParams: {\n      get from() { return selectors.from(); },\n      get size() { return selectors.size(); },\n      get currentPage() { return selectors.from() + 1; },\n      get totalItems() { return selectors.totalCount(); },\n      maxNavPages,\n      get paginationType() { return selectors.paginationType(); },\n    },\n    get initialLoading() { return selectors.initialLoading(); },\n  };\n\n  let loadMorePromise = null;\n  let searchMorePromise = null;\n\n  /**\n   * @name TransactionsController#filterNullProperties\n   * @description Filters out properties with `null` value\n   * @type {function}\n   * @inner\n   * @param {object} obj Object to filter out null properties\n   * @return {object} Filtered object\n   */\n  const filterNullProperties = obj => Object.keys(obj)\n    .reduce((acc, prop) => {\n      if (obj[prop] !== null) {\n        Object.assign(acc, { [prop]: obj[prop] });\n      }\n      return acc;\n    }, {});\n\n  /**\n   * @name TransactionsController#getLoadParams\n   * @description Returns request parameters for the list request\n   * @type {function}\n   * @inner\n   * @param {LoadRequestParams} combiningParams Parameters to combine with.\n   * @return {LoadRequestParams} Request parameters\n   */\n  const getLoadParams = (combiningParams = {}) => {\n    const { transactions, sort } = viewModel.getState();\n    const params = {\n      from: transactions.from,\n      size: transactions.size,\n      productId: selectors.productId(),\n    };\n\n    if (sort.orderBy && sort.direction) {\n      Object.assign(params, {\n        orderBy: sort.orderBy,\n        direction: sort.direction,\n      });\n    }\n\n    Object.assign(params, combiningParams);\n\n    return hooks.processRequestParams(params);\n  };\n\n  /**\n   * @name TransactionsController#getSearchParams\n   * @description Returns request parameters for the search request\n   * @type {function}\n   * @inner\n   * @param {SearchRequestParams} combiningParams Parameters to combine with.\n   * @return {SearchRequestParams} Request parameters\n   */\n  const getSearchParams = (combiningParams = {}) => {\n    const { search: searchState, sort } = viewModel.getState();\n    let params = {\n      from: searchState.from,\n      size: searchState.size,\n      query: searchState.query,\n      bookingDateLessThan: searchState.bookingDateLessThan,\n      bookingDateGreaterThan: searchState.bookingDateGreaterThan,\n      amountGreaterThan: searchState.amountGreaterThan,\n      amountLessThan: searchState.amountLessThan,\n      creditDebitIndicator: searchState.creditDebitIndicator,\n      category: searchState.category,\n      productId: selectors.productId(),\n    };\n\n    if (sort.orderBy && sort.direction) {\n      Object.assign(params, {\n        orderBy: sort.orderBy,\n        direction: sort.direction,\n      });\n    }\n\n    Object.assign(params, combiningParams);\n    params = filterNullProperties(params);\n\n    return hooks.processRequestParams(params);\n  };\n\n  /**\n   * @name TransactionsController#isFilterCriteriaEmpty\n   *\n   * @description\n   * Check if search and filter parameters are empty\n   *\n   * @inner\n   *\n   * @type {function}\n   * @param {SearchRequestParams} params Search parameters\n   * @returns {boolean} True if any parameter is set, false if none\n   */\n  const isFilterCriteriaEmpty = params =>\n    !Boolean(Object.keys(params).filter(key => params[key]).length);\n\n  /**\n   * @description\n   * Searches by a given query\n   *\n   * @public\n   * @name TransactionsController#search\n   * @type {function}\n   * @param {string} query Search query\n   * @returns {Promise.<void>} Promise\n   */\n  function search(query) {\n    return service.search(getSearchParams({ query, from: 0 }));\n  }\n\n  /**\n   * @description\n   * Resets search\n   *\n   * @public\n   * @name TransactionsController#cancelSearch\n   * @type {function}\n   * @return {void}\n   */\n  function cancelSearch() {\n    viewModel.search.cancel();\n  }\n\n  /**\n   * @description\n   * Searches by given filter parameters\n   *\n   * @public\n   * @name TransactionsController#applySearchFilter\n   * @type {function}\n   * @param {object} params Search filter params\n   * @returns {Promise.<void>} Promise\n   */\n  function applySearchFilter(params) {\n    if (isFilterCriteriaEmpty(params)) {\n      cancelSearch();\n      return Promise.resolve();\n    }\n\n    return service.search(getSearchParams({\n      from: 0,\n      query: params.query,\n      bookingDateLessThan: params.toDate,\n      bookingDateGreaterThan: params.fromDate,\n      amountGreaterThan: params.amountFrom,\n      amountLessThan: params.amountTo,\n      creditDebitIndicator: params.creditDebitIndicator,\n    }));\n  }\n\n  /**\n   * @description\n   * Loads more search results and appends them to the search result.\n   *\n   * @public\n   * @name TransactionsController#searchMore\n   * @type {function}\n   * @returns {null|Promise.<void>} Promise or null if search is finished\n   */\n  function searchMore() {\n    if (selectors.searchingTransactions()) {\n      return searchMorePromise;\n    }\n\n    const params = getSearchParams({ from: selectors.searchFrom() + 1 });\n    searchMorePromise = service.search(params)\n      .catch(() => {})\n      .then(() => {\n        searchMorePromise = null;\n      });\n\n    return searchMorePromise;\n  }\n\n  /**\n   * @description\n   * Handles loading or searching transactions\n   *\n   * @inner\n   * @name TransactionsController#loadTransactions\n   * @type {function}\n   * @param {LoadRequestParams|SearchRequestParams} params Request params\n   * @returns {Promise.<void>} Promise\n   */\n  function loadTransactions(params) {\n    if (selectors.searching()) {\n      return service.search(getSearchParams(params));\n    }\n    return service.load(getLoadParams(params));\n  }\n\n  /**\n   * @description\n   * Loads more transactions and append them to the transaction's list\n   *\n   * @public\n   * @name TransactionsController#loadMore\n   * @type {function}\n   * @param {?function} done Callback function for `ui-bb-load-more-ng` component\n   * @returns {null|Promise.<void>} Promise or null if loading is finished\n   */\n  function loadMore(done) {\n    if (selectors.loadingTransactions() || selectors.loadedAll() || selectors.error()) {\n      return loadMorePromise;\n    }\n\n    const doneFn = done || (() => {});\n    let params = getLoadParams({ from: selectors.loadFrom() + 1 });\n    params = hooks.extendLoadMoreParams(params);\n\n    loadMorePromise = service.load(params)\n      .catch(() => {})\n      .then(() => {\n        loadMorePromise = null;\n        doneFn();\n      });\n\n    return loadMorePromise;\n  }\n\n  /**\n   * @description\n   * Change page of displayed accounts.\n   *\n   * @name TransactionsController#changePage\n   * @type {function}\n   * @param {object} params\n   * @param {number} params.currentPage Transactions page to load\n   * @returns {Promise.<void>} A Promise\n   */\n  const changePage = params =>\n    loadTransactions({ from: params.currentPage - 1 });\n\n  /**\n   * @description\n   * Handles account select\n   *\n   * @inner\n   * @name TransactionsController#onProductSelect\n   * @param {object} payload Object with selected product\n   * @type {function}\n   */\n  function onProductSelect(payload) {\n    if (payload.product && selectors.productId() === payload.product.id) {\n      return;\n    }\n\n    viewModel.product.afterSelectProductSuccess(payload.product);\n\n    service.load(getLoadParams({ from: 0 }));\n    service.checkTodayTransactions(selectors.productId());\n  }\n\n  /**\n   * @description\n   * Handles transaction select\n   *\n   * @public\n   * @name TransactionsController#onTransactionClick\n   * @type {function}\n   * @param {object} selectedTransaction Object with selected transaction\n   * @fires bb.event.transaction.selected\n   */\n  function onTransactionClick(selectedTransaction) {\n    service.storeCurrentTransaction(selectedTransaction);\n    eventBus.publish(Message.TRANSACTION_SELECTED, {\n      transaction: selectedTransaction,\n    });\n  }\n\n  /**\n   * @description\n   * Handles search field input\n   *\n   * @see search\n   *\n   * @inner\n   * @name TransactionsController#onTransactionSearchInput\n   * @type {function}\n   */\n  const onTransactionSearchInput = debounce(query => {\n    if (query.length >= SEARCH_MIN_QUERY) {\n      search(query);\n    }\n  }, SEARCH_INPUT_DEBOUNCE);\n\n  /**\n   * @description\n   * Handles transaction select\n   *\n   * @inner\n   * @name TransactionsController#onTransactionSelect\n   * @param {object} data Selected transaction object\n   * @type {function}\n   */\n  function onTransactionSelect(data) {\n    viewModel.transaction.beforeStore(data.transaction);\n  }\n\n  /**\n   * @description\n   * Handles the intent to show the product details for the given product\n   *\n   * @public\n   * @name TransactionsController#showProductDetails\n   * @type {function}\n   * @param {string} productId The id of the product\n   */\n  const showProductDetails = productId => {\n    // Check if intent is available.\n    if (intents.showProductDetails) {\n      intents.showProductDetails(productId);\n    }\n  };\n\n  /**\n   * @description\n   * Handles transaction search input\n   *\n   * @inner\n   * @name TransactionsController#onTransactionSearch\n   * @param {object} detail Search input object\n   * @type {function}\n   */\n  const onTransactionSearch = detail => {\n    if (detail.action === searchActions.INPUT) {\n      onTransactionSearchInput(detail.text);\n    } else if (detail.action === searchActions.CANCEL) {\n      cancelSearch();\n    }\n    scope.$digest();\n  };\n\n  /**\n   * @name TransactionsController#handleViewCategoryIntent\n   * @description Handles ViewCategory intent\n   * @inner\n   * @type {function}\n   * @param {object} payload ViewCategory intent payload\n   */\n  const handleViewCategoryIntent = payload => {\n    if (payload && !!payload.category) {\n      const params = {\n        productId: payload.productId || null,\n        category: payload.category || null,\n        bookingDateGreaterThan: payload.bookingDateGreaterThan || null,\n        bookingDateLessThan: payload.bookingDateLessThan || null,\n      };\n\n      service.search(getSearchParams(params))\n        .then(() => { service.loadCurrentTransaction(); });\n    } else {\n      cancelSearch();\n    }\n  };\n\n  /**\n   * @name TransactionsController#handleChangeTransactionCategoryIntent\n   * @description Handles ChangeTransactionCategory intent\n   * @inner\n   * @type {function}\n   * @param {object} payload ChangeTransactionCategory intent payload\n   */\n  const handleChangeTransactionCategoryIntent = payload =>\n    service.updateTransactionCategory(payload)\n      .then(viewModel.list.afterUpdateSuccess)\n      .catch(viewModel.list.afterUpdateError);\n\n  /**\n   * @name TransactionsController#dismissNotification\n   * @description Helper method to remove a notification from state\n   * @type {function}\n   * @param {number} notificationId Id of the notification that should be dismissed\n   */\n  const dismissNotification = notificationId =>\n    viewModel.notification.removeNotification(notificationId);\n\n  /**\n   * @description\n   * Trigger change transaction category intent\n   *\n   * @name TransactionsController#changeTransactionCategory\n   * @type {function}\n   * @param {object} transactionObj - The transaction object\n   */\n  const changeTransactionCategory = transactionObj =>\n    intents.changeTransactionCategory(transactionObj);\n\n  /**\n   * @description\n   * Adds subscriptions to bus events\n   *\n   * @inner\n   * @name TransactionsController#bindEvents\n   * @type {function}\n   */\n  function bindEvents() {\n    eventBus.subscribe(Message.PRODUCT_SELECTED, onProductSelect);\n    eventBus.subscribe(Message.TRANSACTION_SELECTED, onTransactionSelect);\n    $window.addEventListener(Message.SEARCH, ({ detail }) => onTransactionSearch(detail));\n  }\n\n  /**\n   * @description\n   * Inits the bbIntent and adds intent handlers.\n   * 'view.account.category.transactions' intent can be used to\n   * update load query params with new productId, category, bookingDateGreaterThan\n   * and bookingDateLessThan params\n   *\n   * @inner\n   * @name TransactionsController#initIntent\n   * @type {function}\n   */\n  function initIntent() {\n    // Deprecated\n    // TODO: remove in 2.10.1\n    bbIntent.handle(Intent.VIEW_CATEGORY_TRANSACTIONS, handleViewCategoryIntent);\n\n    bbIntent.handle(Intent.VIEW_CATEGORY_DBIT_TRANSACTIONS, handleViewCategoryIntent);\n    bbIntent.handle(Intent.VIEW_CATEGORY_CRDT_TRANSACTIONS, handleViewCategoryIntent);\n\n    intents.showProductDetails = bbIntent.create(Intent.SHOW_PRODUCT_DETAILS);\n    intents.changeTransactionCategory = bbIntent.create(\n      Intent.CHANGE_TRANSACTION_CATEGORY, handleChangeTransactionCategoryIntent\n    );\n\n    bbIntent.init(() => {});\n  }\n\n  /**\n   * @description\n   * Widget initialization logic - called automatically in the angular cycle.\n   *\n   * @name TransactionsController#$onInit\n   * @type {function}\n   */\n  function $onInit() {\n    if (!viewModel.getState().initialLoading) {\n      return Promise.resolve(bindEvents());\n    }\n\n    return service.setupSelectedProduct(hooks.isDefaultProductFirst())\n      .then(() => {\n        if (selectors.productId() === -1 && !loadAllTransactionsInitially) {\n          return Promise.reject(bindEvents());\n        }\n        return bindEvents();\n      })\n      .then(initIntent)\n      .then(() => {\n        /**\n         * This event (cxp.item.loaded) is deprecated in Mobile SDK version > 3.0\n         * and will be removed with the update to widget collection 3 (WC3)\n         */\n        eventBus.publish(Message.CXP_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n\n        eventBus.publish(Message.BB_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n      })\n      .then(() => service.load(getLoadParams()))\n      // TODO: Show currencies selector in filter form when search service supports it\n      // then(() => service.getCurrencies())\n      .then(() => {\n        // Don't include these methods in the main init chain\n        service.checkTodayTransactions(selectors.productId());\n        service.loadCurrentTransaction();\n      })\n      .then(() => viewModel.initList.afterLoadDone())\n      .catch(() => viewModel.initList.afterLoadDone());\n  }\n\n  /**\n   * @name TransactionsController#onSort\n   * @type {function}\n   * @description\n   * Loads sorted list of payments\n   * @param {string} orderBy Column key to sort\n   * @param {string} direction Sort direction\n   * @param {object} header Config object reference. Deprecated.\n   */\n  const onSort = (orderBy, direction, header) => {\n    // The following line should be part of the extension\n    Object.assign(header, {\n      sortable: {\n        ...header.sortable,\n        direction,\n      },\n    });\n\n    loadTransactions({ orderBy, direction });\n  };\n\n  /**\n   * @name TransactionsController#exportToFile\n   * @type {function}\n   *\n   * @description\n   * Exports filtered list of payments to a file in specified format\n   * @param {string} format Specified format (CSV, PDF)\n   */\n  const exportToFile = format => {\n    const params = {\n      productId: selectors.productId(),\n      exportFormat: format,\n    };\n\n    if (selectors.searching()) {\n      if (!selectors.searchTransactions().length) {\n        viewModel.export.afterExportError();\n        return;\n      }\n\n      const { search: searchState } = viewModel.getState();\n      Object.assign(params, {\n        query: searchState.query,\n        bookingDateLessThan: searchState.bookingDateLessThan,\n        bookingDateGreaterThan: searchState.bookingDateGreaterThan,\n        amountGreaterThan: searchState.amountGreaterThan,\n        amountLessThan: searchState.amountLessThan,\n        creditDebitIndicator: searchState.creditDebitIndicator,\n      });\n    } else {\n      if (!selectors.hasTodayTransactions()) {\n        viewModel.export.afterExportError();\n        return;\n      }\n\n      // Export payments for today if no filter applied\n      const today = selectors.today();\n      Object.assign(params, {\n        bookingDateLessThan: today,\n        bookingDateGreaterThan: today,\n      });\n    }\n\n    service.export(filterNullProperties(params));\n  };\n\n  return {\n    /**\n     * @description\n     * The list of transactions\n     *\n     * @type {module:data-bb-transactions-ng.TransactionsData.TransactionItemGet[]}\n     * May be empty if the transactions aren't loaded.\n     * @name TransactionsController#transcations\n     * @deprecated since 1.10.0. Use `viewModel.getState().transactions.rawData` instead.\n     */\n    get transactions() { return selectors.transactions(); },\n    /**\n     * @description\n     * Selected product info\n     *\n     * @type {module:model-bb-transactions-ng.Product}\n     * @name TransactionsController#product\n     * @deprecated since 1.10.0. Use `viewModel.getState().product.data` instead.\n     */\n    get product() { return selectors.product(); },\n    /**\n     * @description\n     * Loading flag which is true while the list of transactions is loading\n     *\n     * @type {boolean}\n     * @name TransactionsController#loading\n     * @deprecated since 1.10.0. Use `viewModel.getState().transactions.loading`\n     * or `viewModel.getState().search.loading` instead.\n     */\n    get loading() { return selectors.loading(); },\n    /**\n     * @description\n     * Last occured error\n     *\n     * @type {module:ui-bb-model-errors.ModelError}\n     * @name TransactionsController#loadingError\n     * @deprecated since 1.10.0. Use `viewModel.getState().error` instead.\n     */\n    get loadingError() { return selectors.error(); },\n    /**\n     * @description\n     * Flag that indicates whether all the transactions have been loaded\n     *\n     * @type {boolean}\n     * @name TransactionsController#allTransactionsLoaded\n     * @deprecated since 1.10.0. Use `viewModel.getState().transactions.loadedAll`\n     * or `viewModel.getState().search.loadedAll` instead.\n     */\n    get allTransactionsLoaded() { return selectors.loadedAll(); },\n    /**\n     * @description\n     * Searching flag which is true while user is searching transactions\n     *\n     * @type {boolean}\n     * @name TransactionsController#searching\n     * @deprecated since 1.10.0. Use `viewModel.getState().searching` instead.\n     */\n    get searching() { return selectors.searching(); },\n    /**\n     * @description\n     * Loading flag which is true while the list of transactions is loading\n     *\n     * @type {boolean}\n     * @name TransactionsController#searchLoading\n     * @deprecated since 1.10.0. Use `viewModel.getState().search.loading` instead.\n     */\n    get searchLoading() { return selectors.searchingTransactions(); },\n    /**\n     * @description\n     * Search error\n     *\n     * @type {module:ui-bb-model-errors.ModelError}\n     * @name TransactionsController#searchLoadingError\n     * @deprecated since 1.10.0. Use `viewModel.getState().error` instead.\n     */\n    get searchLoadingError() { return selectors.error(); },\n    /**\n     * @description\n     * The list of found transactions.\n     *\n     * @type {array.<module:data-bb-transactions-ng.TransactionsData.TransactionItemGet>}\n     * @name TransactionsController#searchTransactions\n     * @deprecated since 1.10.0. Use `viewModel.getState().search.rawData` instead.\n     */\n    get searchTransactions() { return selectors.searchTransactions(); },\n    /**\n     * @description\n     * Check is search filter applied\n     *\n     * @type {boolean} search status\n     * @name TransactionsController#searchTransactions\n     * @deprecated since 1.10.0. Use `viewModel.getState().searching` instead.\n     */\n    get isSearching() { return selectors.searching(); },\n    /**\n     * @description\n     * Flag that indicates whether all the transactions have been loaded during a search\n     *\n     * @type {boolean}\n     * @name TransactionsController#searchAllTransactionsLoaded\n     * @deprecated since 1.10.0. Use `viewModel.getState().search.loadedAll` instead.\n     */\n    get searchAllTransactionsLoaded() { return selectors.searchedAll(); },\n    /**\n     * @description\n     * Selected transaction info\n     *\n     * @type {object}\n     * @name TransactionsController#transcation\n     * @deprecated since 1.10.0. Use `viewModel.getState().transaction.data` instead.\n     */\n    get transaction() { return selectors.transaction(); },\n    /**\n     * @description\n     * Show all available transactions\n     *\n     * @type {boolean}\n     * @name TransactionsController#showAllTransactions\n     * @deprecated since 1.10.0. Use `viewModel.getState().search.category` instead.\n     */\n    get showAllTransactions() { return selectors.category() !== null; },\n    /**\n     * @description\n     * Show all available currencies\n     *\n     * @type {Array}\n     * @name TransactionsController#currencies\n     */\n    get currencies() { return viewModel.getState().currencies.data; },\n    cancelSearch,\n    loadMore,\n    search,\n    applySearchFilter,\n    searchMore,\n    eventBus,\n    onTransactionClick,\n    /**\n     * @description Contains transaction error\n     * @name TransactionsController#errors\n     * @type {object}\n     * @deprecated since 1.10.0. Use `viewModel.getState().error` instead.\n     */\n    errors: {\n      get transactionsError() { return selectors.error(); },\n    },\n    state,\n    onSort,\n    changePage,\n    exportToFile,\n    dismissTime,\n    loadAllTransactionsInitially,\n    showProductDetails,\n    changeTransactionCategory,\n    dismissNotification,\n    /* Lifecycle hooks */\n    $onInit,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/controller.js","/**\n * Widget events enum\n * @type {object}\n */\nconst Event = {\n  TRANSACTION_SELECTED: 'bb.event.transaction.selected',\n  PRODUCT_SELECTED: 'bb.event.product.selected',\n  SEARCH: 'bb.event.transactions.search',\n\n  CXP_ITEM_LOADED: 'cxp.item.loaded',\n  BB_ITEM_LOADED: 'bb.item.loaded',\n};\n\n/**\n * Widget actions enum\n * @type {object}\n */\nconst Action = {};\n\n/**\n * Widget messages enum\n * @type {object}\n */\nexport const Message = Object.assign({}, Action, Event);\n\n/**\n * Widget static text\n * @type {object}\n */\nexport const Text = {};\n\n/**\n * Widget intent enum\n * @type {object}\n */\nexport const Intent = {\n  // view.account.category.transactions key is deprecated\n  // Remove in 2.10.1\n  VIEW_CATEGORY_TRANSACTIONS: 'view.account.category.transactions',\n  VIEW_CATEGORY_DBIT_TRANSACTIONS: 'intent.rb.transactions.dbit.list.view',\n  VIEW_CATEGORY_CRDT_TRANSACTIONS: 'intent.rb.transactions.crdt.list.view',\n  SHOW_PRODUCT_DETAILS: 'intent.bb.productDetails.view.show',\n  CHANGE_TRANSACTION_CATEGORY: 'intent.rb.categories.management.list.view',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/constants.js","/**\n * @name defaultHooks\n * @type {object}\n *\n * @description\n * Default hooks for widget-bb-transactions-ng\n */\n\n/**\n * @name defaultHooks#processProductSelected\n * @type {function}\n *\n * @description\n * Default hook for selected product processing\n *\n * @param {module:model-bb-transactions.Product} productSelected Product to process\n * @returns {Object} Processed product\n */\nexport function processProductSelected(productSelected) {\n  return productSelected;\n}\n\n/**\n * @name defaultHooks#processRequestParams\n * @type {function}\n *\n * @description\n * Default hook for transactions query params processing/extending\n *\n * @param {object} params to process\n * @param {?number} params.amountGreaterThan Amount greater than\n * @param {?number} params.amountLessThan Amount less than\n * @param {?string} params.bookingDateGreaterThan Booking date greater than\n * @param {?string} params.bookingDateLessThan Booking date less than\n * @param {?string} params.productId The product id\n * @param {?string} params.type Type category\n * @param {?string} params.orderBy The key to order by\n * @param {?string} params.direction The direction to order by\n * @param {?number} params.from The page to list from\n * @param {?number} params.size The number of results per page\n * @param {?string} params.query The search term used to search for transactions\n * @returns {Object} Processed params\n */\nexport function processRequestParams(params) {\n  return params;\n}\n\n/**\n * @name defaultHooks#processTransactions\n * @type {function}\n *\n * @description\n * Default hook for transactions list post processing\n *\n * @param {module:data-bb-transactions-ng.TransactionsData.TransactionItemGet[]} transactions\n * @returns {Array} Processed transactions\n */\nexport function processTransactions(transactions) {\n  return transactions;\n}\n\n/**\n * @name defaultHooks#defaultPaginationType\n * @type {function}\n * @description\n * defaultPaginationType default hook for setting load-more or pagination as default\n *\n * @returns {?string}\n */\nexport const defaultPaginationType = () => null;\n\n/**\n * @name defaultHooks#defaultSortableColumn\n *\n * @description\n * defaultSortableColumn default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableColumn = () => null;\n\n/**\n * @name defaultHooks#defaultSortableDirection\n *\n * @description\n * defaultSortableDirection default hook\n *\n * @type {function}\n * @returns {?string}\n */\nexport const defaultSortableDirection = () => null;\n\n/**\n * @name defaultHooks#isDefaultProductFirst\n *\n * @description\n * isDefaultProductFirst default hook\n *\n * @type {function}\n * @returns {boolean}\n */\nexport const isDefaultProductFirst = () => true;\n\n/**\n * @name defaultHooks#extendLoadMoreParams\n * @type {function}\n *\n * @description\n * Default hook for extending loadMore params\n *\n * @param {object} params to extend\n * @param {?number} params.amountGreaterThan Amount greater than\n * @param {?number} params.amountLessThan Amount less than\n * @param {?string} params.bookingDateGreaterThan Booking date greater than\n * @param {?string} params.bookingDateLessThan Booking date less than\n * @param {?string} params.productId The product id\n * @param {?string} params.type Type category\n * @returns {object} Processed params\n */\nexport function extendLoadMoreParams(params) {\n  return params;\n}\n\n/**\n * @name defaultHooks#isTransactionsShown\n *\n * @description\n * Default hook for checking if the transactions should be visible\n *\n * @type {function}\n * @returns {boolean}\n */\nexport const isTransactionsShown = () => true;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/default-hooks.js","// Combine state reducers\nimport createInitialState from './initial-state';\nimport createInitReducers from './init';\nimport createListReducers from './list';\nimport createProductReducers from './product';\nimport createTransactionReducers from './transaction';\nimport createSearchReducers from './search';\nimport createExportReducers from './export';\nimport createCurrenciesReducers from './currencies';\nimport createNotificationReducers from './notification';\n\n/**\n * Defines the default page size for the transactions page\n * @type {number}\n * @inner\n */\nconst DEFAULT_PAGE_SIZE = 10;\n\n/**\n * Defines the default paginationType for the transactions page\n * as defined in the widget model.xml\n * @type {string}\n * @inner\n */\nconst DEFAULT_PAGINATION_TYPE = 'load-more';\n\nexport default (stateContainer, widget, hooks) => {\n  const stateParams = {\n    pageSize: widget.getLongPreference('transactionListSize') ||\n      widget.getLongPreference('bb.transaction.pageSize') ||\n      DEFAULT_PAGE_SIZE,\n    orderBy: hooks.defaultSortableColumn(),\n    sortDirection: hooks.defaultSortableDirection(),\n    paginationType: hooks.defaultPaginationType() ||\n      widget.getStringPreference('bb.transaction.paginationType') ||\n      DEFAULT_PAGINATION_TYPE,\n    loadOnInit: widget.getBooleanPreference('bb.transaction.initLoad'),\n  };\n  const initialState = createInitialState(stateParams);\n\n  /**\n   * @name ViewModel\n   * @type {object}\n   * @ngkey widget-bb-transactions-ng:viewModel\n   * @inner\n   */\n  return {\n    /**\n     * @name ViewModel#init\n     * @description Initialises view model with initial state\n     * @type {function}\n     * @inner\n     * @return {ViewState}\n     */\n    init: stateContainer.createAction((state = initialState) => state),\n    /**\n     * @name ViewModel#getState\n     * @description Returns view state\n     * @type {function}\n     * @inner\n     * @return {ViewState}\n     */\n    getState: stateContainer.getState,\n    /**\n     * @name ViewModel#initList\n     * @description\n     * Actions for updating the parts of the `ViewState` related to initial loading\n     * @type {ViewModelInitActions}\n     * @inner\n     */\n    initList: createInitReducers(stateContainer),\n    /**\n     * @name ViewModel#list\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transactions list\n     * @type {ViewModelListActions}\n     * @inner\n     */\n    list: createListReducers(stateContainer),\n    /**\n     * @name ViewModel#product\n     * @description\n     * Actions for updating the parts of the `ViewState` related to product state\n     * @type {ViewModelProductActions}\n     * @inner\n     */\n    product: createProductReducers(stateContainer, hooks),\n    /**\n     * @name ViewModel#transaction\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transaction state\n     * @type {ViewModelTransactionActions}\n     * @inner\n     */\n    transaction: createTransactionReducers(stateContainer),\n    /**\n     * @name ViewModel#search\n     * @description\n     * Actions for updating the parts of the `ViewState` related to transactions search\n     * @type {ViewModelSearchActions}\n     * @inner\n     */\n    search: createSearchReducers(stateContainer),\n    /**\n     * @name ViewModel#export\n     * @description\n     * Actions for updating the parts of the `ViewState` related to export transactions\n     * @type {ViewModelExportActions}\n     * @inner\n     */\n    export: createExportReducers(stateContainer),\n    /**\n     * @name ViewModel#currencies\n     * @description\n     * Actions for updating the parts of the `ViewState` related to export currencies\n     * @type {ViewModelCurrenciesActions}\n     * @inner\n     */\n    currencies: createCurrenciesReducers(stateContainer),\n    /**\n     * @name ViewModel#notification\n     * @description\n     * Actions for updating the parts of the `ViewState` related to notifications\n     * @type {ViewModelNotificationActions}\n     * @inner\n     */\n    notification: createNotificationReducers(stateContainer),\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/index.js","export default params => ({\n  initialLoading: params.loadOnInit,\n  searching: false,\n  error: null,\n  paginationType: params.paginationType,\n  currencies: [],\n  transactions: {\n    rawData: null,\n    loading: false,\n    loadedAll: false,\n    total: 0,\n    from: 0,\n    size: params.pageSize,\n    today: '',\n    hasTodayTransactions: false,\n  },\n  transaction: {\n    data: null,\n  },\n  product: {\n    data: null,\n  },\n  search: {\n    rawData: null,\n    loading: false,\n    loadedAll: false,\n    total: 0,\n    from: 0,\n    size: params.pageSize,\n    query: null,\n    bookingDateLessThan: null,\n    bookingDateGreaterThan: null,\n    amountGreaterThan: null,\n    amountLessThan: null,\n    creditDebitIndicator: null,\n    category: null,\n  },\n  export: {\n    exportFailed: false,\n  },\n  notifications: [],\n  sort: {\n    orderBy: params.orderBy,\n    direction: params.sortDirection,\n  },\n});\n\n/**\n * @typedef {object} ViewState\n * @description\n * The current state of the [ViewModel]{@link module:lib-bb-view-model-ng}.\n *\n * @property {boolean} initialLoading Indicates wether widget's initial loading is done\n * @property {boolean} searching Indicates wether transactions search is active at the moment\n * @property {object} error The last encountered error\n * @property {string} error.message Error message\n * @property {string} paginationType Represents current pagination type. 'pagination' or 'load-more'\n * @property {Array.<module:data-bb-payment-orders-ng.PaymentOrdersData.Currency>}\n * currencies List of available currencies\n * @property {object} transactions\n * @property {object[]} transactions.rawData Collection of transactions\n * @property {boolean} transactions.loading Indicates wether transactions are loading at the moment\n * @property {boolean} transactions.loadedAll Indicates wether all transactions are loaded\n * @property {number} transactions.total Total number of transactions\n * @property {number} transactions.from The current page (0 indexed)\n * @property {number} transactions.size The number of transactions in page\n * @property {string} transactions.today Today date in the `yyyy-MM-dd` format\n * @property {boolean} transactions.hasTodayTransactions Indicates wether transactions collection\n * contains today transactions\n *\n * @property {object} transaction\n * @property {boolean} transaction.data Current transaction object\n *\n * @property {object} product\n * @property {boolean} product.data Current product object\n *\n * @property {object} search\n * @property {object[]} search.rawData Collection of search transactions\n * @property {boolean} search.loading Indicates wether search transactions are loading at the moment\n * @property {boolean} search.loadedAll Indicates wether all search transactions are loaded\n * @property {number} search.total Total number of search results\n * @property {number} search.from The current page (0 indexed)\n * @property {number} search.size The number of transactions in page\n * @property {string} search.query Query search parameter\n * @property {string} search.bookingDateLessThan Maximum booking date search parameter\n * @property {string} search.bookingDateGreaterThan Minimum booking date search parameter\n * @property {string} search.amountGreaterThan Minimum amount search parameter\n * @property {string} search.amountLessThan Maximum amount search parameter\n * @property {string} search.creditDebitIndicator Credit or debit search parameter\n * @property {string} search.category Transaction category search parameter\n *\n * @property {object} export\n * @property {boolean} export.exportFailied Indicates wether last transactions export failed\n *\n * @property {object[]} notifications Array of notifications to be displayed\n *\n * @property {object} sort\n * @property {string} sort.orderBy Property by which transactions have to be ordered\n * @property {direction} sort.direction Ordering direction\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/initial-state.js","export default stateContainer => ({\n  /**\n   * @name ViewModelInitActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelInitActions#afterLoadDone\n   * @description Update the `ViewState` after initial loading is done,\n   * successfully or unsuccessfully\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  afterLoadDone: stateContainer.createAction(state => ({\n    ...state,\n    initialLoading: false,\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/init.js","import { uiError, hasTodayTransactions } from './helpers';\n\nexport default stateContainer => ({\n  /**\n   * @name ViewModelListActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelListActions#beforeLoad\n   * @description Update the `ViewState` before loading transactions\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  beforeLoad: stateContainer.createAction(state => ({\n    ...state,\n    error: null,\n    transactions: {\n      ...state.transactions,\n      loading: true,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterLoadSuccess\n   * @description Update the `ViewState` after successfully loading transactions\n   * @type {function}\n   * @inner\n   * @param {TransactionsResponse} response Transactions load response\n   * @return {void}\n   */\n  afterLoadSuccess: stateContainer.createAction((state, response) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      loading: false,\n      loadedAll: response.rawData.length < state.transactions.size,\n      rawData: state.paginationType === 'load-more' ?\n        [...state.transactions.rawData || [], ...response.rawData] :\n        response.rawData,\n      total: response.totalCount,\n      from: response.requestParams.from,\n    },\n    sort: {\n      orderBy: response.requestParams.orderBy || null,\n      direction: response.requestParams.direction || null,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterLoadError\n   * @description Update the `ViewState` after unsuccessful transactions load\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterLoadError: stateContainer.createAction((state, error) => ({\n    ...state,\n    error: uiError(error),\n    transactions: {\n      ...state.transactions,\n      loading: false,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#beforeTodayTransactionsLoad\n   * @description Update the `ViewState` before loading today transactions\n   * @type {function}\n   * @inner\n   * @param {string} today Today date in the `yyyy-MM-dd` format\n   * @return {void}\n   */\n  beforeTodayTransactionsLoad: stateContainer.createAction((state, today) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      today,\n      hasTodayTransactions: false,\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterTodayTransactionsLoadSuccess\n   * @description Update the `ViewState` after successfully loading today transactions\n   * @type {function}\n   * @inner\n   * @param {object[]} data Today transactions\n   * @return {void}\n   */\n  afterTodayTransactionsLoadSuccess: stateContainer.createAction((state, data) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      hasTodayTransactions: hasTodayTransactions(data, state.transactions.today),\n    },\n  })),\n\n  /**\n   * @name ViewModelListActions#afterTodayTransactionsLoadError\n   * @description Update the `ViewState` after unsuccessful today transactions load\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterTodayTransactionsLoadError: stateContainer.createAction((state, error) => ({\n    ...state,\n    error: uiError(error),\n  })),\n\n  /**\n   * @name ViewModelListActions#afterUpdateSuccess\n   * @description Update the `ViewState` after successful transaction item update\n   * @type {function}\n   * @inner\n   * @param {object} item Updated transaction item\n   * @return {void}\n   */\n  afterUpdateSuccess: stateContainer.createAction((state, item) => ({\n    ...state,\n    transactions: {\n      ...state.transactions,\n      rawData: state.transactions.rawData.map(data => (data.id === item.id ? item : data)),\n    },\n    notifications: [\n      ...state.notifications, {\n        id: Date.now(),\n        message: 'notification.transaction.category.change.success',\n        level: 'success',\n      },\n    ],\n  })),\n\n  /**\n   * @name ViewModelListActions#afterUpdateError\n   * @description Update the `ViewState` after unsuccessful transaction item update\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  afterUpdateError: stateContainer.createAction(state => ({\n    ...state,\n    notifications: [\n      ...state.notifications, {\n        id: Date.now(),\n        message: 'notification.transaction.category.change.fail',\n        level: 'danger',\n      },\n    ],\n  })),\n});\n\n/**\n * @typedef {object} TransactionsResponse\n * @property {object[]} rawData Loaded transactions array\n * @property {number} totalCount Total number of transactions\n * @property {LoadRequestParams} requestParams Request parameters object\n */\n\n/**\n * @typedef {object} LoadRequestParams\n * @property {number} from Page number to load\n * @property {number} size Page size to load\n * @property {string} productId Product ID of transactions to load\n * @property {?string} orderBy Order transactions by property\n * @property {?string} direction Transactions order direction\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/list.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\nconst errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\nexport const uiError = error => ({\n  message: errorMessages[error.code],\n});\n\n/**\n * @description\n * Helper function to iterate transaction collection and check for day in bookingDate field\n *\n * @name TransactionsController#isSameDay\n * @type {function}\n * @inner\n * @param {string} date String representing the target day\n * @returns {boolean}\n */\nconst isSameDay = date => transaction => transaction.bookingDate === date;\n\n/**\n * @description\n * Helper function to check if there are transactions for a specific date\n *\n * @name TransactionsController#hasTodayTransactions\n * @type {function}\n * @param {object[]} transactions Array of transaction items\n * @param {string} date String representing the target day\n * @returns {boolean}\n */\nexport const hasTodayTransactions = (transactions, date) =>\n  transactions.some(isSameDay(date));\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/helpers.js","import { uiError } from './helpers';\n\nexport default (stateContainer, hooks) => ({\n  /**\n   * @name ViewModelProductActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelProductActions#afterSelectProductSuccess\n   * @description Update the `ViewState` after new product selected\n   * @type {function}\n   * @inner\n   * @param {object|null} product New Product object\n   * @return {void}\n   */\n  afterSelectProductSuccess: stateContainer.createAction((state, product) => ({\n    ...state,\n    error: null,\n    searching: false,\n    product: {\n      data: product ? hooks.processProductSelected(product) : null,\n    },\n    currencies: [],\n    transactions: {\n      ...state.transactions,\n      rawData: null,\n      loading: false,\n      loadedAll: false,\n      total: 0,\n      from: 0,\n      today: '',\n      hasTodayTransactions: false,\n    },\n    search: {\n      ...state.search,\n      rawData: null,\n      loading: false,\n      loadedAll: false,\n      total: 0,\n      from: 0,\n      query: null,\n      bookingDateLessThan: null,\n      bookingDateGreaterThan: null,\n      amountGreaterThan: null,\n      amountLessThan: null,\n      creditDebitIndicator: null,\n    },\n  })),\n\n  /**\n   * @name ViewModelProductActions#afterSelectProductError\n   * @description Update the `ViewState` after unsuccessful product selection\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterSelectProductError: stateContainer.createAction((state, error) => ({\n    ...state,\n    error: uiError(error),\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/product.js","export default stateContainer => ({\n  /**\n   * @name ViewModelTransactionActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelTransactionActions#afterLoadSuccess\n   * @description Update the `ViewState` after successful transaction load\n   * @type {function}\n   * @inner\n   * @param {object} data Transaction object\n   * @return {void}\n   */\n  afterLoadSuccess: stateContainer.createAction((state, data) => ({\n    ...state,\n    transaction: {\n      data,\n    },\n  })),\n\n  /**\n   * @name ViewModelTransactionActions#beforeStore\n   * @description Update the `ViewState` before new transaction will be stored\n   * @type {function}\n   * @inner\n   * @param {object} data New transaction object\n   * @return {void}\n   */\n  beforeStore: stateContainer.createAction((state, data) => ({\n    ...state,\n    transaction: {\n      data,\n    },\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/transaction.js","import { uiError } from './helpers';\n\nexport default stateContainer => ({\n  /**\n   * @name ViewModelSearchActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelSearchActions#beforeSearch\n   * @description Update the `ViewState` before search transactions\n   * @type {function}\n   * @inner\n   * @param {SearchRequestParams} params Search request parameters\n   * @return {void}\n   */\n  beforeSearch: stateContainer.createAction((state, params) => ({\n    ...state,\n    searching: true,\n    error: null,\n    search: {\n      ...state.search,\n      loading: true,\n      query: params.query || null,\n      category: params.category || null,\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#afterSearchSuccess\n   * @description Update the `ViewState` after successful transactions search\n   * @type {function}\n   * @inner\n   * @param {TransactionsSearchResponse} response Search response\n   * @return {void}\n   */\n  afterSearchSuccess: stateContainer.createAction((state, response) => {\n    const query = response.requestParams.query || null;\n\n    if (!state.searching || state.search.query !== query) {\n      return state;\n    }\n\n    return {\n      ...state,\n      search: {\n        ...state.search,\n        loading: false,\n        loadedAll: response.rawData.length < state.search.size,\n        rawData: state.paginationType === 'load-more' && !!response.requestParams.from ?\n          [...state.search.rawData || [], ...response.rawData] :\n          response.rawData,\n        total: response.totalCount,\n        from: response.requestParams.from,\n        bookingDateLessThan: response.requestParams.bookingDateLessThan || null,\n        bookingDateGreaterThan: response.requestParams.bookingDateGreaterThan || null,\n        amountGreaterThan: response.requestParams.amountGreaterThan || null,\n        amountLessThan: response.requestParams.amountLessThan || null,\n        creditDebitIndicator: response.requestParams.creditDebitIndicator || null,\n      },\n      sort: {\n        orderBy: response.requestParams.orderBy || null,\n        direction: response.requestParams.direction || null,\n      },\n    };\n  }),\n\n  /**\n   * @name ViewModelSearchActions#afterSearchError\n   * @description Update the `ViewState` after unsuccessful transactions search\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterSearchError: stateContainer.createAction((state, error) => ({\n    ...state,\n    error: uiError(error),\n    search: {\n      ...state.search,\n      loading: false,\n    },\n  })),\n\n  /**\n   * @name ViewModelSearchActions#cancel\n   * @description Update the `ViewState` when transactions search canceled\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  cancel: stateContainer.createAction(state => ({\n    ...state,\n    error: null,\n    searching: false,\n    search: {\n      ...state.search,\n      rawData: null,\n      loading: false,\n      loadedAll: false,\n      total: 0,\n      from: 0,\n      query: null,\n      bookingDateLessThan: null,\n      bookingDateGreaterThan: null,\n      amountGreaterThan: null,\n      amountLessThan: null,\n      creditDebitIndicator: null,\n      category: null,\n    },\n  })),\n});\n\n/**\n * @typedef {object} TransactionsSearchResponse\n * @property {object[]} rawData Search transactions array\n * @property {number} totalCount Total number of found transactions\n * @property {SearchRequestParams} requestParams Request parameters object\n */\n\n/**\n * @typedef {object} SearchRequestParams\n * @property {number} from Page number to load\n * @property {number} size Page size to load\n * @property {string} productId Product ID of transactions to load\n * @property {?string} orderBy Order transactions by property\n * @property {?string} direction Transactions order direction\n * @property {?string} query Query search parameter\n * @property {?string} bookingDateLessThan Maximum booking date search parameter\n * @property {?string} bookingDateGreaterThan Minimum booking date search parameter\n * @property {?string} amountGreaterThan Minimum amount search parameter\n * @property {?string} amountLessThan Maximum amount search parameter\n * @property {?string} creditDebitIndicator Credit or debit search parameter\n * @property {?string} category Transaction category search parameter\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/search.js","export default stateContainer => ({\n  /**\n   * @name ViewModelExportActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelExportActions#beforeExport\n   * @description Update the `ViewState` before transactions export\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  beforeExport: stateContainer.createAction(state => ({\n    ...state,\n    export: {\n      exportFailed: false,\n    },\n  })),\n\n  /**\n   * @name ViewModelExportActions#afterExportError\n   * @description Update the `ViewState after failed transactions export\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  afterExportError: stateContainer.createAction(state => ({\n    ...state,\n    export: {\n      exportFailed: true,\n    },\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/export.js","import { uiError } from './helpers';\n\n\nexport default stateContainer => ({\n  /**\n   * @name ViewModelCurrenciesActions#beforeLoad\n   * @description Update the `ViewState` before loading currencies\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  beforeLoad: stateContainer.createAction(state => ({\n    ...state,\n    error: null,\n    currencies: {\n      ...state.currencies,\n      loading: true,\n    },\n  })),\n\n  /**\n   * @name ViewModelCurrenciesActions#afterLoadSuccess\n   * @description Update the `ViewState` after successful currencies load\n   * @type {function}\n   * @inner\n   * @param {array.<module:data-bb-payment-orders-ng.PaymentOrdersData.Currency>} data\n   * Currencies array\n   * @return {void}\n   */\n  afterLoadSuccess: stateContainer.createAction((state, data) => ({\n    ...state,\n    currencies: {\n      loading: false,\n      data,\n    },\n  })),\n\n  /**\n   * @name ViewModelCurrenciesActions#afterLoadError\n   * @description Update the `ViewState` after unsuccessful currencies load\n   * @type {function}\n   * @inner\n   * @param {module:lib-bb-model-errors.ModelError} error Response error\n   * @return {void}\n   */\n  afterLoadError: stateContainer.createAction((state, error) => ({\n    ...state,\n    error: uiError(error),\n    currencies: {\n      data: [],\n      loading: false,\n    },\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/currencies.js","export default stateContainer => ({\n  /**\n   * @name ViewModelNotificationActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelNotificationActions#removeNotification\n   * @description Update the `ViewState after failed transactions export\n   * @type {function}\n   * @inner\n   * @return {void}\n   */\n  removeNotification: stateContainer.createAction((state, payload) => ({\n    ...state,\n    notifications: state.notifications.filter(item => item.id !== payload),\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/view-model/notification.js","/* global window */\n/**\n * @name TransactionsService\n * @type {object}\n * @ngkey widget-bb-transactions-ng:service\n * @description\n * The service encapsulates the core functionality of the Transactions\n * Widget. It co-ordinates the communication of data from the `Model`\n * with the communication with the user by updating the {@link ViewState}.\n *\n * Asynchronous methods update the {@link ViewState} in 3 potential\n * stages; \"before\", \"success\", and \"error\", to allow the view to\n * provide feedback to the user.\n */\n\n/**\n * @name padded\n * @type {function}\n * @description Adds leading zero to number values less then 10\n * @inner\n * @param {number} num Number to add padding\n * @return {string} Padded number as a string\n */\nconst padded = num => (num > 9 ? String(num) : `0${num}`);\n\n/**\n * @name formatDate\n * @type {function}\n * @description Formats date to yyyy-MM-dd format\n * @inner\n * @param {object} date Date to format\n * @return {string} Formatted date string\n */\nconst formatDate = date =>\n  `${date.getFullYear()}-${padded(date.getMonth() + 1)}-${padded(date.getDate())}`;\n\n/**\n * @name createTransactionsService\n * @inner\n * @type {function}\n * @param {module:model-bb-transactions-ng.transactionsModel} model Transactions model\n * @param {ViewModel} viewModel\n * @param {module:lib-bb-widget.Widget} widget\n * @return {TransactionsService}\n */\nexport default (model, viewModel, $window) => ({\n  /**\n   * @name TransactionsService#load\n   * @type {function}\n   * @description\n   * Fetch a `page` of `transactions` from the model and\n   * update the {@link ViewState} to display them.\n   * @param {LoadRequestParams} params Request params\n   * @return {Promise.<void>}\n   */\n  load: params => {\n    viewModel.list.beforeLoad();\n\n    return model.load(params)\n      .then(raw => {\n        viewModel.list.afterLoadSuccess({\n          rawData: raw.data,\n          totalCount: raw.totalCount,\n          requestParams: params,\n        });\n      })\n      .catch(error => {\n        viewModel.list.afterLoadError(error);\n        throw error;\n      });\n  },\n\n  /**\n   * @name TransactionsService#search\n   * @type {function}\n   * @description\n   * Fetch a `page` of `transactions` search results from the model and\n   * update the {@link ViewState} to display them.\n   * @param {SearchRequestParams} params Request params\n   * @return {Promise.<void>}\n   */\n  search: params => {\n    viewModel.search.beforeSearch({\n      query: params.query,\n      category: params.category,\n    });\n\n    return model.load(params)\n      .then(raw => {\n        viewModel.search.afterSearchSuccess({\n          rawData: raw.data,\n          totalCount: raw.totalCount,\n          requestParams: params,\n        });\n      })\n      .catch(error => {\n        viewModel.search.afterSearchError(error);\n        throw error;\n      });\n  },\n\n  /**\n   * @name TransactionsService#export\n   * @type {function}\n   * @description\n   * Download transactions, which satisfy request parameter conditions, in specified format\n   * @param {ExportRequestParams} params Request params\n   * @return {Promise.<void>}\n   */\n  export: params => {\n    viewModel.export.beforeExport();\n\n    const uri = model.getExportFileResource(params);\n    $window.location.assign(uri);\n  },\n\n  /**\n   * @name TransactionsService#checkTodayTransactions\n   * @type {function}\n   * @description\n   * Fetch one today transaction and update `ViewState` to indicated\n   * are there today transactions present.\n   * @param {string} productId Product ID of transactions to load\n   * @return {Promise.<void>}\n   */\n  checkTodayTransactions: productId => {\n    const today = formatDate(new Date());\n    viewModel.list.beforeTodayTransactionsLoad(today);\n\n    const params = {\n      productId,\n      from: 0,\n      size: 1,\n      bookingDateLessThan: today,\n      bookingDateGreaterThan: today,\n    };\n\n    return model.load(params)\n      .then(({ data }) => viewModel.list.afterTodayTransactionsLoadSuccess(data))\n      .catch(error => {\n        viewModel.list.afterTodayTransactionsLoadError(error);\n      });\n  },\n\n  /**\n   * @name TransactionsService#setupSelectedProduct\n   * @type {function}\n   * @description\n   * Fetch selected product and update `ViewState`.\n   * @param {boolean} isDefaultProductFirst Indicates wether default product\n   * should be returned first\n   * @return {Promise.<void>}\n   */\n  setupSelectedProduct: isDefaultProductFirst =>\n    model.getSelectedProduct(isDefaultProductFirst)\n      .then(selectedProduct => {\n        viewModel.product.afterSelectProductSuccess(selectedProduct);\n      })\n      .catch(error => {\n        viewModel.product.afterSelectProductError(error);\n        throw error;\n      }),\n\n  /**\n   * @name TransactionsService#loadCurrentTransaction\n   * @type {function}\n   * @description\n   * Fetch selected transaction and update `ViewState`.\n   * @return {Promise.<void>}\n   */\n  loadCurrentTransaction: () => model.getCurrentTransaction()\n    .then(data => viewModel.transaction.afterLoadSuccess(data)),\n\n  /**\n   * @name TransactionsService#updateTransactionCategory\n   * @type {function}\n   * @description\n   * Updates transaction's category and `ViewState`.\n   * @return {Promise.<object>} Updated transaction item\n   */\n  updateTransactionCategory: payload =>\n    model.updateTransactionCategory(payload.transactionId, { category: payload.categoryName }),\n\n  /**\n   * @name TransactionsService#storeCurrentTransaction\n   * @type {function}\n   * @description\n   * Stores currently selected transaction and updates `ViewState`.\n   * @param {object} transaction Currently selected transaction\n   * @return {void}\n   */\n  storeCurrentTransaction: transaction => {\n    viewModel.transaction.beforeStore(transaction);\n    model.storeTransactionAsCurrent(transaction);\n  },\n\n  /**\n   * @description\n   * Request currencies list\n   *\n   * @inner\n   * @name TransactionsService#getCurrencies\n   * @type {function}\n   * @returns {Array.<module:data-bb-payment-orders-ng.PaymentOrdersData.Currency>} Currencies array\n   */\n  getCurrencies: () =>\n    model.getCurrencies()\n      .then(currencies => {\n        viewModel.currencies.afterLoadSuccess(currencies);\n      })\n      .catch(error => {\n        viewModel.currencies.afterLoadError(error);\n        throw error;\n      }),\n\n});\n\n/**\n * @typedef {object} ExportRequestParams\n * @property {string} exportFormat Export format\n * @property {string} productId Product ID of transactions to load\n * @property {?string} query Query search parameter\n * @property {?string} bookingDateLessThan Maximum booking date search parameter\n * @property {?string} bookingDateGreaterThan Minimum booking date search parameter\n * @property {?string} amountGreaterThan Minimum amount search parameter\n * @property {?string} amountLessThan Maximum amount search parameter\n * @property {?string} creditDebitIndicator Credit or debit search parameter\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transactions-ng/scripts/service.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******************","webpack:///webpack/bootstrap ae8dfb8780f1a537e6f0?6d38******************","webpack:///./lib-bb-storage/model.xml","webpack:///./lib-bb-storage/scripts/index.js","webpack:///./lib-bb-storage/scripts/storage.js","webpack:///./lib-bb-storage/scripts/adapters/mobile-sdk.js","webpack:///./lib-bb-storage/scripts/adapters/web/memory.js","webpack:///./lib-bb-storage/scripts/adapters/web.js","webpack:///./lib-bb-storage/scripts/adapters/web/subscriptions.js"],"names":["subscriptions","sessionStorageAvailable","storage","window","sessionStorage","x","setItem","removeItem","e","detectStorage","Promise","cxp","mobile","plugins","InMemoryStorage","noop","promise","afterPublish","serdes","KEY","lizers","Date","serialize","obj","toISOString","deserialize","serialized","replacer","_key","value","type","constructor","name","lizer","reviver","dateToJson","prototype","toJSON","result","JSON","stringify","parse","str","parseValue","console","warn","adapter","key","getItem","then","subscribe","callback","changedKey","oldValue","newValue","plugin","resolve","reject","item","wrapped","unsubscribe","data","Object","hasOwnProperty","call","notify","subscriptionsFor","forEach","filter","fn"],"mappings":"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","file":"lib-bb-storage/scripts/lib-bb-storage.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-storage\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-storage\"] = factory();\n\telse\n\t\troot[\"lib-bb-storage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae8dfb8780f1a537e6f0","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-storage/model.xml\n// module id = 0\n// module chunks = 19","/* global window */\n/**\n * @module lib-bb-storage\n * @description\n * Provides a cross-platform interface for temporary storage or data between widget/page instances.\n * It provides a key-value store that is persisted between Page loads in the browser and between\n * WebViews on mobile.\n *\n * @example\n * import bbStorageFactory from 'lib-bb-storage';\n * const bbStorage = bbStorageFactory(Promise);\n *\n * const counterStorage = 'counter';\n *\n * let counter;\n *\n * const unsubscribe = bbStorage.subscribe(counterStorage, (newValue) => {\n *   // called whenever the value in the storage is set\n *   counter = newValue;\n * });\n *\n * const increment = () =>\n *   bbStorage.getItem(counterStorage)\n *     .then((oldValue = 0) => bbStorage.setItem(counterStorage, oldValue + 1));\n */\n\nimport bbStorageService from './storage';\nimport mobileSdkAdapter from './adapters/mobile-sdk';\nimport memoryDataAdapter from './adapters/web/memory';\nimport webAdapter from './adapters/web';\nimport createSubscriptions from './adapters/web/subscriptions';\n\n// This creates a subscriptions collection that is shared across\n// storage adapter instances. This is so that state change\n// notifications can be propagated between widgets.\nconst subscriptions = createSubscriptions();\n\n/**\n * Detect if session storage is available\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Testing_for_support_vs_availability\n * @inner\n * @type {function}\n * @return {bool} True if session storage is available\n */\nconst sessionStorageAvailable = () => {\n  try {\n    const storage = window.sessionStorage;\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Attempt to choose the correct storage adapter\n *\n * @name detectStorage\n * @inner\n * @type {function}\n * @param {Promise} Promise A promise constructor\n * @return {StorageAdapter} The adapter suitable for the current environment\n */\nconst detectStorage = (Promise) => {\n  if (window.cxp && window.cxp.mobile && window.cxp.mobile.plugins\n      && window.cxp.mobile.plugins.InMemoryStorage) {\n    return mobileSdkAdapter(Promise, window.cxp.mobile.plugins.InMemoryStorage);\n  }\n\n  if (sessionStorageAvailable()) {\n    return webAdapter(Promise, subscriptions, window.sessionStorage);\n  }\n  return webAdapter(Promise, subscriptions, memoryDataAdapter());\n};\n\nconst noop = () => {};\n\nexport default (promise = Promise, afterPublish = noop) =>\n  bbStorageService(detectStorage(promise), afterPublish);\n\n/**\n * @typedef StorageAdapter\n * @inner\n * @type {object}\n */\n/**\n * @typedef StorageAdapter#getItem\n * @inner\n * @type {function}\n * @param {string} key The key to fetch\n * @return {Promise.<?string>} The serialized value stored in the key, if any\n */\n/**\n * @typedef StorageAdapter#setItem\n * @inner\n * @type {function}\n * @param {string} key The key to set\n * @param {string} value The value to store - should be serialized JSON\n * @return {Promise.<void>}\n */\n/**\n * @typedef StorageAdapter#removeItem\n * @inner\n * @type {function}\n * @param {string} key The key to remove\n * @return {Promise.<void>}\n */\n/**\n * @typedef StorageAdapter#subscribe\n * @inner\n * @type {function}\n * @param {string} key The key to subscribe to\n * @param {AdapterSubscription} callback The callback for when the value changes\n * @return {AdapterUnsubscribe}\n */\n/**\n * @typedef AdapterUnsubscribe\n * @inner\n * @description Unsubscribe from notifications\n * @type {function}\n * @return {void}\n */\n/**\n * @typedef AdapterSubscription\n * @inner\n * @type {function}\n * @param {string} key The key that changed\n * @param {string} oldValue The previous value attached to the key\n * @param {string} newValue The new value attached to the key\n * @return {void}\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/index.js","/**\n * @name default\n * @inner\n * @type {function}\n * @param {StorageAdapter} adapter An adapter for the underlying storage mechanism\n * @return {StorageService}\n */\n\nconst serdes = (() => {\n  const KEY = '__TYPE__';\n\n  const lizers = {\n    Date: {\n      serialize: obj => obj.toISOString(),\n      deserialize: serialized => new Date(serialized),\n    },\n  };\n\n  const replacer = (_key, value) => {\n    if (value == null) return value;\n\n    const type = value.constructor.name;\n    const lizer = lizers[type];\n    if (!lizer) return value;\n    return {\n      [KEY]: type,\n      value: lizer.serialize(value),\n    };\n  };\n\n  const reviver = (_key, value) => {\n    if (value == null) return value;\n\n    const type = value[KEY];\n    const lizer = lizers[type];\n    if (!lizer) return value;\n    return lizer.deserialize(value.value);\n  };\n\n  const serialize = obj => {\n    const dateToJson = Date.prototype.toJSON;\n    delete Date.prototype.toJSON;\n    const result = JSON.stringify(obj, replacer);\n    Date.prototype.toJSON = dateToJson; // eslint-disable-line no-extend-native\n\n    return result;\n  };\n\n  const deserialize = str => JSON.parse(str, reviver);\n\n  return { serialize, deserialize };\n})();\n\n/**\n * Attempt to parse a JSON value\n * @name parseValue\n * @inner\n * @type {function}\n * @param {string} value The JSON encoded value\n * @return {any|null} The parsed value, or null if parsing fails\n */\nconst parseValue = (value) => {\n  try {\n    return serdes.deserialize(value);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Could not deserialize value from storage - is it serialized as JSON?\\n'\n        + '`lib-bb-storage-ng` automatically serializes values. If you are trying to '\n        + '`get` a value stored by another source, ensure it is properly serialized.'\n    );\n    return null;\n  }\n};\n\n/**\n * A service that provides a consistent interface allowing setting and getting persistent data\n * via some underlying (platform specific) storage mechanism\n *\n * @name StorageService\n * @type {object}\n */\nexport default (adapter, afterPublish) => ({\n  /**\n   * @name StorageService#setItem\n   * @type {function}\n   * @param {string} key The key to set\n   * @param {any} value The value to store - must be serializable to JSON\n   * @return {Promise.<void>}\n   */\n  setItem: (key, value) => adapter.setItem(key, serdes.serialize(value)),\n\n  /**\n   * @name StorageService#getItem\n   * @type {function}\n   * @param {string} key The key to fetch\n   * @return {Promise.<any>} The value stored in the key, if any (null if key holds invalid JSON)\n   */\n  getItem: (key) => adapter.getItem(key).then(parseValue),\n\n  /**\n   * @name StorageService#removeItem\n   * @type {function}\n   * @param {string} key The key to remove\n   * @return {Promise.<void>}\n   */\n  removeItem: (key) =>\n    adapter.removeItem(key),\n\n  /**\n   * @name StorageService#subscribe\n   * @type {function}\n   * @param {string} key The key to subscribe to\n   * @param {Subscription} callback The callback to be called with the new value of the key\n   * @return {Unsubscribe}\n   */\n  subscribe: (key, callback) =>\n    adapter.subscribe(key, (changedKey, oldValue, newValue) => {\n      if (key === changedKey && oldValue !== newValue) {\n        callback(parseValue(newValue));\n        afterPublish();\n      }\n    }),\n});\n\n/**\n * @typedef Unsubscribe\n * @description Unsubscribe from notifications\n * @type {function}\n * @return {void}\n */\n/**\n * @typedef Subscription\n * @type {function}\n * @param {any} newValue The new value attached to the key\n * @return {void}\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/storage.js","/**\n * @name mobileSdkAdapter\n * @inner\n * @see https://my.backbase.com/docs/product-documentation/documentation//mobile-sdk/latest/in_memory_storage.html\n * @type {function}\n * @param {Promise} Promise A Promise constructor\n * @param {object} plugin An instance of the CXP Mobile SDK Storage plugin\n * @return {StorageAdapter}\n */\nexport default (Promise, plugin) => ({\n  setItem: (key, value) => new Promise((resolve, reject) => {\n    plugin.setItem(\n      () => { resolve(); },\n      reject, key, value\n    );\n  }),\n\n  getItem: (key) => new Promise((resolve, reject) => {\n    plugin.getItem(\n      (item) => { resolve(item); },\n      reject, key\n    );\n  }),\n\n  removeItem: (key) => new Promise((resolve, reject) => {\n    plugin.removeItem(\n      () => { resolve(); },\n      reject, key\n    );\n  }),\n\n  subscribe: (key, callback) => {\n    const wrapped = ({ key: changedKey, oldValue, newValue }) => {\n      if (changedKey === key) {\n        callback(key, oldValue, newValue);\n      }\n    };\n    plugin.subscribe(wrapped);\n    return () => {\n      plugin.unsubscribe(wrapped);\n    };\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/adapters/mobile-sdk.js","/**\n * @name memoryAdapter\n * @inner\n * @type {function}\n * @return {SynchronousDataAdapter}\n */\nexport default () => {\n  const data = {};\n  return {\n    getItem: key => (Object.prototype.hasOwnProperty.call(data, key) ? data[key] : null),\n    setItem: (key, value) => { data[key] = value; },\n    removeItem: (key) => { delete data[key]; },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/adapters/web/memory.js","/**\n * @name webStorageAdapter\n * @inner\n * @type {function}\n * @param {Promise} Promise A Promise constructor\n * @param {SynchronousDataAdapter} data A data adapter\n * @return {StorageAdapter}\n */\nexport default (Promise, subscriptions, data) => ({\n  setItem: (key, newValue) => new Promise((resolve) => {\n    const oldValue = data.getItem(key);\n    data.setItem(key, newValue);\n    subscriptions.notify(key, oldValue, newValue);\n    resolve();\n  }),\n\n  getItem: (key) => Promise.resolve(data.getItem(key)),\n\n  removeItem: (key) => new Promise((resolve) => {\n    const oldValue = data.getItem(key);\n    data.removeItem(key);\n    subscriptions.notify(key, oldValue, null);\n    resolve();\n  }),\n\n  subscribe: subscriptions.subscribe,\n});\n\n/**\n * @typedef SynchronousDataAdapter\n * @inner\n * @type {object}\n */\n/**\n * @typedef SynchronousDataAdapter#getItem\n * @inner\n * @type {function}\n * @param {string} key The key to fetch\n * @return {?string} The serialized value stored in the key, if any\n */\n/**\n * @typedef SynchronousDataAdapter#setItem\n * @inner\n * @type {function}\n * @param {string} key The key to set\n * @param {string} value The value to store - should be serialized JSON\n * @return {void}\n */\n/**\n * @typedef SynchronousDataAdapter#removeItem\n * @inner\n * @type {function}\n * @param {string} key The key to remove\n * @return {void}\n */\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/adapters/web.js","export default () => {\n  const subscriptions = {};\n\n  const subscriptionsFor = (key) => subscriptions[key] || [];\n\n  const notify = (key, oldValue, newValue) => {\n    subscriptionsFor(key).forEach((callback) => {\n      callback(key, oldValue, newValue);\n    });\n  };\n\n  const subscribe = (key, callback) => {\n    subscriptions[key] = [...subscriptionsFor(key), callback];\n    return () => {\n      subscriptions[key] = subscriptionsFor(key).filter(fn => fn !== callback);\n    };\n  };\n\n  return {\n    subscribe,\n    notify,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage/scripts/adapters/web/subscriptions.js"],"sourceRoot":""}
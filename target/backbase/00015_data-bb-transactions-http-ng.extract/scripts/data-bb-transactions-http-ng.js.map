{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 248939a3d0ff038b7611","webpack:///./fe-dist/http-ng/data-bb-transactions-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-transactions-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-transactions-http-ng/scripts/data-bb-transactions-http.js"],"names":["transactionsDataModuleKey","transactionsDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","serializeParams","version","definedTypes","parse","res","data","headers","status","statusText","getTransactions","params","url","method","then","catch","err","postTransactionsRecord","putTransactionsRecord","transactionId","getTransactionsTurnovers","getTransactionsCategorytotals","putTransactionsCategoryRecord","schemas"],"mappings":"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","file":"data-bb-transactions-http-ng/scripts/data-bb-transactions-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-transactions-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-transactions-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-transactions-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 248939a3d0ff038b7611","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-transactions-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-transactions-http-ng\n *\n * @description A data module for accessing the Transactions REST API.\n *\n * @returns {String} `data-bb-transactions-http-ng`\n * @example\n * import transactionsDataModuleKey, {\n *   transactionsDataKey,\n * } from 'data-bb-transactions-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport transactionsData from './data-bb-transactions-http';\n\nconst transactionsDataModuleKey = 'data-bb-transactions-http-ng';\n/**\n * @name transactionsDataKey\n * @type {string}\n * @description Angular dependency injection key for the TransactionsData service\n */\nexport const transactionsDataKey = 'data-bb-transactions-http-ng:transactionsData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(transactionsDataModuleKey, [])\n  \n  /**\n   * @constructor TransactionsData\n   * @type {object}\n   *\n   * @description Public api for data-bb-transactions-http-ng service\n   *\n   */\n  .provider(transactionsDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name TransactionsDataProvider\n     * @type {object}\n     * @ngkey data-bb-transactions-http-ng:transactionsDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-transactions-http-ng:transactionsDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-transactions-http-ng:transactionsDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name TransactionsDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name TransactionsDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        '$httpParamSerializer',\n        /* into */\n       transactionsData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-transactions-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient, serializeParams) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['TransactionsData.TransactionsGet'] = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"arrangementId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"externalId\":{\"type\":\"string\",\"maxLength\":50,\"required\":false},\"externalArrangementId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"productId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"reference\":{\"type\":\"string\",\"maxLength\":36,\"required\":true},\"description\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"typeGroup\":{\"type\":\"string\",\"enum\":[\"Payment\",\"Withdrawal\",\"Loans\",\"Fees\"],\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"SEPA CT\",\"SEPA DD\",\"BACS (UK)\",\"Faster payment (UK)\",\"CHAPS (UK)\",\"International payment\",\"Loan redemption\",\"Interest settlement\"],\"required\":true},\"category\":{\"type\":\"string\",\"maxLength\":50,\"required\":false},\"bookingDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"valueDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":false},\"amount\":{\"type\":\"number\",\"required\":true},\"currency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":true},\"creditDebitIndicator\":{\"type\":\"string\",\"enum\":[\"CRDT\",\"DBIT\"],\"required\":true},\"instructedAmount\":{\"type\":\"number\",\"required\":false},\"instructedCurrency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":false},\"currencyExchangeRate\":{\"type\":\"number\",\"required\":false},\"counterPartyName\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"counterPartyAccountNumber\":{\"type\":\"string\",\"maxLength\":36,\"required\":false},\"counterPartyBIC\":{\"type\":\"string\",\"maxLength\":11,\"required\":false},\"counterPartyCountry\":{\"type\":\"string\",\"minLength\":2,\"maxLength\":2,\"required\":false},\"counterPartyBankName\":{\"type\":\"string\",\"maxLength\":128,\"required\":false},\"creditorId\":{\"type\":\"string\",\"maxLength\":19,\"required\":false},\"mandateReference\":{\"type\":\"string\",\"maxLength\":128,\"required\":false}}}};\n  \n  definedTypes['TransactionsData.TransactionsPost'] = {\"properties\":{\"arrangementId\":{\"type\":\"string\",\"maxLength\":36,\"required\":false},\"externalId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"externalArrangementId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"reference\":{\"type\":\"string\",\"maxLength\":36,\"required\":true},\"description\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"typeGroup\":{\"type\":\"string\",\"enum\":[\"Payment\",\"Withdrawal\",\"Loans\",\"Fees\"],\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"SEPA CT\",\"SEPA DD\",\"BACS (UK)\",\"Faster payment (UK)\",\"CHAPS (UK)\",\"International payment\",\"Loan redemption\",\"Interest settlement\"],\"required\":true},\"category\":{\"type\":\"string\",\"maxLength\":50,\"required\":false},\"bookingDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"valueDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":false},\"amount\":{\"type\":\"number\",\"required\":true},\"currency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":true},\"creditDebitIndicator\":{\"type\":\"string\",\"enum\":[\"CRDT\",\"DBIT\"],\"required\":true},\"instructedAmount\":{\"type\":\"number\",\"required\":false},\"instructedCurrency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":false},\"currencyExchangeRate\":{\"type\":\"number\",\"required\":false},\"counterPartyName\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"counterPartyAccountNumber\":{\"type\":\"string\",\"maxLength\":36,\"required\":false},\"counterPartyBIC\":{\"type\":\"string\",\"maxLength\":11,\"required\":false},\"counterPartyCountry\":{\"type\":\"string\",\"minLength\":2,\"maxLength\":2,\"required\":false},\"counterPartyBankName\":{\"type\":\"string\",\"maxLength\":128,\"required\":false},\"creditorId\":{\"type\":\"string\",\"maxLength\":19,\"required\":false},\"mandateReference\":{\"type\":\"string\",\"maxLength\":128,\"required\":false}}};\n  \n  definedTypes['TransactionsData.TransactionItem'] = {\"properties\":{\"id\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"arrangementId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"externalId\":{\"type\":\"string\",\"maxLength\":50,\"required\":false},\"externalArrangementId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"productId\":{\"type\":\"string\",\"maxLength\":50,\"required\":true},\"reference\":{\"type\":\"string\",\"maxLength\":36,\"required\":true},\"description\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"typeGroup\":{\"type\":\"string\",\"enum\":[\"Payment\",\"Withdrawal\",\"Loans\",\"Fees\"],\"required\":true},\"type\":{\"type\":\"string\",\"enum\":[\"SEPA CT\",\"SEPA DD\",\"BACS (UK)\",\"Faster payment (UK)\",\"CHAPS (UK)\",\"International payment\",\"Loan redemption\",\"Interest settlement\"],\"required\":true},\"category\":{\"type\":\"string\",\"maxLength\":50,\"required\":false},\"bookingDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"valueDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":false},\"amount\":{\"type\":\"number\",\"required\":true},\"currency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":true},\"creditDebitIndicator\":{\"type\":\"string\",\"enum\":[\"CRDT\",\"DBIT\"],\"required\":true},\"instructedAmount\":{\"type\":\"number\",\"required\":false},\"instructedCurrency\":{\"enum\":[\"AED\",\"AFN\",\"ALL\",\"AMD\",\"ANG\",\"AOA\",\"ARS\",\"AUD\",\"AWG\",\"AZN\",\"BAM\",\"BBD\",\"BDT\",\"BGN\",\"BHD\",\"BIF\",\"BMD\",\"BND\",\"BOB\",\"BOV\",\"BRL\",\"BSD\",\"BTN\",\"BWP\",\"BYN\",\"BZD\",\"CAD\",\"CDF\",\"CHE\",\"CHW\",\"CLF\",\"CLP\",\"CNY\",\"COP\",\"COU\",\"CRC\",\"CUC\",\"CUP\",\"CVE\",\"CZK\",\"DJF\",\"DKK\",\"DOP\",\"DZD\",\"EGP\",\"ERN\",\"ETB\",\"EUR\",\"FJD\",\"FKP\",\"GBP\",\"GEL\",\"GHS\",\"GIP\",\"GMD\",\"GNF\",\"GTQ\",\"GYD\",\"HKD\",\"HNL\",\"HRK\",\"HTG\",\"HUF\",\"IDR\",\"ILS\",\"INR\",\"IQD\",\"IRR\",\"ISK\",\"JMD\",\"JOD\",\"JPY\",\"KES\",\"KGS\",\"KHR\",\"KMF\",\"KPW\",\"KWD\",\"KYD\",\"KZT\",\"LAK\",\"LBP\",\"LKR\",\"LRD\",\"LSL\",\"LYD\",\"MAD\",\"MDL\",\"MGA\",\"MKD\",\"MMK\",\"MNT\",\"MOP\",\"MRO\",\"MUR\",\"MVR\",\"MWK\",\"MXN\",\"MXV\",\"MYR\",\"MZN\",\"NAD\",\"NGN\",\"NIO\",\"NOK\",\"NPR\",\"NZD\",\"OMR\",\"PAB\",\"PEN\",\"PGK\",\"PHP\",\"PKR\",\"PLN\",\"PYG\",\"QAR\",\"RON\",\"RSD\",\"RUB\",\"RWF\",\"SAR\",\"SBD\",\"SCR\",\"SDG\",\"SEK\",\"SGD\",\"SHP\",\"SLL\",\"SOS\",\"SRD\",\"SSP\",\"STD\",\"SVC\",\"SYP\",\"SZL\",\"THB\",\"TJS\",\"TMT\",\"TND\",\"TOP\",\"TRY\",\"TTD\",\"TWD\",\"TZS\",\"UAH\",\"UGX\",\"USD\",\"USN\",\"UYI\",\"UYU\",\"UZS\",\"VEF\",\"VND\",\"VUV\",\"WST\",\"YER\",\"ZAR\",\"ZMW\",\"ZWL\"],\"required\":false},\"currencyExchangeRate\":{\"type\":\"number\",\"required\":false},\"counterPartyName\":{\"type\":\"string\",\"maxLength\":128,\"required\":true},\"counterPartyAccountNumber\":{\"type\":\"string\",\"maxLength\":36,\"required\":false},\"counterPartyBIC\":{\"type\":\"string\",\"maxLength\":11,\"required\":false},\"counterPartyCountry\":{\"type\":\"string\",\"minLength\":2,\"maxLength\":2,\"required\":false},\"counterPartyBankName\":{\"type\":\"string\",\"maxLength\":128,\"required\":false},\"creditorId\":{\"type\":\"string\",\"maxLength\":19,\"required\":false},\"mandateReference\":{\"type\":\"string\",\"maxLength\":128,\"required\":false}}};\n  \n  definedTypes['TransactionsData.TransactionsId'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['TransactionsData.TurnoversGet'] = {\"properties\":{\"arrangementIds\":{\"type\":\"array\",\"items\":{\"properties\":{}},\"required\":false},\"intervalDuration\":{\"enum\":[\"DAY\",\"WEEK\",\"MONTH\",\"YEAR\"],\"required\":false},\"turnovers\":{\"type\":\"array\",\"items\":{\"properties\":{\"intervalStartDate\":{\"type\":\"string\",\"format\":\"date-time\",\"required\":true},\"creditAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"debitAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"balance\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['TransactionsData.CategoryTotalsGet'] = {\"properties\":{\"total\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":false},\"items\":{\"type\":\"array\",\"items\":{\"properties\":{\"category\":{\"type\":\"string\",\"required\":true},\"totalAmount\":{\"type\":\"object\",\"properties\":{\"amount\":{\"type\":\"string\",\"required\":true},\"currencyCode\":{\"type\":\"string\",\"pattern\":\"^[A-Z]{3}$\",\"required\":true}},\"required\":true},\"trend\":{\"type\":\"number\",\"required\":true},\"portion\":{\"type\":\"number\",\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['TransactionsData.InternalServerError'] = {\"properties\":{\"status\":{\"type\":\"integer\",\"default\":\"500\",\"required\":false},\"message\":{\"type\":\"string\",\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef TransactionsData.CategoryTotalsGet\n   * @type {Object}\n   * @property {?TransactionsData.Currency} total The aggregate amount of all returned categories\n   * @property {?Array.<TransactionsData.CategoryTotalsItem>} items\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.CategoryTotalsItem\n   * @type {Object}\n   * @property {String} category Transactions category\n   * @property {TransactionsData.Currency} totalAmount The total amount of the aggregated transactions by category\n   * @property {Number} trend Percentage value of the trend\n   * @property {Number} portion What percentage of the total amount for a given period is this amount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.Currency\n   * @type {Object}\n   * @property {String} amount The amount in the specified currency\n   * @property {String} currencyCode The alpha-3 code (complying with ISO 4217) of the currency that qualifies the amount\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.InternalServerError\n   * @type {Object}\n   * @property {?Integer} status HTTP Status Code\n   * @property {String} message Further Information\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.TransactionItem\n   * @type {Object}\n   * @property {String} id Internally used unique identification of the transaction\n   * @property {String} arrangementId Reference to the product to which the transaction belongs\n   * @property {?String} externalId Internally used unique external identification of the transaction\n   * @property {String} externalArrangementId External reference to the product to which the transaction belongs\n   * @property {String} productId Reference to the product to which the transaction belongs\n   * @property {String} reference A tag/label issued by the initiator of the transaction in order to be able to refer to the respective transaction\n   * @property {String} description\n   * @property {String} typeGroup One of \"Payment\", \"Withdrawal\", \"Loans\", \"Fees\"\n   * @property {String} type One of \"SEPA CT\", \"SEPA DD\", \"BACS (UK)\", \"Faster payment (UK)\", \"CHAPS (UK)\", \"International payment\", \"Loan redemption\", \"Interest settlement\"\n   * @property {?String} category Transaction category\n   * @property {String} bookingDate The date the amount is posted to the balance of an account from a book keeping perspective.\n   * @property {?String} valueDate The date on which an amount posted to an account becomes interest bearing\n   * @property {Number} amount The amount of the transaction\n   * @property {String} currency\n   * @property {String} creditDebitIndicator\n   * @property {?Number} instructedAmount Only present if the transaction currency<>account currency\n   * @property {?String} instructedCurrency\n   * @property {?Number} currencyExchangeRate The exchange rate (between both account and transaction currency) that was used for the conversion. To be used if those currencies are not the same\n   * @property {String} counterPartyName The name of the counterparty\n   * @property {?String} counterPartyAccountNumber The International Bank Account Number of the counterparty\n   * @property {?String} counterPartyBIC The BIC of the counterparty\n   * @property {?String} counterPartyCountry ISO Country code\n   * @property {?String} counterPartyBankName The bank name of the counterparty\n   * @property {?String} creditorId Id of the creditor (Only for SEPA DD)\n   * @property {?String} mandateReference Mandate Reference (Only for SEPA DD)\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.TransactionsGet\n   * @type {Array.<TransactionsData.TransactionItem>}\n   */\n  \n  /**\n   * @typedef TransactionsData.TransactionsId\n   * @type {Object}\n   * @property {String} id Internally used unique identification\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.TransactionsPost\n   * @type {Object}\n   * @property {?String} arrangementId Reference to the product to which the transaction belongs\n   * @property {String} externalId Internally used unique external identification of the transaction\n   * @property {String} externalArrangementId External reference to the product to which the transaction belongs\n   * @property {String} reference A tag/label issued by the initiator of the transaction in order to be able to refer to the respective transaction\n   * @property {String} description\n   * @property {String} typeGroup One of \"Payment\", \"Withdrawal\", \"Loans\", \"Fees\"\n   * @property {String} type One of \"SEPA CT\", \"SEPA DD\", \"BACS (UK)\", \"Faster payment (UK)\", \"CHAPS (UK)\", \"International payment\", \"Loan redemption\", \"Interest settlement\"\n   * @property {?String} category Transaction category\n   * @property {String} bookingDate The date the amount is posted to the balance of an account from a book keeping perspective.\n   * @property {?String} valueDate The date on which an amount posted to an account becomes interest bearing\n   * @property {Number} amount The amount of the transaction\n   * @property {String} currency\n   * @property {String} creditDebitIndicator\n   * @property {?Number} instructedAmount Only present if the transaction currency<>account currency\n   * @property {?String} instructedCurrency\n   * @property {?Number} currencyExchangeRate The exchange rate (between both account and transaction currency) that was used for the conversion. To be used if those currencies are not the same\n   * @property {String} counterPartyName The name of the counterparty\n   * @property {?String} counterPartyAccountNumber The International Bank Account Number of the counterparty\n   * @property {?String} counterPartyBIC The BIC of the counterparty\n   * @property {?String} counterPartyCountry ISO Country code\n   * @property {?String} counterPartyBankName The bank name of the counterparty\n   * @property {?String} creditorId Id of the creditor (Only for SEPA DD)\n   * @property {?String} mandateReference Mandate Reference (Only for SEPA DD)\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.TurnoverItem\n   * @type {Object}\n   * @property {String} intervalStartDate Datetime of starting point for interval\n   * @property {TransactionsData.Currency} creditAmount Aggregated amount of the deposit transactions for the interval\n   * @property {TransactionsData.Currency} debitAmount Aggregated amount of the withdrawal transactions for the interval\n   * @property {TransactionsData.Currency} balance Resulted balance for the interval\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef TransactionsData.TurnoversGet\n   * @type {Object}\n   * @property {?Array.<String>} arrangementIds Reference to the arrangements to which the periodic balances belong\n   * @property {?String} intervalDuration\n   * @property {?Array.<TransactionsData.TurnoverItem>} turnovers\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n  /**\n   * @name TransactionsData#getTransactions\n   * @type {Function}\n   * @description Retrieves a list of pages limited in size and number by the page selection parameters, sorted and filtered\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?number} params.amountGreaterThan Amount greater than. Eg: 5.\n     \n   * @param {?number} params.amountLessThan Amount less than. Eg: 5.\n     \n   * @param {?string} params.bookingDateGreaterThan Booking date greater than. Eg: 2016-05-16.\n     \n   * @param {?string} params.bookingDateLessThan Booking date less than. Eg: 2016-05-16.\n     \n   * @param {?string} params.arrangementId The arrangement id. Eg: 11-22-33.\n     \n   * @param {?string} params.productId The product id.\n     \n   * @param {?string} params.type Type category. Eg: International payment.\n     \n   * @param {?string} params.description The description of transaction. Eg: description.\n     \n   * @param {?string} params.reference reference. Eg: reference.\n     \n   * @param {?string} params.typeGroup The type group. Eg: Payment.\n     \n   * @param {?string} params.counterPartyName The name of the counterparty. Eg: counterPartyName.\n     \n   * @param {?string} params.counterPartyAccountNumber The International Bank Account Number of the counterparty. Eg: counterPartyAccountNumber.\n     \n   * @param {?string} params.creditDebitIndicator Indicates whether the amount is credited or debited. Eg: CRDT.\n     \n   * @param {?string} params.query The search term used to search for transactions.\n     \n   * @param {?string} params.category Category of the transactions. Eg: Transportation.\n     \n   * @param {?string} params.billingStatus Billing status of the transaction. Eg: BILLED.\n     \n   * @param {?string} params.currency Transaction currency. Eg: EUR.\n     \n   * @param {?number} params.from Page Number. Skip over pages of elements by specifying a start value for the query. Eg: 20. (defaults to 0)\n     \n   * @param {?string} params.cursor Record UUID. As an alternative for specifying 'from' this allows to point to the record to start the selection from. Eg: 76d5be8b-e80d-4842-8ce6-ea67519e8f74. (defaults to \"\")\n     \n   * @param {?number} params.size Limit the number of elements on the response. When used in combination with cursor, the value\nis allowed to be a negative number to indicate requesting records upwards from the starting point indicated\nby the cursor. Eg: 80. (defaults to 10)\n     \n   * @param {?string} params.orderBy Order by field: description, bookingDate, arrangementId, externalId, externalArrangementId, productId, reference, typeGroup, type, category, valueDate, amount, currency, creditDebitIndicator, instructedAmount, instructedCurrency, currencyExchangeRate, counterPartyName, counterPartyAccountNumber.\n     \n   * @param {?string} params.direction Direction. (defaults to DESC)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.TransactionsGet} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .getTransactions(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getTransactions(params, headers) {\n    const url = `${baseUri}${version}/transactions`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name TransactionsData#postTransactionsRecord\n   * @type {Function}\n   * @description # Transaction\n\nThis EndPoint allows creating/retrieving of Business/Retail banking transactions for a particular arrangement\n   \n   * @param {TransactionsData.TransactionsPost} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.TransactionsId} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .postTransactionsRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postTransactionsRecord(data, headers) {\n    const url = `${baseUri}${version}/transactions`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name TransactionsData#putTransactionsRecord\n   * @type {Function}\n   * @description put request\n   \n   * @param {string} transactionId \n     \n   \n   * @param {TransactionsData.TransactionItem} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.TransactionItem} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .putTransactionsRecord(transactionId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putTransactionsRecord(transactionId, data, headers) {\n    const url = `${baseUri}${version}/transactions/${transactionId}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name TransactionsData#getTransactionsTurnovers\n   * @type {Function}\n   * @description get request\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.arrangementIds Reference to the arrangements to which the periodic balances belong.\n     \n   * @param {string} params.periodStartDate Date of the turnovers evaluation period start. Eg: 2016-12-31.\n     \n   * @param {string} params.periodEndDate Date of a turnovers evaluation period end. Eg: 2017-04-30.\n     \n   * @param {string} params.intervalDuration Length of each periodic interval. Eg: MONTH.\n     \n   * @param {?number} params.intervalStartDay Day of a month to start turnover interval. Eg: 1.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.TurnoversGet} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .getTransactionsTurnovers(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getTransactionsTurnovers(params, headers) {\n    const url = `${baseUri}${version}/transactions/turnovers`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name TransactionsData#getTransactionsCategorytotals\n   * @type {Function}\n   * @description get request\n   \n   * @param {Object} params Map of query parameters.\n     \n   * @param {string} params.creditDebitIndicator Flag to determine if credit or debit transactions will be aggregated.\n     \n   * @param {string} params.arrangementIds Reference to the arrangements to which the income/spending analysis belong.\n     \n   * @param {string} params.periodStartDate Date of the income/spending evaluation period start. Eg: 2016-12-31.\n     \n   * @param {string} params.periodEndDate Date of a income/spending evaluation period end. Eg: 2017-04-30.\n     \n   * @param {?string} params.intervalDuration Length of each periodic interval. (defaults to MONTH)\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.CategoryTotalsGet} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .getTransactionsCategorytotals(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getTransactionsCategorytotals(params, headers) {\n    const url = `${baseUri}${version}/transactions/categorytotals`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n  /**\n   * @name TransactionsData#putTransactionsCategoryRecord\n   * @type {Function}\n   * @description put request\n   \n   * @param {string} transactionId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link TransactionsData.TransactionItem} on success  or rejects with data of {@link TransactionsData.InternalServerError} on error\n   *\n   * @example\n   * transactionsData\n   *  .putTransactionsCategoryRecord(transactionId, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putTransactionsCategoryRecord(transactionId, data, headers) {\n    const url = `${baseUri}${version}/transactions/${transactionId}/category`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name TransactionsData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postTransactionsRecord method\n   *\n   * @name TransactionsData#schemas.postTransactionsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"arrangementId\": {\n      \"type\": \"string\",\n      \"maxLength\": 36,\n      \"required\": false\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"externalArrangementId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"reference\": {\n      \"type\": \"string\",\n      \"maxLength\": 36,\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": true\n    },\n    \"typeGroup\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Payment\",\n        \"Withdrawal\",\n        \"Loans\",\n        \"Fees\"\n      ],\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"SEPA CT\",\n        \"SEPA DD\",\n        \"BACS (UK)\",\n        \"Faster payment (UK)\",\n        \"CHAPS (UK)\",\n        \"International payment\",\n        \"Loan redemption\",\n        \"Interest settlement\"\n      ],\n      \"required\": true\n    },\n    \"category\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": false\n    },\n    \"bookingDate\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": true\n    },\n    \"valueDate\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": false\n    },\n    \"amount\": {\n      \"type\": \"number\",\n      \"required\": true\n    },\n    \"currency\": {\n      \"enum\": [\n        \"AED\",\n        \"AFN\",\n        \"ALL\",\n        \"AMD\",\n        \"ANG\",\n        \"AOA\",\n        \"ARS\",\n        \"AUD\",\n        \"AWG\",\n        \"AZN\",\n        \"BAM\",\n        \"BBD\",\n        \"BDT\",\n        \"BGN\",\n        \"BHD\",\n        \"BIF\",\n        \"BMD\",\n        \"BND\",\n        \"BOB\",\n        \"BOV\",\n        \"BRL\",\n        \"BSD\",\n        \"BTN\",\n        \"BWP\",\n        \"BYN\",\n        \"BZD\",\n        \"CAD\",\n        \"CDF\",\n        \"CHE\",\n        \"CHW\",\n        \"CLF\",\n        \"CLP\",\n        \"CNY\",\n        \"COP\",\n        \"COU\",\n        \"CRC\",\n        \"CUC\",\n        \"CUP\",\n        \"CVE\",\n        \"CZK\",\n        \"DJF\",\n        \"DKK\",\n        \"DOP\",\n        \"DZD\",\n        \"EGP\",\n        \"ERN\",\n        \"ETB\",\n        \"EUR\",\n        \"FJD\",\n        \"FKP\",\n        \"GBP\",\n        \"GEL\",\n        \"GHS\",\n        \"GIP\",\n        \"GMD\",\n        \"GNF\",\n        \"GTQ\",\n        \"GYD\",\n        \"HKD\",\n        \"HNL\",\n        \"HRK\",\n        \"HTG\",\n        \"HUF\",\n        \"IDR\",\n        \"ILS\",\n        \"INR\",\n        \"IQD\",\n        \"IRR\",\n        \"ISK\",\n        \"JMD\",\n        \"JOD\",\n        \"JPY\",\n        \"KES\",\n        \"KGS\",\n        \"KHR\",\n        \"KMF\",\n        \"KPW\",\n        \"KWD\",\n        \"KYD\",\n        \"KZT\",\n        \"LAK\",\n        \"LBP\",\n        \"LKR\",\n        \"LRD\",\n        \"LSL\",\n        \"LYD\",\n        \"MAD\",\n        \"MDL\",\n        \"MGA\",\n        \"MKD\",\n        \"MMK\",\n        \"MNT\",\n        \"MOP\",\n        \"MRO\",\n        \"MUR\",\n        \"MVR\",\n        \"MWK\",\n        \"MXN\",\n        \"MXV\",\n        \"MYR\",\n        \"MZN\",\n        \"NAD\",\n        \"NGN\",\n        \"NIO\",\n        \"NOK\",\n        \"NPR\",\n        \"NZD\",\n        \"OMR\",\n        \"PAB\",\n        \"PEN\",\n        \"PGK\",\n        \"PHP\",\n        \"PKR\",\n        \"PLN\",\n        \"PYG\",\n        \"QAR\",\n        \"RON\",\n        \"RSD\",\n        \"RUB\",\n        \"RWF\",\n        \"SAR\",\n        \"SBD\",\n        \"SCR\",\n        \"SDG\",\n        \"SEK\",\n        \"SGD\",\n        \"SHP\",\n        \"SLL\",\n        \"SOS\",\n        \"SRD\",\n        \"SSP\",\n        \"STD\",\n        \"SVC\",\n        \"SYP\",\n        \"SZL\",\n        \"THB\",\n        \"TJS\",\n        \"TMT\",\n        \"TND\",\n        \"TOP\",\n        \"TRY\",\n        \"TTD\",\n        \"TWD\",\n        \"TZS\",\n        \"UAH\",\n        \"UGX\",\n        \"USD\",\n        \"USN\",\n        \"UYI\",\n        \"UYU\",\n        \"UZS\",\n        \"VEF\",\n        \"VND\",\n        \"VUV\",\n        \"WST\",\n        \"YER\",\n        \"ZAR\",\n        \"ZMW\",\n        \"ZWL\"\n      ],\n      \"required\": true\n    },\n    \"creditDebitIndicator\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"CRDT\",\n        \"DBIT\"\n      ],\n      \"required\": true\n    },\n    \"instructedAmount\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"instructedCurrency\": {\n      \"enum\": [\n        \"AED\",\n        \"AFN\",\n        \"ALL\",\n        \"AMD\",\n        \"ANG\",\n        \"AOA\",\n        \"ARS\",\n        \"AUD\",\n        \"AWG\",\n        \"AZN\",\n        \"BAM\",\n        \"BBD\",\n        \"BDT\",\n        \"BGN\",\n        \"BHD\",\n        \"BIF\",\n        \"BMD\",\n        \"BND\",\n        \"BOB\",\n        \"BOV\",\n        \"BRL\",\n        \"BSD\",\n        \"BTN\",\n        \"BWP\",\n        \"BYN\",\n        \"BZD\",\n        \"CAD\",\n        \"CDF\",\n        \"CHE\",\n        \"CHW\",\n        \"CLF\",\n        \"CLP\",\n        \"CNY\",\n        \"COP\",\n        \"COU\",\n        \"CRC\",\n        \"CUC\",\n        \"CUP\",\n        \"CVE\",\n        \"CZK\",\n        \"DJF\",\n        \"DKK\",\n        \"DOP\",\n        \"DZD\",\n        \"EGP\",\n        \"ERN\",\n        \"ETB\",\n        \"EUR\",\n        \"FJD\",\n        \"FKP\",\n        \"GBP\",\n        \"GEL\",\n        \"GHS\",\n        \"GIP\",\n        \"GMD\",\n        \"GNF\",\n        \"GTQ\",\n        \"GYD\",\n        \"HKD\",\n        \"HNL\",\n        \"HRK\",\n        \"HTG\",\n        \"HUF\",\n        \"IDR\",\n        \"ILS\",\n        \"INR\",\n        \"IQD\",\n        \"IRR\",\n        \"ISK\",\n        \"JMD\",\n        \"JOD\",\n        \"JPY\",\n        \"KES\",\n        \"KGS\",\n        \"KHR\",\n        \"KMF\",\n        \"KPW\",\n        \"KWD\",\n        \"KYD\",\n        \"KZT\",\n        \"LAK\",\n        \"LBP\",\n        \"LKR\",\n        \"LRD\",\n        \"LSL\",\n        \"LYD\",\n        \"MAD\",\n        \"MDL\",\n        \"MGA\",\n        \"MKD\",\n        \"MMK\",\n        \"MNT\",\n        \"MOP\",\n        \"MRO\",\n        \"MUR\",\n        \"MVR\",\n        \"MWK\",\n        \"MXN\",\n        \"MXV\",\n        \"MYR\",\n        \"MZN\",\n        \"NAD\",\n        \"NGN\",\n        \"NIO\",\n        \"NOK\",\n        \"NPR\",\n        \"NZD\",\n        \"OMR\",\n        \"PAB\",\n        \"PEN\",\n        \"PGK\",\n        \"PHP\",\n        \"PKR\",\n        \"PLN\",\n        \"PYG\",\n        \"QAR\",\n        \"RON\",\n        \"RSD\",\n        \"RUB\",\n        \"RWF\",\n        \"SAR\",\n        \"SBD\",\n        \"SCR\",\n        \"SDG\",\n        \"SEK\",\n        \"SGD\",\n        \"SHP\",\n        \"SLL\",\n        \"SOS\",\n        \"SRD\",\n        \"SSP\",\n        \"STD\",\n        \"SVC\",\n        \"SYP\",\n        \"SZL\",\n        \"THB\",\n        \"TJS\",\n        \"TMT\",\n        \"TND\",\n        \"TOP\",\n        \"TRY\",\n        \"TTD\",\n        \"TWD\",\n        \"TZS\",\n        \"UAH\",\n        \"UGX\",\n        \"USD\",\n        \"USN\",\n        \"UYI\",\n        \"UYU\",\n        \"UZS\",\n        \"VEF\",\n        \"VND\",\n        \"VUV\",\n        \"WST\",\n        \"YER\",\n        \"ZAR\",\n        \"ZMW\",\n        \"ZWL\"\n      ],\n      \"required\": false\n    },\n    \"currencyExchangeRate\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"counterPartyName\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": true\n    },\n    \"counterPartyAccountNumber\": {\n      \"type\": \"string\",\n      \"maxLength\": 36,\n      \"required\": false\n    },\n    \"counterPartyBIC\": {\n      \"type\": \"string\",\n      \"maxLength\": 11,\n      \"required\": false\n    },\n    \"counterPartyCountry\": {\n      \"type\": \"string\",\n      \"minLength\": 2,\n      \"maxLength\": 2,\n      \"required\": false\n    },\n    \"counterPartyBankName\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": false\n    },\n    \"creditorId\": {\n      \"type\": \"string\",\n      \"maxLength\": 19,\n      \"required\": false\n    },\n    \"mandateReference\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postTransactionsRecord = definedTypes['TransactionsData.TransactionsPost'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putTransactionsRecord method\n   *\n   * @name TransactionsData#schemas.putTransactionsRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"arrangementId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"externalId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": false\n    },\n    \"externalArrangementId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"productId\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": true\n    },\n    \"reference\": {\n      \"type\": \"string\",\n      \"maxLength\": 36,\n      \"required\": true\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": true\n    },\n    \"typeGroup\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Payment\",\n        \"Withdrawal\",\n        \"Loans\",\n        \"Fees\"\n      ],\n      \"required\": true\n    },\n    \"type\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"SEPA CT\",\n        \"SEPA DD\",\n        \"BACS (UK)\",\n        \"Faster payment (UK)\",\n        \"CHAPS (UK)\",\n        \"International payment\",\n        \"Loan redemption\",\n        \"Interest settlement\"\n      ],\n      \"required\": true\n    },\n    \"category\": {\n      \"type\": \"string\",\n      \"maxLength\": 50,\n      \"required\": false\n    },\n    \"bookingDate\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": true\n    },\n    \"valueDate\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": false\n    },\n    \"amount\": {\n      \"type\": \"number\",\n      \"required\": true\n    },\n    \"currency\": {\n      \"enum\": [\n        \"AED\",\n        \"AFN\",\n        \"ALL\",\n        \"AMD\",\n        \"ANG\",\n        \"AOA\",\n        \"ARS\",\n        \"AUD\",\n        \"AWG\",\n        \"AZN\",\n        \"BAM\",\n        \"BBD\",\n        \"BDT\",\n        \"BGN\",\n        \"BHD\",\n        \"BIF\",\n        \"BMD\",\n        \"BND\",\n        \"BOB\",\n        \"BOV\",\n        \"BRL\",\n        \"BSD\",\n        \"BTN\",\n        \"BWP\",\n        \"BYN\",\n        \"BZD\",\n        \"CAD\",\n        \"CDF\",\n        \"CHE\",\n        \"CHW\",\n        \"CLF\",\n        \"CLP\",\n        \"CNY\",\n        \"COP\",\n        \"COU\",\n        \"CRC\",\n        \"CUC\",\n        \"CUP\",\n        \"CVE\",\n        \"CZK\",\n        \"DJF\",\n        \"DKK\",\n        \"DOP\",\n        \"DZD\",\n        \"EGP\",\n        \"ERN\",\n        \"ETB\",\n        \"EUR\",\n        \"FJD\",\n        \"FKP\",\n        \"GBP\",\n        \"GEL\",\n        \"GHS\",\n        \"GIP\",\n        \"GMD\",\n        \"GNF\",\n        \"GTQ\",\n        \"GYD\",\n        \"HKD\",\n        \"HNL\",\n        \"HRK\",\n        \"HTG\",\n        \"HUF\",\n        \"IDR\",\n        \"ILS\",\n        \"INR\",\n        \"IQD\",\n        \"IRR\",\n        \"ISK\",\n        \"JMD\",\n        \"JOD\",\n        \"JPY\",\n        \"KES\",\n        \"KGS\",\n        \"KHR\",\n        \"KMF\",\n        \"KPW\",\n        \"KWD\",\n        \"KYD\",\n        \"KZT\",\n        \"LAK\",\n        \"LBP\",\n        \"LKR\",\n        \"LRD\",\n        \"LSL\",\n        \"LYD\",\n        \"MAD\",\n        \"MDL\",\n        \"MGA\",\n        \"MKD\",\n        \"MMK\",\n        \"MNT\",\n        \"MOP\",\n        \"MRO\",\n        \"MUR\",\n        \"MVR\",\n        \"MWK\",\n        \"MXN\",\n        \"MXV\",\n        \"MYR\",\n        \"MZN\",\n        \"NAD\",\n        \"NGN\",\n        \"NIO\",\n        \"NOK\",\n        \"NPR\",\n        \"NZD\",\n        \"OMR\",\n        \"PAB\",\n        \"PEN\",\n        \"PGK\",\n        \"PHP\",\n        \"PKR\",\n        \"PLN\",\n        \"PYG\",\n        \"QAR\",\n        \"RON\",\n        \"RSD\",\n        \"RUB\",\n        \"RWF\",\n        \"SAR\",\n        \"SBD\",\n        \"SCR\",\n        \"SDG\",\n        \"SEK\",\n        \"SGD\",\n        \"SHP\",\n        \"SLL\",\n        \"SOS\",\n        \"SRD\",\n        \"SSP\",\n        \"STD\",\n        \"SVC\",\n        \"SYP\",\n        \"SZL\",\n        \"THB\",\n        \"TJS\",\n        \"TMT\",\n        \"TND\",\n        \"TOP\",\n        \"TRY\",\n        \"TTD\",\n        \"TWD\",\n        \"TZS\",\n        \"UAH\",\n        \"UGX\",\n        \"USD\",\n        \"USN\",\n        \"UYI\",\n        \"UYU\",\n        \"UZS\",\n        \"VEF\",\n        \"VND\",\n        \"VUV\",\n        \"WST\",\n        \"YER\",\n        \"ZAR\",\n        \"ZMW\",\n        \"ZWL\"\n      ],\n      \"required\": true\n    },\n    \"creditDebitIndicator\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"CRDT\",\n        \"DBIT\"\n      ],\n      \"required\": true\n    },\n    \"instructedAmount\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"instructedCurrency\": {\n      \"enum\": [\n        \"AED\",\n        \"AFN\",\n        \"ALL\",\n        \"AMD\",\n        \"ANG\",\n        \"AOA\",\n        \"ARS\",\n        \"AUD\",\n        \"AWG\",\n        \"AZN\",\n        \"BAM\",\n        \"BBD\",\n        \"BDT\",\n        \"BGN\",\n        \"BHD\",\n        \"BIF\",\n        \"BMD\",\n        \"BND\",\n        \"BOB\",\n        \"BOV\",\n        \"BRL\",\n        \"BSD\",\n        \"BTN\",\n        \"BWP\",\n        \"BYN\",\n        \"BZD\",\n        \"CAD\",\n        \"CDF\",\n        \"CHE\",\n        \"CHW\",\n        \"CLF\",\n        \"CLP\",\n        \"CNY\",\n        \"COP\",\n        \"COU\",\n        \"CRC\",\n        \"CUC\",\n        \"CUP\",\n        \"CVE\",\n        \"CZK\",\n        \"DJF\",\n        \"DKK\",\n        \"DOP\",\n        \"DZD\",\n        \"EGP\",\n        \"ERN\",\n        \"ETB\",\n        \"EUR\",\n        \"FJD\",\n        \"FKP\",\n        \"GBP\",\n        \"GEL\",\n        \"GHS\",\n        \"GIP\",\n        \"GMD\",\n        \"GNF\",\n        \"GTQ\",\n        \"GYD\",\n        \"HKD\",\n        \"HNL\",\n        \"HRK\",\n        \"HTG\",\n        \"HUF\",\n        \"IDR\",\n        \"ILS\",\n        \"INR\",\n        \"IQD\",\n        \"IRR\",\n        \"ISK\",\n        \"JMD\",\n        \"JOD\",\n        \"JPY\",\n        \"KES\",\n        \"KGS\",\n        \"KHR\",\n        \"KMF\",\n        \"KPW\",\n        \"KWD\",\n        \"KYD\",\n        \"KZT\",\n        \"LAK\",\n        \"LBP\",\n        \"LKR\",\n        \"LRD\",\n        \"LSL\",\n        \"LYD\",\n        \"MAD\",\n        \"MDL\",\n        \"MGA\",\n        \"MKD\",\n        \"MMK\",\n        \"MNT\",\n        \"MOP\",\n        \"MRO\",\n        \"MUR\",\n        \"MVR\",\n        \"MWK\",\n        \"MXN\",\n        \"MXV\",\n        \"MYR\",\n        \"MZN\",\n        \"NAD\",\n        \"NGN\",\n        \"NIO\",\n        \"NOK\",\n        \"NPR\",\n        \"NZD\",\n        \"OMR\",\n        \"PAB\",\n        \"PEN\",\n        \"PGK\",\n        \"PHP\",\n        \"PKR\",\n        \"PLN\",\n        \"PYG\",\n        \"QAR\",\n        \"RON\",\n        \"RSD\",\n        \"RUB\",\n        \"RWF\",\n        \"SAR\",\n        \"SBD\",\n        \"SCR\",\n        \"SDG\",\n        \"SEK\",\n        \"SGD\",\n        \"SHP\",\n        \"SLL\",\n        \"SOS\",\n        \"SRD\",\n        \"SSP\",\n        \"STD\",\n        \"SVC\",\n        \"SYP\",\n        \"SZL\",\n        \"THB\",\n        \"TJS\",\n        \"TMT\",\n        \"TND\",\n        \"TOP\",\n        \"TRY\",\n        \"TTD\",\n        \"TWD\",\n        \"TZS\",\n        \"UAH\",\n        \"UGX\",\n        \"USD\",\n        \"USN\",\n        \"UYI\",\n        \"UYU\",\n        \"UZS\",\n        \"VEF\",\n        \"VND\",\n        \"VUV\",\n        \"WST\",\n        \"YER\",\n        \"ZAR\",\n        \"ZMW\",\n        \"ZWL\"\n      ],\n      \"required\": false\n    },\n    \"currencyExchangeRate\": {\n      \"type\": \"number\",\n      \"required\": false\n    },\n    \"counterPartyName\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": true\n    },\n    \"counterPartyAccountNumber\": {\n      \"type\": \"string\",\n      \"maxLength\": 36,\n      \"required\": false\n    },\n    \"counterPartyBIC\": {\n      \"type\": \"string\",\n      \"maxLength\": 11,\n      \"required\": false\n    },\n    \"counterPartyCountry\": {\n      \"type\": \"string\",\n      \"minLength\": 2,\n      \"maxLength\": 2,\n      \"required\": false\n    },\n    \"counterPartyBankName\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": false\n    },\n    \"creditorId\": {\n      \"type\": \"string\",\n      \"maxLength\": 19,\n      \"required\": false\n    },\n    \"mandateReference\": {\n      \"type\": \"string\",\n      \"maxLength\": 128,\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putTransactionsRecord = definedTypes['TransactionsData.TransactionItem'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getTransactions,\n    \n    postTransactionsRecord,\n    \n    putTransactionsRecord,\n    \n    getTransactionsTurnovers,\n    \n    getTransactionsCategorytotals,\n    \n    putTransactionsCategoryRecord,\n    \n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-transactions-http-ng/scripts/data-bb-transactions-http.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap ae8dfb8780f1a537e6f0?6d38**","webpack:///./config-bb-providers-ng/model.xml","webpack:///./config-bb-providers-ng/scripts/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA,yC;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBA8Fe,E","file":"config-bb-providers-ng/scripts/config-bb-providers-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"config-bb-providers-ng\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"config-bb-providers-ng\"] = factory();\n\telse\n\t\troot[\"config-bb-providers-ng\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae8dfb8780f1a537e6f0","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./config-bb-providers-ng/model.xml\n// module id = 0\n// module chunks = 2","/**\n * @module config-bb-providers-ng\n * @description Project level configuration of modules\n *\n * This configuration module is intended to be replaced and overwritten per project. It is used\n * to configure angular providers during the widget's\n * [config phase](https://docs.angularjs.org/guide/module#configuration-blocks).\n *\n * If you have installed the bb-customize ({link http://npmjs.com/package/@bb-cli/bb-customize}\n * CLI tool, you can copy the default config-bb-providers-ng into your project with this command:\n *\n * ```bash\n * bb-customize item config-bb-providers-ng --new-name config-bb-providers-ng\n * ```\n *\n * This module must export a single array as the `default` export.\n *\n * The array can contain any number of configuration arrays where the first items are the angular\n * provider injector keys and the final item is the function to run at configuration time.\n *\n * ```javascript\n * // The default export is a nested array in this format:\n * export default [\n *   [ <angular provider injector key>, <configuration function> ],\n *   [ <angular provider injector key>, <configuration function> ],\n *   ...\n * ];\n * ```\n *\n * Provider keys should be provided in the documentation of any modules that provide them, but are\n * constructed by appending the module key with \"Provider\". e.g.\n *\n * ```javascript\n * import anExampleModuleKey from 'lib-an-example-ng';\n * const anExampleProviderKey = `${anExampleModuleKey}Provider`;\n * export default [\n *   [anExampleProviderKey, (anExampleProvider) => {\n *     anExampleProvider.setSomeConfig(...);\n *   }],\n * ];\n * ```\n *\n * A common use is to configure the data modules to connect to custom services endpoints.\n *\n * ```javascript\n * const contactProviderKey = 'data-bb-contact-http-ng:contactDataProvider';\n * export default [\n *   [contactProviderKey, (contactProvider) => {\n *     contactProvider.setBaseUri('http://example.com/api');\n *   }],\n * ];\n * ```\n *\n * However, any angular (`*-ng`) module may expose a provider to allow module specific\n * configuration. Check the documentation for the module.\n *\n * Core AngularJS modules often expose configuration also, the full list is available in [the\n * AngularJS documentation](https://docs.angularjs.org/api/ng/provider). As an example, the `$http`\n * service provides [`$httpProvider`](https://docs.angularjs.org/api/ng/provider/$httpProvider),\n * which can be used to customize XSRF tokens, HTTP headers and \"interceptors\" for more advanced\n * request/response handling.\n *\n * ```javascript\n * export default [\n *   ['$httpProvider', $httpProvider => {\n *     $httpProvider.defaults.headers.post.Authorization = 'Basic YmVlcDpib29w';\n *     $httpProvider.interceptors.push('myHttpInterceptor');\n *   }],\n * ];\n * ```\n *\n * @example\n * // Example with multiple blocks\n * import contactDataModuleKey from 'data-bb-contact-ng';\n *\n * // create a provider key from the module key\n * const contactDataProviderKey = `${contactDataModuleKey}Provider`;\n *\n * // define individual config blocks\n * const myServiceConfig = [ 'my-serviceProvider', function(p) { p.setConfig({a: '1'}) } ];\n * const vendorServiceConfig = [ 'some-vendorProvider', function(p) { p.setSomething(b, 2) } ];\n *\n * // export array of config blocks\n * export default [\n *   myServiceConfig,\n *   vendorServiceConfig\n *\n *   // Configure a data module\n *   [contactDataProviderKey, (contactDataProvider) => {\n *     contactDataProvider.setBaseUri('http://example.com/api');\n *   }],\n * ];\n */\n\nexport default [];\n\n\n\n// WEBPACK FOOTER //\n// ./config-bb-providers-ng/scripts/index.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap 2af75219d40a7b52f448?f686**","webpack:///./widget-bb-budget-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-budget-ng/scripts/index.js","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///external \"model-bb-budget-ng\"","webpack:///external \"lib-bb-state-container-ng\"","webpack:///external \"lib-bb-currency-ng\"","webpack:///./widget-bb-budget-ng/scripts/service.js","webpack:///./widget-bb-budget-ng/scripts/view-model/index.js","webpack:///./widget-bb-budget-ng/scripts/view-model/list.js","webpack:///./widget-bb-budget-ng/scripts/view-model/helpers.js","webpack:///./widget-bb-budget-ng/scripts/constants.js","webpack:///./widget-bb-budget-ng/scripts/view-model/create.js","webpack:///./widget-bb-budget-ng/scripts/view-model/edit.js","webpack:///./widget-bb-budget-ng/scripts/view-model/delete.js","webpack:///./widget-bb-budget-ng/scripts/router.js","webpack:///./widget-bb-budget-ng/scripts/default-hooks.js","webpack:///./widget-bb-budget-ng/scripts/list-budgets-controller.js","webpack:///./widget-bb-budget-ng/scripts/budget-form-controller.js"],"names":["moduleKey","hooksKey","budgetServiceKey","viewModelKey","routerKey","module","factory","controller","budgetService","router","getRule","run","bbIntent","bbStateContainer","viewModel","eventBus","widget","init","persist","getState","setState","then","publish","id","getId","name","model","list","requestParams","beforeList","getBudgets","response","afterListSuccess","afterListError","startEdit","budgetId","edit","beforeStartEdit","schema","getBudgetSchema","startCreate","create","beforeStartCreate","budget","beforeEdit","updateBudget","afterEditSuccess","afterEditError","item","beforeCreate","createBudget","afterCreateSuccess","afterCreateError","deleteBudget","beforeDelete","afterDeleteSuccess","afterDeleteError","vm","createAction","current","isLoading","budgets","items","error","budgetsError","makeUIErrorMessage","message","level","DANGER","modelError","code","makeUISuccessMessage","method","SUCCESS","createInitialState","template","route","params","form","notifications","findBudgetById","filter","pop","notificationLevels","errorMessages","successMessages","reduce","acc","Object","assign","cancelCreate","copy","stateContainer","subscribers","setRoute","state","notifySubscribers","forEach","subscriber","goto","getParams","createSelector","getRoute","subscribe","callback","sub","service","unsubscribe","$onInit","loadItems","reload","$onDestroy","thenReload","save","value"],"mappings":"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","file":"widget-bb-budget-ng/scripts/widget-bb-budget-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-budget-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-currency-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-budget-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-ng\", \"lib-bb-intent-ng\", \"lib-bb-extension-helpers-ng\", \"model-bb-budget-ng\", \"lib-bb-state-container-ng\", \"lib-bb-currency-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-budget-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"model-bb-budget-ng\"), require(\"lib-bb-state-container-ng\"), require(\"lib-bb-currency-ng\"));\n\telse\n\t\troot[\"widget-bb-budget-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"model-bb-budget-ng\"], root[\"lib-bb-state-container-ng\"], root[\"lib-bb-currency-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_29__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_33__, __WEBPACK_EXTERNAL_MODULE_34__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2af75219d40a7b52f448","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-budget-ng/model.xml\n// module id = 0\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 17\n// module chunks = 1 2 3","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 20\n// module chunks = 1 3","/**\n * @module widget-bb-budget-ng\n *\n * @description\n * Budget\n */\nimport angular from 'vendor-bb-angular';\n\nimport extendHooks, { extensionContextKey } from 'lib-bb-widget-extension-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\nimport modelBudgetModuleKey, { modelBudgetKey } from 'model-bb-budget-ng';\nimport stateContainerModuleKey, { bbStateContainerKey } from 'lib-bb-state-container-ng';\nimport libBbCurrencyNgKey, { bbCurrencyRuleKey } from 'lib-bb-currency-ng';\n\nimport BudgetService from './service';\nimport ViewModel from './view-model/index';\nimport Router from './router';\nimport defaultHooks from './default-hooks';\n\n/* Controllers */\nimport ListBudgetsController from './list-budgets-controller';\nimport BudgetFormController from './budget-form-controller';\n\nconst moduleKey = 'widget-bb-budget-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst budgetServiceKey = `${moduleKey}:service`;\nconst viewModelKey = `${moduleKey}:view-model`;\nconst routerKey = `${moduleKey}:router`;\n\nexport default angular\n  .module(moduleKey, [\n    eventBusModuleKey,\n    modelBudgetModuleKey,\n    stateContainerModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n    bbExtensionHelpersModuleKey,\n    libBbCurrencyNgKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .factory(viewModelKey, [\n    bbStateContainerKey,\n    /* into */\n    ViewModel,\n  ])\n\n  .factory(budgetServiceKey, [\n    modelBudgetKey,\n    viewModelKey,\n    /* into */\n    BudgetService,\n  ])\n\n  .factory(routerKey, [\n    bbStateContainerKey,\n    /* into */\n    Router,\n  ])\n\n  .controller('ListBudgetsController', [\n    budgetServiceKey,\n    routerKey,\n    /* into */\n    ListBudgetsController,\n  ])\n  .controller('BudgetFormController', [\n    budgetServiceKey,\n    routerKey,\n    /* into */\n    BudgetFormController,\n  ])\n\n  .factory(extensionContextKey, [\n    budgetServiceKey,\n    routerKey,\n    /* into */\n    (budgetService, router) => ({\n      budgetService,\n      router,\n    }),\n  ])\n\n  .factory(extensionHelpersContextKey, [\n    bbCurrencyRuleKey,\n    (getRule) => ({\n      getRule,\n    }),\n  ])\n\n  .run([\n    bbIntentKey, bbStateContainerKey, viewModelKey, eventBusKey, widgetKey,\n    (bbIntent, bbStateContainer, viewModel, eventBus, widget) => {\n      viewModel.init();\n\n      bbIntent.persist(bbStateContainer.getState, bbStateContainer.setState);\n\n      bbIntent.init().then(() => {\n        eventBus.publish('cxp.item.loaded', {\n          id: widget.getId(),\n        });\n      });\n    },\n  ])\n  .name;\n\n\n/**\n * @typedef {object} BudgetItem\n * @extends module:model-bb-budget-ng.BudgetItem\n */\n\n/**\n * @typedef {object} HelperContext\n * @extends module:lib-bb-extension-helpers-ng.HelperContext\n */\n\n/**\n * @typedef {object} IntentContext\n * @extends module:lib-bb-extension-intents-ng.IntentContext\n */\n\n/**\n * @typedef {object} EventContext\n * @extends module:lib-bb-extension-events-ng.EventContext\n * @property {BudgetService} BudgetService\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 27\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 28\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_29__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 29\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 30\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 31\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-budget-ng\"\n// module id = 32\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_33__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-state-container-ng\"\n// module id = 33\n// module chunks = 3","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-currency-ng\"\n// module id = 34\n// module chunks = 3","/**\n * The core functionality of the Budget widget\n *\n * The purpose of this module is to provide the main structure of the\n * widget. Outlining the workflows, connecting the data from the\n * model to the view via the customizations provided by the extension.\n *\n * @constructor BudgetService\n * @param {BudgetModel} model\n * @param {ViewModel} viewModel\n */\nexport default (model, viewModel) => ({\n  /**\n   * @name BudgetService#list\n   *\n   * @description\n   * Update the view with an list of items loaded from the data source\n   *\n   * @type {function}\n   * @param {Object} requestParams paremeters of the BudgetModel.GET request\n   * to be passed to the model\n   * @return {Promise}\n   */\n  list(requestParams) {\n    viewModel.list.beforeList();\n    return model.getBudgets(requestParams)\n      .then((response) => viewModel.list.afterListSuccess({\n        ...response,\n      }), viewModel.list.afterListError);\n  },\n  /**\n   * @name BudgetService#startEdit\n   *\n   * @description\n   * Prepare the view for editing a budget item\n   *\n   * @type {function}\n   * @param {string} budgetId budget item id to be modified\n   */\n  startEdit: (budgetId) => {\n    viewModel.edit.beforeStartEdit({ budgetId, schema: model.getBudgetSchema() });\n  },\n\n  /**\n   * @name BudgetService#startCreate\n   *\n   * @description\n   * Prepare the view for creating a new budget item\n   *\n   * @type {function}\n   */\n  startCreate: () => {\n    viewModel.create.beforeStartCreate(model.getBudgetSchema());\n  },\n\n  /**\n   * @name BudgetService#edit\n   *\n   * @description\n   * Updates budget item and triggers view update after it\n   *\n   * @type {function}\n   * @param {module:model-bb-budget-ng.BudgetItem} item budget item to be modified\n   * @return {Promise}\n   */\n  edit: (budget) => {\n    viewModel.edit.beforeEdit();\n    return model.updateBudget(budget.id, budget)\n      .then(\n        viewModel.edit.afterEditSuccess,\n        viewModel.edit.afterEditError\n      );\n  },\n\n  /**\n   * @name BudgetService#create\n   *\n   * @description\n   * Creates a new budget item and triggers view update after it\n   *\n   * @type {function}\n   * @param {module:model-bb-budget-ng.BudgetItem} item set of data for a new budget to be created\n   * @return {Promise}\n   */\n  create: (item) => {\n    viewModel.create.beforeCreate();\n    return model.createBudget(item)\n      .then(\n        viewModel.create.afterCreateSuccess,\n        viewModel.create.afterCreateError\n      );\n  },\n\n  /**\n   * @name BudgetService#deleteBudget\n   *\n   * @description\n   * Removes budget and triggers view update after it\n   *\n   * @type {function}\n   * @param {module:model-bb-budget-ng.BudgetItem} item budget item to be deleted\n   * @return {Promise}\n   */\n  deleteBudget: (budget) => {\n    viewModel.deleteBudget.beforeDelete();\n    return model.deleteBudget(budget.id, budget)\n      .then(\n        viewModel.deleteBudget.afterDeleteSuccess,\n        viewModel.deleteBudget.afterDeleteError\n      );\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/service.js","import list from './list';\nimport create from './create';\nimport edit from './edit';\nimport deleteBudget from './delete';\nimport { createInitialState } from './helpers';\n\n/**\n * @typedef {Object} ViewState\n * @property {boolean} isLoading\n * @property {Array<BudgetItem>} budgets\n * @property {string} template\n */\n\n/**\n * @name ViewModel\n * @type {object}\n * @ngkey widget-bb-budget-ng:viewModel\n * @inner\n */\nexport default (vm) => ({\n  init: vm.createAction((current = createInitialState()) => current),\n  /**\n   * @name ViewModel#list\n   * @description\n   * Actions for updating the parts of the `ViewState` related to budget list\n   * @type {ViewModelListActions}\n   * @inner\n   */\n  list: list(vm),\n  /**\n   * @name ViewModel#create\n   * @description\n   * Actions for updating the parts of the `ViewState` related to budget creation\n   * @type {ViewModelCreateActions}\n   * @inner\n   */\n  create: create(vm),\n  /**\n   * @name ViewModel#edit\n   * @description\n   * Actions for updating the parts of the `ViewState` related to budget editing\n   * @type {ViewModelEditActions}\n   * @inner\n   */\n  edit: edit(vm),\n  /**\n   * @name ViewModel#deleteBudget\n   * @description\n   * Actions for updating the parts of the `ViewState` related to budget deleting\n   * @type {ViewModelDeleteBudgetActions}\n   * @inner\n   */\n  deleteBudget: deleteBudget(vm),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/index.js","import { makeUIErrorMessage } from './helpers';\n\nexport default (vm) => ({\n  /**\n   * @name ViewModelListActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelListActions#beforeList\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user the list is being loaded\n   *\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  beforeList: vm.createAction((current) => ({\n    ...current,\n    isLoading: true,\n  })),\n\n  /**\n   * @name ViewModelListActions#afterListSuccess\n   * @inner\n   * @type {function}\n   * @description Amend the view to display the list of items\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {object} response\n   * @param {Array<module:model-bb-budget-ng.BudgetItem>} response.items\n   * @return {ViewState} The new state of the view model\n   */\n  afterListSuccess: vm.createAction((current, response = {}) => ({\n    ...current,\n    budgets: response.items ? response.items : [],\n    isLoading: false,\n  })),\n\n  /**\n   * @name ViewModelListActions#afterListError\n   * @inner\n   * @type {function}\n   * @description Amend the view to display the error encountered when loading the list\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {ModelError} error\n   * @return {ViewState} The new state of the view model\n   */\n  afterListError: vm.createAction((current, error) => ({\n    ...current,\n    budgetsError: makeUIErrorMessage(error),\n    isLoading: false,\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/list.js","import { notificationLevels, errorMessages, successMessages } from '../constants';\n\n/**\n * @name makeUIErrorMessage\n *\n * @type {function}\n * @description Creates an error object for template\n *\n * @inner\n * @param {object} modelError Error object\n * @returns {{message: string, level: string}} notification\n */\nexport const makeUIErrorMessage = modelError => {\n  let message = '';\n  const level = notificationLevels.DANGER;\n\n  if (modelError && modelError.code) {\n    message = errorMessages[modelError.code];\n  }\n  return { message, level };\n};\n\n/**\n * @name makeUISuccessMessage\n *\n * @type {function}\n * @description Creates a success notification for a specific\n * method of [success, update, delete]\n *\n * @inner\n * @param {string} method\n * @returns {{message: string, level: string}} notification\n */\nexport const makeUISuccessMessage = (method) => ({\n  message: successMessages[method],\n  level: notificationLevels.SUCCESS,\n});\n\n/**\n * @name createInitialState\n *\n * @type {function}\n * @description Creates an initial state for the budgeting state\n *\n * @inner\n * @return {object}\n */\nexport const createInitialState = () => ({\n  isLoading: false,\n  budgets: [],\n  template: '#widget-bb-budget-ng/list.html',\n  route: {\n    name: 'list',\n    params: {},\n  },\n  form: {},\n  notifications: [],\n});\n\n/**\n * @name findBudgetById\n *\n * @type {function}\n * @description Helper to get an item from the array by a budgetId\n *\n * @inner\n * @param {Array<BudgetItem>} budgets an array of BudgetItems to search in\n * @param {string} budgetId id to be used for a search\n * @returns {BudgetItem} search result (single item)\n */\nexport const findBudgetById = (budgets = [], budgetId) =>\n  budgets.filter(budget => budget.id === budgetId).pop();\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/helpers.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * @name notificationLevels\n *\n * @type {object}\n * @description\n * enum with levels for ui notifications\n */\nexport const notificationLevels = {\n  DANGER: 'danger',\n  SUCCESS: 'success',\n};\n\n/**\n * @name errorMessages\n *\n * @type {object}\n * @description\n * enum with standart model error message keys\n */\nexport const errorMessages = {\n  [E_AUTH]: 'budget.model.error.auth',\n  [E_CONNECTIVITY]: 'budget.model.error.connectivity',\n  [E_USER]: 'budget.model.error.user',\n  [E_UNEXPECTED]: 'budget.model.error.unexpected',\n};\n\n/**\n * @name successMessages\n *\n * @type {object}\n * @description\n * enum with success messages keys\n */\nexport const successMessages = (() =>\n  ['create', 'update', 'delete'].reduce(\n    (acc, method) => Object.assign(acc, { [method]: `budget.model.${method}.success` }),\n    {}\n  )\n)();\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/constants.js","import { makeUIErrorMessage, makeUISuccessMessage } from './helpers';\n\nexport default (vm) => ({\n  /**\n   * @name ViewModelCreateActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelCreateActions#beforeStartCreate\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user that the create form is being\n   * ready to create a new item\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {object} schema budget POST schema to be used for validation\n   * @return {ViewState} The new state of the view model\n   */\n  beforeStartCreate: vm.createAction((current, schema) => ({\n    ...current,\n    form: {},\n    schema,\n    isLoading: false,\n  })),\n\n  /**\n   * @name ViewModelCreateActions#beforeCreate\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user the create operation is being\n   * started\n   *\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  beforeCreate: vm.createAction((current) => ({\n    ...current,\n    isLoading: true,\n  })),\n\n  /**\n   * @name ViewModelCreateActions#afterCreateSuccess\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that create operation\n   * successfully finished\n   *\n   * @param {ViewState} current The current state of the view model\n   * @returns {ViewState} The new state of the view model\n   */\n  afterCreateSuccess: vm.createAction((current) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUISuccessMessage('create')],\n    isLoading: false,\n  })),\n  /**\n   * @name ViewModelCreateActions#afterCreateError\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that there was\n   * an error during the creation\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {object} error\n   * @returns {ViewState} The new state of the view model\n   */\n  afterCreateError: vm.createAction((current, error) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUIErrorMessage(error)],\n    isLoading: false,\n  })),\n  /**\n   * @name ViewModelCreateActions#cancelCreate\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that creating\n   * operation is canceled\n   *\n   * @param {ViewState} current The current state of the view model\n   * @returns {ViewState} The new state of the view model\n   */\n  cancelCreate: vm.createAction((current) => ({\n    ...current,\n    form: null,\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/create.js","import angular from 'vendor-bb-angular';\nimport { makeUIErrorMessage, makeUISuccessMessage, findBudgetById } from './helpers';\n\n\nexport default (vm) => ({\n  /**\n   * @name ViewModelEditActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelEditActions#beforeStartEdit\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user that the edit form is being\n   * ready\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {{budgetId: string, schema: object}} budget object id and schema to be used for editing\n   * @return {ViewState} The new state of the view model\n   */\n  beforeStartEdit: vm.createAction((current, params) => {\n    const { budgetId, schema } = params;\n    return {\n      ...current,\n      form: angular.copy(findBudgetById(current.budgets, budgetId)),\n      schema,\n      isLoading: false,\n    };\n  }),\n\n  /**\n   * @name ViewModelEditActions#beforeEdit\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user the edit operation is being\n   * started\n   *\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  beforeEdit: vm.createAction((current) => ({\n    ...current,\n    isLoading: true,\n  })),\n\n  /**\n   * @name ViewModelEditActions#afterEditSuccess\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that edit operation\n   * successfully finished\n   *\n   * @param {ViewState} current The current state of the view model\n   * @returns {ViewState} The new state of the view model\n   */\n  afterEditSuccess: vm.createAction((current) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUISuccessMessage('update')],\n    isLoading: false,\n  })),\n  /**\n   * @name ViewModelEditActions#afterEditError\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that there was\n   * an error during the editing\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {object} error server error response\n   * @returns {ViewState} The new state of the view model\n   */\n  afterEditError: vm.createAction((current, error) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUIErrorMessage(error)],\n    isLoading: false,\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/edit.js","import { makeUIErrorMessage, makeUISuccessMessage } from './helpers';\n\n\nexport default (vm) => ({\n  /**\n   * @name ViewModelDeleteBudgetActions\n   * @type {object}\n   * @inner\n   */\n\n  /**\n   * @name ViewModelDeleteBudgetActions#beforeDelete\n   * @inner\n   * @type {function}\n   * @description Amend the view to inform the user that delete operation is being started\n   *\n   * @param {ViewState} current The current state of the view model\n   * @return {ViewState} The new state of the view model\n   */\n  beforeDelete: vm.createAction((current) => ({\n    ...current,\n    isLoading: true,\n  })),\n\n  /**\n   * @name ViewModelDeleteBudgetActions#afterDeleteSuccess\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that delete operation successfully finished\n   *\n   * @param {ViewState} current The current state of the view model\n   * @returns {ViewState} The new state of the view model\n   */\n  afterDeleteSuccess: vm.createAction((current) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUISuccessMessage('delete')],\n    isLoading: false,\n  })),\n\n  /**\n   * @name ViewModelDeleteBudgetActions#afterDeleteError\n   * @inner\n   * @type {function}\n   * @description Ammend the view to inform the user that there was\n   * an error during the deleting\n   *\n   * @param {ViewState} current The current state of the view model\n   * @param {object} error server error response\n   * @returns {ViewState} The new state of the view model\n   */\n  afterDeleteError: vm.createAction((current, error) => ({\n    ...current,\n    notifications: [...(current.notifications || []), makeUIErrorMessage(error)],\n    isLoading: false,\n  })),\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/view-model/delete.js","export default (stateContainer) => {\n  let subscribers = [];\n\n  const setRoute = stateContainer.createAction((state, { name, params }) => ({\n    ...state,\n    route: {\n      name,\n      params,\n    },\n  }));\n\n  const notifySubscribers = (name, params) => {\n    subscribers.forEach(subscriber => {\n      subscriber(name, params);\n    });\n  };\n\n  return {\n    goto: (name, params) => {\n      setRoute({ name, params });\n      notifySubscribers(name, params);\n    },\n\n    getParams: stateContainer.createSelector(state => state.route.params),\n\n    getRoute: stateContainer.createSelector(state => state.route.name),\n\n    subscribe: (callback) => {\n      subscribers = [...subscribers, callback];\n      return () => {\n        subscribers = subscribers.filter(sub => sub !== callback);\n      };\n    },\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/router.js","export default {};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/default-hooks.js","/**\n * @name ListBudgetsController\n * @ngkey ListBudgetsController\n * @type {object}\n * @description\n * Budget widget list controller\n */\nexport default function (service, router) {\n  let unsubscribe = null;\n\n  /**\n   * @name ListBudgetsController#$onInit\n   *\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {function}\n   * @returns {Promise} Promise which is resolved once contoller is initialized,\n   *   or rejected in case of errors\n   */\n  const $onInit = () => {\n    const loadItems = () => service.list();\n    loadItems();\n    unsubscribe = router.subscribe((route) => {\n      const params = router.getParams() || {};\n      if (route !== 'list' || !params.reload) return;\n      loadItems();\n    });\n  };\n\n  /**\n   * @name ListBudgetsController#$onDestroy\n   *\n   * @description\n   * AngularJS Lifecycle hook used to destroy the controller\n   *\n   * @type {function}\n   */\n  const $onDestroy = () => {\n    if (unsubscribe) unsubscribe();\n  };\n\n  /**\n   * @name ListBudgetsController#edit\n   *\n   * @description\n   * Internal navigation for getting to edit form from the list of items\n   *\n   * @type {function}\n   * @param {string} budgetId identifier of a budget to be changed\n   */\n  const edit = budgetId => {\n    router.goto('form', budgetId);\n  };\n\n  /**\n   * @name ListBudgetsController#create\n   *\n   * @description\n   * Internal navigation for getting to create form from the list of items\n   *\n   * @type {function}\n   */\n  const create = () => {\n    router.goto('form');\n  };\n\n  /**\n   * @name ListBudgetsController#deleteBudget\n   *\n   * @description\n   * Controller method to handle deleting of an item\n   *\n   * @type {function}\n   * @param {object} budget Object to be removed\n   * @param {?boolean} thenReload Flag which defines if budget values should be reloaded\n   * from the server after delete operation (default true)\n   */\n  const deleteBudget = (budget, thenReload = true) =>\n    service.deleteBudget(budget)\n      .then(() => {\n        router.goto('list', { reload: thenReload });\n      });\n\n\n  return {\n    edit,\n    create,\n    deleteBudget,\n    $onInit,\n    $onDestroy,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/list-budgets-controller.js","/**\n * @name BudgetFormController\n * @ngkey BudgetFormController\n * @type {object}\n * @description\n * Budget widget form controller\n */\nexport default (service, router) => ({\n  /**\n   * @name BudgetFormController#$onInit\n   *\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {function}\n   * @returns {Promise} Promise which is resolved once contoller is initialized,\n   *   or rejected in case of errors\n   */\n  $onInit() {\n    const budgetId = router.getParams();\n    if (budgetId) {\n      service.startEdit(budgetId);\n    } else {\n      service.startCreate();\n    }\n  },\n\n  /**\n   * @name BudgetFormController#$onDestroy\n   *\n   * @description\n   * AngularJS Lifecycle hook used to destroy the controller\n   *\n   * @type {function}\n   */\n  $onDestroy() {\n    router.goto('list');\n  },\n\n  /**\n   * @name BudgetFormController#save\n   *\n   * @description\n   * Controller method to handle new/edited item saving\n   * and to initiate state change via routing\n   *\n   * @type {function}\n   * @param {object} value Object to be saved as a budget\n   * @param {?boolean} thenReload Flag which defines if budget values should be reloaded\n   * from the server after update/create operation\n   */\n  save(value, thenReload = true) {\n    if (router.getParams()) {\n      service.edit(value)\n        .then(() => {\n          router.goto('list', { reload: thenReload });\n        });\n    } else {\n      service.create(value)\n        .then(() => {\n          router.goto('list', { reload: thenReload });\n        });\n    }\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-budget-ng/scripts/budget-form-controller.js"],"sourceRoot":""}
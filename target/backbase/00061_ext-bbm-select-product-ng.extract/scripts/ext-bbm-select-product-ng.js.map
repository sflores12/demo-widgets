{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///webpack/bootstrap 06fbb1907bc970cbc1ef?1ead******","webpack:///./ext-bbm-select-product-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01****","webpack:///external \"ui-bb-avatar-ng\"?29da","webpack:///./ext-bbm-select-product-ng/scripts/index.js","webpack:///./ext-bbm-select-product-ng/scripts/hooks.js","webpack:///./ext-bbm-select-product-ng/scripts/helpers.js"],"names":["extHooks","dependencyKeys","helpers","hooks","groupAccountsTo","compareStr","strA","strB","filterOwnAccounts","accounts","filter","account","external","filterContacts","getContactSortStr","contact","name","toLowerCase","groupContacts","contacts","reduce","result","char","charAt","toUpperCase","push","processContacts","groups","Object","keys","sort","map","contactA","contactB","accountsTo","Event","PAYMENT_FORM_STEP","ACCOUNT_SELECTED","publish","hasExternalAccounts","some","onSelectAccount","$ctrl","ctrl","isAccountsFrom","processSelectProductType","payment","from","onAccountFromChange","to","storePayment"],"mappings":"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","file":"ext-bbm-select-product-ng/scripts/ext-bbm-select-product-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-avatar-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-select-product-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-avatar-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-select-product-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-avatar-ng\"));\n\telse\n\t\troot[\"ext-bbm-select-product-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-avatar-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_56__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 06fbb1907bc970cbc1ef","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-select-product-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 15\n// module chunks = 0 1 2 3 4 6 7 8 9 10","module.exports = __WEBPACK_EXTERNAL_MODULE_56__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-avatar-ng\"\n// module id = 56\n// module chunks = 5 6","/**\n * @module ext-bbm-select-product-ng\n *\n * @description\n * Mobile extension for a select product step in the Payment widget.\n *\n * @example\n * <!-- Contact widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-select-product-ng</value>\n * </property>\n */\nimport uiBbAvatarKey from 'ui-bb-avatar-ng';\nimport i18nNgKey from 'ui-bb-i18n-ng';\n\nimport * as extHooks from './hooks';\nimport extHelpers from './helpers';\n\nexport const dependencyKeys = [\n  i18nNgKey,\n  uiBbAvatarKey,\n];\n\nexport const helpers = extHelpers;\nexport const hooks = extHooks;\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-select-product-ng/scripts/index.js","/* eslint-disable import/prefer-default-export */\n\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-payment-ng\n */\n\n/**\n * @name compareStr\n * @type {function}\n *\n * @description\n * Compare function that defines an alphabetical sort order.\n *\n * @param {string} strA\n * @param {string} strB\n * @returns {number}\n * @inner\n */\nconst compareStr = (strA, strB) => {\n  if (strA > strB) {\n    return 1;\n  } else if (strA < strB) {\n    return -1;\n  }\n  return 0;\n};\n\n/**\n * @param {array<object>} accounts\n * @returns {array<object>}\n * @inner\n */\nconst filterOwnAccounts = (accounts) => (\n  accounts.filter((account) => !account.external)\n);\n\nconst filterContacts = (accounts) => (\n  accounts.filter((account) => account.external)\n);\n\n/**\n * @name getContactSortStr\n * @type {function}\n * @param {object} contact\n * @returns {string}\n * @inner\n */\nconst getContactSortStr = (contact) => contact.name.toLowerCase();\n\n/**\n * @name groupContacts\n * @type {function}\n *\n * @param {object[]} contacts\n * @returns {object}\n * @inner\n */\nconst groupContacts = (contacts) => (\n  contacts.reduce((result, contact) => {\n    const char = contact.name.charAt(0).toUpperCase();\n\n    if (!result[char]) {\n      // Allow mutation of a local empty object\n      // See: https://github.com/airbnb/javascript/issues/719\n      /* eslint-disable no-param-reassign */\n      result[char] = [];\n    }\n\n    result[char].push(contact);\n\n    return result;\n  }, {})\n);\n\n/**\n * @name processContacts\n * @type {function}\n *\n * @param {array<object>} contacts Raw contacts list to process\n * @returns {array<object>} Processed list of contacts\n * @inner\n */\nconst processContacts = (contacts = []) => {\n  const groups = groupContacts(contacts);\n  return Object.keys(groups)\n    .sort()\n    .map(char => ({\n      contacts: groups[char].sort((contactA, contactB) => (\n        compareStr(\n          getContactSortStr(contactA),\n          getContactSortStr(contactB)\n        )\n      )),\n      char,\n      external: true,\n    }));\n};\n\n/**\n * @name Hooks#groupAccountsTo\n * @type {function}\n *\n * @description\n * Hook for grouping accounts. Used only for Mobile.\n *\n * @param {array<object>} accountsTo List of beneficiary accounts\n * @returns {array<object>} List of grouped accounts\n */\nexport function groupAccountsTo(accountsTo) {\n  return [\n    ...filterOwnAccounts(accountsTo),\n    ...processContacts(filterContacts(accountsTo)),\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-select-product-ng/scripts/hooks.js","/**\n * @name Helpers\n * @type {object}\n *\n * @description\n * Helpers for ext-bbm-select-product-ng\n */\n\nconst Event = {\n  PAYMENT_FORM_STEP: 'bb.event.payment.form.step',\n  ACCOUNT_SELECTED: 'bb.event.account.selected',\n};\n\nexport default ({ publish }) => ({\n  /**\n   * @name Helpers#hasExternalAccounts\n   * @type {function}\n   *\n   * @description\n   * Helper to check whether the given list of accounts contains some external accounts\n   *\n   * @param {array<object>} accounts List of accounts\n   * @returns {boolean} True, if there is at least one external account, false otherwise\n   */\n  hasExternalAccounts: (accounts) => (\n    (accounts || []).some(account => account.external)\n  ),\n  /**\n   * @name Helpers#onSelectAccount\n   * @type {function}\n   *\n   * @description\n   * Helper to process account select action\n   *\n   * @fires bb.event.payment.form.step\n   * @fires bb.event.account.selected\n   *\n   * @param {object} $ctrl Instance of widget angular controller\n   * @param {object} account Selected account object\n   * @returns {void}\n   */\n  onSelectAccount: ($ctrl, account) => {\n    const ctrl = $ctrl;\n    const isAccountsFrom = ctrl.processSelectProductType.isAccountsFrom;\n\n    if (isAccountsFrom) {\n      ctrl.payment.from = account;\n      ctrl.onAccountFromChange();\n    } else {\n      ctrl.payment.to = account;\n    }\n\n    ctrl.storePayment(ctrl.payment);\n\n    publish(Event.ACCOUNT_SELECTED, {\n      isAccountsFrom,\n      account,\n    });\n\n    publish(Event.PAYMENT_FORM_STEP);\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-select-product-ng/scripts/helpers.js"],"sourceRoot":""}
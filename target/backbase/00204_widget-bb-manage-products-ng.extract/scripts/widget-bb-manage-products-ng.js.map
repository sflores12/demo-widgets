{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6********************","webpack:///webpack/bootstrap b6e6496f5522437c4c2f?95fa********************","webpack:///./widget-bb-manage-products-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*******","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///external \"lib-bb-model-errors\"?7567*","webpack:///external \"lib-bb-widget-extension-ng\"?b547","webpack:///external \"model-bb-product-summary-ng\"?4945","webpack:///external \"lib-bb-intent-ng\"?add1","webpack:///external \"lib-bb-event-bus-ng\"?8215","webpack:///./widget-bb-manage-products-ng/scripts/index.js","webpack:///./widget-bb-manage-products-ng/scripts/controller.js","webpack:///./widget-bb-manage-products-ng/scripts/constants.js","webpack:///./widget-bb-manage-products-ng/scripts/default-hooks.js"],"names":["moduleKey","hooksKey","module","factory","controller","run","bus","widget","bbIntent","publish","id","getId","init","name","ManageProductsController","uiError","messageMap","modelError","message","code","model","hooks","$ctrl","state","status","productKinds","productSelected","showInput","isProductLoading","productKindsError","intents","getProducts","load","then","processKinds","catch","error","updateProduct","alias","visible","patchArrangement","isError","viewProductSummary","initIntent","create","VIEW_PRODUCT_SUMMARY","handle","VIEW_MANAGE_PRODUCTS","$onInit","Object","assign","dismissTime","errorMessages","DEFAULT_DISMISS_TIME","UPDATED_PRODUCT_SUCCESS_KEY","UPDATED_PRODUCT_ERROR_KEY","Intent"],"mappings":"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","file":"widget-bb-manage-products-ng/scripts/widget-bb-manage-products-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-manage-products-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-widget-extension-ng\", \"model-bb-product-summary-ng\", \"lib-bb-intent-ng\", \"lib-bb-event-bus-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-manage-products-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-product-summary-ng\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-event-bus-ng\"));\n\telse\n\t\troot[\"widget-bb-manage-products-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-product-summary-ng\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-event-bus-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_79__, __WEBPACK_EXTERNAL_MODULE_87__, __WEBPACK_EXTERNAL_MODULE_89__, __WEBPACK_EXTERNAL_MODULE_107__, __WEBPACK_EXTERNAL_MODULE_108__, __WEBPACK_EXTERNAL_MODULE_109__, __WEBPACK_EXTERNAL_MODULE_111__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6e6496f5522437c4c2f","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-manage-products-ng/model.xml\n// module id = 0\n// module chunks = 21","module.exports = __WEBPACK_EXTERNAL_MODULE_79__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 79\n// module chunks = 13 14 15 16 17 18 19 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_87__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 87\n// module chunks = 14 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_89__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 89\n// module chunks = 14 20 21 22 24","module.exports = __WEBPACK_EXTERNAL_MODULE_107__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 107\n// module chunks = 20 21 22 23","module.exports = __WEBPACK_EXTERNAL_MODULE_108__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-product-summary-ng\"\n// module id = 108\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_109__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 109\n// module chunks = 20 21 22 23 24","module.exports = __WEBPACK_EXTERNAL_MODULE_111__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 111\n// module chunks = 20 21 22 23 24","/**\n * @module widget-bb-manage-products-ng\n *\n * @description\n * Manage products\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport modelProductSummaryModuleKey, {\n  modelProductSummaryKey,\n} from 'model-bb-product-summary-ng';\n\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-bb-manage-products-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    modelProductSummaryModuleKey,\n    widgetModuleKey,\n    eventBusModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ManageProductsController', [\n    // dependencies to inject\n    modelProductSummaryKey,\n    eventBusKey,\n    hooksKey,\n    bbIntentKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, bbIntentKey, (bus, widget, bbIntent) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/index.js","import {\n  DEFAULT_DISMISS_TIME,\n  UPDATED_PRODUCT_ERROR_KEY,\n  UPDATED_PRODUCT_SUCCESS_KEY,\n  errorMessages,\n  Intent,\n} from './constants';\n\n/**\n * @name uiError\n *\n * @description\n * Creates UI error message.\n *\n * @type {function}\n *\n * @param {object} messageMap object with error message keys\n * @param {object} modelError the error object\n *\n * @returns {{message: string}}\n */\nconst uiError = (messageMap, modelError) => ({\n  message: messageMap[modelError.code],\n});\n\n/**\n * @name ManageProductsController\n *\n * @description\n * Manage products widget controller\n *\n * @type {function}\n */\nexport default function ManageProductsController(model, bus, hooks, bbIntent) {\n  const $ctrl = this;\n\n  const state = {\n    status: null,\n    productKinds: null,\n    productSelected: { id: null, showInput: null },\n    isProductLoading: true,\n    productKindsError: null,\n  };\n\n  /**\n   * @description\n   * A set of intents that the controller uses or handles.\n   *\n   * @name ManageProductsController#intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {};\n\n  /**\n   * @name ManageProductsController#getProducts\n   *\n   * @description\n   * Gets all products from the model, track the loading\n   * and create error if there is error during the loading\n   *\n   * @type {function}\n   *\n   * @returns {Promise.<void>}\n   */\n  const getProducts = () => {\n    $ctrl.state.isProductLoading = true;\n\n    return model.load()\n      .then(({ productKinds }) => {\n        $ctrl.state.productKinds = hooks.processKinds(productKinds);\n        $ctrl.state.isProductLoading = false;\n      })\n      .catch(error => {\n        $ctrl.state.isProductLoading = false;\n        $ctrl.state.productKindsError = uiError(errorMessages, error);\n      });\n  };\n\n  /**\n   * @name ManageProductsController#updateProduct\n   *\n   * @description\n   * Updates the product,\n   * sets the status for the notification\n   * and reloads the products if the update is successful\n   *\n   * @type {function}\n   *\n   * @param {object} id product/account id\n   * @param {object} alias product/account alias\n   * @param {boolean} visible visibility property for the product/account\n   *\n   * @returns {Promise.<void>}\n   */\n  const updateProduct = (id, alias, visible) =>\n    model.patchArrangement({ id, alias, visible })\n      .then(() => {\n        $ctrl.state.status = { message: UPDATED_PRODUCT_SUCCESS_KEY, isError: false };\n        $ctrl.state.productSelected = { id: null, showInput: null };\n        return getProducts();\n      })\n      .catch(() => {\n        $ctrl.state.status = { message: UPDATED_PRODUCT_ERROR_KEY, isError: true };\n        $ctrl.state.productSelected = { id: null, showInput: null };\n      });\n\n  /**\n   * @description\n   * Handles the intent to switch the view to product summary\n   *\n   * @type {function}\n   *\n   * @name ManageProductsController#viewProductSummary\n   */\n  const viewProductSummary = () => {\n    if (intents.viewProductSummary) {\n      intents.viewProductSummary();\n    }\n  };\n\n  /**\n   * @description\n   * Inits the bbIntent and adds intent handlers.\n   *\n   * @inner\n   * @name ManageProductsController#initIntent\n   * @type {function}\n   */\n  const initIntent = () => {\n    intents.viewProductSummary = bbIntent.create(Intent.VIEW_PRODUCT_SUMMARY);\n\n    bbIntent.handle(Intent.VIEW_MANAGE_PRODUCTS, () => {\n      getProducts();\n    });\n  };\n\n  /**\n   * @name ManageProductsController#$onInit\n   *\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @type {function}\n   *\n   * @returns {void}\n   */\n  const $onInit = () =>\n    getProducts()\n      .then(initIntent);\n\n  Object.assign($ctrl, {\n    state,\n    dismissTime: DEFAULT_DISMISS_TIME,\n    updateProduct,\n    getProducts,\n    $onInit,\n    viewProductSummary,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/controller.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * @name errorMessages\n *\n * @description\n * Error messages keys for connectivity, user, auth and unexpected errors.\n *\n * @type {object}\n */\nexport const errorMessages = {\n  [E_AUTH]: 'model.error.auth',\n  [E_CONNECTIVITY]: 'model.error.connectivity',\n  [E_USER]: 'model.error.user',\n  [E_UNEXPECTED]: 'model.error.unexpected',\n};\n\n/**\n * @name DEFAULT_DISMISS_TIME\n *\n * @description\n * Default notification dismiss time.\n *\n * @type {number}\n */\nexport const DEFAULT_DISMISS_TIME = 3;\n\n/**\n * @name UPDATED_PRODUCT_SUCCESS_KEY\n *\n * @description\n * Key string for notification success message\n *\n * @type {string}\n */\nexport const UPDATED_PRODUCT_SUCCESS_KEY = 'product.notification.updated.success';\n\n/**\n * @name UPDATED_PRODUCT_ERROR_KEY\n *\n * @description\n * Key string for notification error message\n *\n * @type {string}\n */\nexport const UPDATED_PRODUCT_ERROR_KEY = 'product.notification.updated.error';\n\n/**\n * Widget intent enum\n * @type {object}\n */\nexport const Intent = {\n  VIEW_PRODUCT_SUMMARY: 'intent.bb.product.summary.view',\n  VIEW_MANAGE_PRODUCTS: 'intent.bb.manage.products.view',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/constants.js","/**\n * @name Hooks\n *\n * @description\n * Hooks for widget-bb-manage-products-ng\n *\n * @type {object}\n */\n\n/**\n * @name processKinds\n *\n * @description\n * Hook for processing productKinds.\n *\n * @type {function}\n *\n * @param {module:model-bb-product-summary-ng.ProductKind[]} productKinds ProductKinds to process\n * @returns {module:model-bb-product-summary-ng.ProductKind[]} Processed  productKinds\n */\nconst processKinds = productKinds => productKinds;\n\nexport default {\n  processKinds,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-manage-products-ng/scripts/default-hooks.js"],"sourceRoot":""}
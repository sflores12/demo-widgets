{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 94576e0a2d4265e3f9f5","webpack:///./model.xml","webpack:///./scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./scripts/data-bb-action-recipes-http.js"],"names":["actionRecipesDataModuleKey","actionRecipesDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","version","definedTypes","parse","res","data","headers","status","statusText","getActionRecipeSpecifications","params","url","method","then","catch","err","getActionRecipes","postActionRecipesRecord","getActionRecipesRecord","recipeId","putActionRecipesRecord","deleteActionRecipesRecord","postActionRecipesDeactivationRequestRecord","postActionRecipesActivationRequestRecord","schemas"],"mappings":"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","file":"data-bb-action-recipes-http-ng/scripts/data-bb-action-recipes-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-action-recipes-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-action-recipes-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-action-recipes-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 94576e0a2d4265e3f9f5","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module data-bb-action-recipes-http-ng\n *\n * @description A data module for accessing the Action Recipes REST API.\n *\n * @returns {String} `data-bb-action-recipes-http-ng`\n * @example\n * import actionRecipesDataModuleKey, {\n *   actionRecipesDataKey,\n * } from 'data-bb-action-recipes-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport actionRecipesData from './data-bb-action-recipes-http';\n\nconst actionRecipesDataModuleKey = 'data-bb-action-recipes-http-ng';\n/**\n * @name actionRecipesDataKey\n * @type {string}\n * @description Angular dependency injection key for the ActionRecipesData service\n */\nexport const actionRecipesDataKey = 'data-bb-action-recipes-http-ng:actionRecipesData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(actionRecipesDataModuleKey, [])\n\n  /**\n   * @constructor ActionRecipesData\n   * @type {object}\n   *\n   * @description Public api for data-bb-action-recipes-http-ng service\n   *\n   */\n  .provider(actionRecipesDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name ActionRecipesDataProvider\n     * @type {object}\n     * @ngkey data-bb-action-recipes-http-ng:actionRecipesDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-action-recipes-http-ng:actionRecipesDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-action-recipes-http-ng:actionRecipesDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name ActionRecipesDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name ActionRecipesDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        /* into */\n       actionRecipesData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","\nexport default (conf) => (httpClient) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['ActionRecipesData.ActionRecipe'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true},\"specificationId\":{\"type\":\"string\",\"required\":true},\"active\":{\"type\":\"boolean\",\"required\":true},\"userId\":{\"type\":\"string\",\"required\":false},\"trigger\":{\"type\":\"object\",\"properties\":{\"selectors\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"value\":{\"type\":\"string\",\"required\":false}}},\"required\":false},\"filter\":{\"type\":\"object\",\"properties\":{},\"required\":false}},\"required\":true},\"actions\":{\"type\":\"array\",\"items\":{\"properties\":{\"type\":{\"type\":\"string\",\"required\":false},\"destination\":{\"type\":\"object\",\"properties\":{},\"required\":false}}},\"required\":true}}};\n  \n  definedTypes['ActionRecipesData.ActionRecipes'] = {\"properties\":{\"actionRecipes\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":true},\"name\":{\"type\":\"string\",\"required\":true},\"specificationId\":{\"type\":\"string\",\"required\":true},\"active\":{\"type\":\"boolean\",\"required\":true},\"userId\":{\"type\":\"string\",\"required\":false},\"trigger\":{\"type\":\"object\",\"properties\":{\"selectors\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"value\":{\"type\":\"string\",\"required\":false}}},\"required\":false},\"filter\":{\"type\":\"object\",\"properties\":{},\"required\":false}},\"required\":true},\"actions\":{\"type\":\"array\",\"items\":{\"properties\":{\"type\":{\"type\":\"string\",\"required\":false},\"destination\":{\"type\":\"object\",\"properties\":{},\"required\":false}}},\"required\":true}}},\"required\":false}}};\n  \n  definedTypes['ActionRecipesData.ActionRecipeSpecifications'] = {\"properties\":{\"actionRecipeSpecifications\":{\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"required\":false},\"name\":{\"type\":\"string\",\"required\":false},\"type\":{\"type\":\"string\",\"required\":false},\"userDefinable\":{\"type\":\"boolean\",\"required\":false},\"triggerDefinition\":{\"type\":\"object\",\"properties\":{\"selectors\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"type\":{\"type\":\"string\",\"required\":false}}},\"required\":false},\"filter\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"type\":{\"type\":\"string\",\"required\":false}}},\"required\":false}},\"required\":false},\"actions\":{\"type\":\"array\",\"items\":{\"properties\":{\"type\":{\"type\":\"string\",\"required\":false},\"destination\":{\"type\":\"object\",\"properties\":{},\"required\":false},\"templateId\":{\"type\":\"string\",\"required\":false}}},\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['ActionRecipesData.IdHolder'] = {\"properties\":{\"id\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['ActionRecipesData.NewActionRecipe'] = {\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"specificationId\":{\"type\":\"string\",\"required\":true},\"active\":{\"type\":\"boolean\",\"required\":true},\"trigger\":{\"type\":\"object\",\"properties\":{\"selectors\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"value\":{\"type\":\"string\",\"required\":false}}},\"required\":false},\"filter\":{\"type\":\"object\",\"properties\":{},\"required\":false}},\"required\":true},\"actions\":{\"type\":\"array\",\"items\":{\"properties\":{\"type\":{\"type\":\"string\",\"required\":false}}},\"required\":true}}};\n  \n  definedTypes['ActionRecipesData.UpdateActionRecipe'] = {\"properties\":{\"name\":{\"type\":\"string\",\"required\":true},\"specificationId\":{\"type\":\"string\",\"required\":true},\"active\":{\"type\":\"boolean\",\"required\":true},\"trigger\":{\"type\":\"object\",\"properties\":{\"selectors\":{\"type\":\"array\",\"items\":{\"properties\":{\"path\":{\"type\":\"string\",\"required\":false},\"value\":{\"type\":\"string\",\"required\":false}}},\"required\":false},\"filter\":{\"type\":\"object\",\"properties\":{},\"required\":false}},\"required\":false},\"actions\":{\"type\":\"array\",\"items\":{\"properties\":{\"type\":{\"type\":\"string\",\"required\":false}}},\"required\":false}}};\n  \n  definedTypes['ActionRecipesData.Error'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":true},\"errorCode\":{\"type\":\"string\",\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipe\n   * @type {Object}\n   * @property {String} id\n   * @property {String} name\n   * @property {String} specificationId\n   * @property {Boolean} active\n   * @property {?String} userId\n   * @property {ActionRecipesData.ActionRecipe.trigger} trigger\n   * @property {Array.<ActionRecipesData.ActionRecipe.actions>} actions\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipe.trigger\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.ActionRecipe.trigger.selectors>} selectors\n   * @property {?ActionRecipesData.ActionRecipe.trigger.filter} filter\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipe.trigger.selectors\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} value\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipe.actions\n   * @type {Object}\n   * @property {?String} type\n   * @property {?ActionRecipesData.ActionRecipe.actions.destination} destination\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipes\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.ActionRecipes.actionRecipes>} actionRecipes\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipes.actionRecipes\n   * @type {Object}\n   * @property {String} id\n   * @property {String} name\n   * @property {String} specificationId\n   * @property {Boolean} active\n   * @property {?String} userId\n   * @property {ActionRecipesData.ActionRecipes.actionRecipes.trigger} trigger\n   * @property {Array.<ActionRecipesData.ActionRecipes.actionRecipes.actions>} actions\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipes.actionRecipes.trigger\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.ActionRecipes.actionRecipes.trigger.selectors>} selectors\n   * @property {?ActionRecipesData.ActionRecipes.actionRecipes.trigger.filter} filter\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipes.actionRecipes.trigger.selectors\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} value\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipes.actionRecipes.actions\n   * @type {Object}\n   * @property {?String} type\n   * @property {?ActionRecipesData.ActionRecipes.actionRecipes.actions.destination} destination\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications>} actionRecipeSpecifications\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications\n   * @type {Object}\n   * @property {?String} id\n   * @property {?String} name\n   * @property {?String} type\n   * @property {?Boolean} userDefinable\n   * @property {?ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition} triggerDefinition\n   * @property {?Array.<ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.actions>} actions\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition.selectors>} selectors\n   * @property {?Array.<ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition.filter>} filter\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition.selectors\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} type\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.triggerDefinition.filter\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} type\n   */\n  \n  /**\n   * @typedef ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.actions\n   * @type {Object}\n   * @property {?String} type\n   * @property {?ActionRecipesData.ActionRecipeSpecifications.actionRecipeSpecifications.actions.destination} destination\n   * @property {?String} templateId\n   */\n  \n  /**\n   * @typedef ActionRecipesData.IdHolder\n   * @type {Object}\n   * @property {?String} id\n   */\n  \n  /**\n   * @typedef ActionRecipesData.NewActionRecipe\n   * @type {Object}\n   * @property {String} name\n   * @property {String} specificationId\n   * @property {Boolean} active\n   * @property {ActionRecipesData.NewActionRecipe.trigger} trigger\n   * @property {Array.<ActionRecipesData.NewActionRecipe.actions>} actions\n   */\n  \n  /**\n   * @typedef ActionRecipesData.NewActionRecipe.trigger\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.NewActionRecipe.trigger.selectors>} selectors\n   * @property {?ActionRecipesData.NewActionRecipe.trigger.filter} filter\n   */\n  \n  /**\n   * @typedef ActionRecipesData.NewActionRecipe.trigger.selectors\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} value\n   */\n  \n  /**\n   * @typedef ActionRecipesData.NewActionRecipe.actions\n   * @type {Object}\n   * @property {?String} type\n   */\n  \n  /**\n   * @typedef ActionRecipesData.UpdateActionRecipe\n   * @type {Object}\n   * @property {String} name\n   * @property {String} specificationId\n   * @property {Boolean} active\n   * @property {?ActionRecipesData.UpdateActionRecipe.trigger} trigger\n   * @property {?Array.<ActionRecipesData.UpdateActionRecipe.actions>} actions\n   */\n  \n  /**\n   * @typedef ActionRecipesData.UpdateActionRecipe.trigger\n   * @type {Object}\n   * @property {?Array.<ActionRecipesData.UpdateActionRecipe.trigger.selectors>} selectors\n   * @property {?ActionRecipesData.UpdateActionRecipe.trigger.filter} filter\n   */\n  \n  /**\n   * @typedef ActionRecipesData.UpdateActionRecipe.trigger.selectors\n   * @type {Object}\n   * @property {?String} path\n   * @property {?String} value\n   */\n  \n  /**\n   * @typedef ActionRecipesData.UpdateActionRecipe.actions\n   * @type {Object}\n   * @property {?String} type\n   */\n  \n  /**\n   * @typedef ActionRecipesData.Error\n   * @type {Object}\n   * @property {String} message\n   * @property {String} errorCode\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overitten by transformRespone on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n   /**\n   * @name ActionRecipesData#getActionRecipeSpecifications\n   * @type {Function}\n   * @description get request - Returns data as ActionRecipesData.ActionRecipeSpecifications on success or ActionRecipesData.Error on error\n   \n   * @param {Object} params Map of query parameters.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .getActionRecipeSpecifications(params)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getActionRecipeSpecifications(params) {\n    const url = `${baseUri}/${version}/action-recipe-specifications`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#getActionRecipes\n   * @type {Function}\n   * @description get request - Returns data as ActionRecipesData.ActionRecipes on success or ActionRecipesData.Error on error\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.trigger trigger.\n     \n   * @param {?string} params.specificationId specificationId.\n     \n   * @param {?string} params.selectors selectors.\n     \n   * @param {?string} params.active active.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .getActionRecipes(params)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getActionRecipes(params) {\n    const url = `${baseUri}/${version}/action-recipes`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#postActionRecipesRecord\n   * @type {Function}\n   * @description post request - Returns data as ActionRecipesData.IdHolder on success or ActionRecipesData.Error|ActionRecipesData.Error on error\n   \n   * @param {ActionRecipesData.NewActionRecipe} data Data to be sent as the request message data.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .postActionRecipesRecord(data)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postActionRecipesRecord(data) {\n    const url = `${baseUri}/${version}/action-recipes`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#getActionRecipesRecord\n   * @type {Function}\n   * @description ActionRecipe - Returns data as ActionRecipesData.ActionRecipe on success or ActionRecipesData.Error|ActionRecipesData.Error on error\n   \n   * @param {string} recipeId \n     \n   \n   * @param {Object} params Map of query parameters.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .getActionRecipesRecord(recipeId, params)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getActionRecipesRecord(recipeId, params) {\n    const url = `${baseUri}/${version}/action-recipes/${recipeId}`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#putActionRecipesRecord\n   * @type {Function}\n   * @description put request - Returns data as ActionRecipesData.Error|ActionRecipesData.Error on error\n   \n   * @param {string} recipeId \n     \n   \n   * @param {ActionRecipesData.UpdateActionRecipe} data Data to be sent as the request message data.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .putActionRecipesRecord(recipeId, data)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putActionRecipesRecord(recipeId, data) {\n    const url = `${baseUri}/${version}/action-recipes/${recipeId}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#deleteActionRecipesRecord\n   * @type {Function}\n   * @description delete request - Returns data as ActionRecipesData.Error|ActionRecipesData.Error on error\n   \n   * @param {string} recipeId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .deleteActionRecipesRecord(recipeId, data)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteActionRecipesRecord(recipeId, data) {\n    const url = `${baseUri}/${version}/action-recipes/${recipeId}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#postActionRecipesDeactivationRequestRecord\n   * @type {Function}\n   * @description post request - Returns data as ActionRecipesData.Error on error\n   \n   * @param {string} recipeId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .postActionRecipesDeactivationRequestRecord(recipeId, data)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postActionRecipesDeactivationRequestRecord(recipeId, data) {\n    const url = `${baseUri}/${version}/action-recipes/${recipeId}/deactivation-request`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name ActionRecipesData#postActionRecipesActivationRequestRecord\n   * @type {Function}\n   * @description post request - Returns data as ActionRecipesData.Error on error\n   \n   * @param {string} recipeId \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @returns {Promise.<Response>} A promise resolving to response object\n   *\n   * @example\n   * actionRecipesData\n   *  .postActionRecipesActivationRequestRecord(recipeId, data)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postActionRecipesActivationRequestRecord(recipeId, data) {\n    const url = `${baseUri}/${version}/action-recipes/${recipeId}/activation-request`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data,\n      \n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name ActionRecipesData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postActionRecipesRecord method\n   *\n   * @name ActionRecipesData#schemas.postActionRecipesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"specificationId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"active\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    },\n    \"trigger\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"selectors\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"properties\": {\n              \"path\": {\n                \"type\": \"string\",\n                \"required\": false\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"required\": false\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"filter\": {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"required\": false\n        }\n      },\n      \"required\": true\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true\n    }\n  }\n}\n   */\n      \n  schemas.postActionRecipesRecord = definedTypes['ActionRecipesData.NewActionRecipe'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putActionRecipesRecord method\n   *\n   * @name ActionRecipesData#schemas.putActionRecipesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"name\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"specificationId\": {\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"active\": {\n      \"type\": \"boolean\",\n      \"required\": true\n    },\n    \"trigger\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"selectors\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"properties\": {\n              \"path\": {\n                \"type\": \"string\",\n                \"required\": false\n              },\n              \"value\": {\n                \"type\": \"string\",\n                \"required\": false\n              }\n            }\n          },\n          \"required\": false\n        },\n        \"filter\": {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"required\": false\n        }\n      },\n      \"required\": false\n    },\n    \"actions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"type\": {\n            \"type\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putActionRecipesRecord = definedTypes['ActionRecipesData.UpdateActionRecipe'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    getActionRecipeSpecifications,\n    \n    getActionRecipes,\n    \n    postActionRecipesRecord,\n    \n    getActionRecipesRecord,\n    \n    putActionRecipesRecord,\n    \n    deleteActionRecipesRecord,\n    \n    postActionRecipesDeactivationRequestRecord,\n    \n    postActionRecipesActivationRequestRecord,\n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/data-bb-action-recipes-http.js"],"sourceRoot":""}
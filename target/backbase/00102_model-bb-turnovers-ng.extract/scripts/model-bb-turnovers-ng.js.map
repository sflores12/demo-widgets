{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***","webpack:///webpack/bootstrap ba9372d13c966203e28a?ccfa***","webpack:///./model-bb-turnovers-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"data-bb-transactions-http-ng\"?f0a1","webpack:///external \"data-bb-product-summary-http-ng\"?3e87","webpack:///external \"lib-bb-storage-ng\"?d742","webpack:///external \"lib-bb-widget-ng\"?84ad","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./model-bb-turnovers-ng/scripts/index.js","webpack:///./model-bb-turnovers-ng/scripts/turnovers.js","webpack:///./model-bb-turnovers-ng/scripts/constants.js"],"names":["moduleKey","modelTurnoversKey","module","factory","name","turnoversModel","Promise","transactionsData","productSummaryData","bbStorage","widgetInstance","FROM_STORAGE","getBooleanPreference","IS_PRODUCTS_LIST_FROM_STORAGE","GET_FIRST_AS_DEFAULT","IS_FIRST_PRODUCT_DEFAULT","IS_MULTIPLE_ACCOUNTS","productKindHasProducts","productKind","products","length","validateTurnoversParameters","params","arrangementIds","Array","isArray","periodStartDate","periodEndDate","intervalDuration","resolve","reject","code","loadProducts","getProductsummary","then","data","setItem","PRODUCT_SUMMARY","catch","e","getProducts","getItem","getProductsArray","keepEmptyProducts","Object","keys","filter","kind","reduce","extendedProducts","map","assign","product","concat","getProductByID","productId","defaultProduct","find","id","getProductsFromList","ids","push","getSelectedProduct","PRODUCT_SELECTED","getSelectedProducts","PRODUCTS_SELECTED","setSelectedProduct","selectedProduct","removeItem","setSelectedProducts","loadTurnovers","getTransactionsTurnovers","response","transformToSeries","dataKey","turnovers","series","labels","turnover","intervalStartDate","datasets","item","amount","debitAmount","creditAmount","isFirstProductDefault","isProductsListFromStorage","isMultipleAccount","E_PARAMS","bbStorageKeys","preferencesKeys"],"mappings":"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","file":"model-bb-turnovers-ng/scripts/model-bb-turnovers-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"data-bb-transactions-http-ng\"), require(\"data-bb-product-summary-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-turnovers-ng\", [\"vendor-bb-angular\", \"data-bb-transactions-http-ng\", \"data-bb-product-summary-http-ng\", \"lib-bb-storage-ng\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-turnovers-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"data-bb-transactions-http-ng\"), require(\"data-bb-product-summary-http-ng\"), require(\"lib-bb-storage-ng\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"model-bb-turnovers-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"data-bb-transactions-http-ng\"], root[\"data-bb-product-summary-http-ng\"], root[\"lib-bb-storage-ng\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_24__, __WEBPACK_EXTERNAL_MODULE_25__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba9372d13c966203e28a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-turnovers-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 22\n// module chunks = 3 4 5 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-transactions-http-ng\"\n// module id = 23\n// module chunks = 3 4","module.exports = __WEBPACK_EXTERNAL_MODULE_24__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-product-summary-http-ng\"\n// module id = 24\n// module chunks = 3 4","module.exports = __WEBPACK_EXTERNAL_MODULE_25__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 25\n// module chunks = 3 4","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 26\n// module chunks = 3 4 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 28\n// module chunks = 3 4 6 7","/**\n * @module model-bb-turnovers-ng\n *\n * @description\n * Model for widget-bb-turnovers-ng\n *\n * @example\n * import modelTurnoversModuleKey, { modelTurnoversKey } from 'model-bb-turnovers-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     modelTurnoversModuleKey,\n *   ])\n *   .factory('someFactory', [\n *     modelTurnoversKey,\n *     // into\n *     function someFactory(turnoversModel) {\n *       // ...\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport transactionsDataModuleKey, {\n  transactionsDataKey,\n} from 'data-bb-transactions-http-ng';\n\nimport productSummaryDataModuleKey, {\n  productSummaryDataKey,\n} from 'data-bb-product-summary-http-ng';\n\nimport bbStorageModuleKey, {\n  bbStorageServiceKey,\n} from 'lib-bb-storage-ng';\n\nimport widgetModuleKey, {\n  widgetKey,\n} from 'lib-bb-widget-ng';\n\nimport Model from './turnovers';\n\nconst moduleKey = 'model-bb-turnovers-ng';\nexport const modelTurnoversKey = `${moduleKey}:model`;\n\nexport default angular\n  .module(moduleKey, [\n    transactionsDataModuleKey,\n    productSummaryDataModuleKey,\n    bbStorageModuleKey,\n    widgetModuleKey,\n  ])\n\n  .factory(modelTurnoversKey, [\n    '$q',\n    transactionsDataKey,\n    productSummaryDataKey,\n    bbStorageServiceKey,\n    widgetKey,\n    /* into */\n    Model,\n  ])\n\n  .name;\n\n/**\n * Amount object\n * @typedef {object} Amount\n * @property {string} currencyCode Currency code (ISO)\n * @property {number} value\n */\n\n/**\n * Turnover response object\n * @typedef {object} Turnover\n * @property {string} arrangementId Id of the arrangement this turnover belongs to\n * @property {string} intervalDuration Duration of intervals returned\n * @property {TurnoverItem[]} turnovers Array of turnover items\n */\n\n/**\n * Turnover response item\n * @typedef {object} TurnoverItem\n * @property {string} intervalStartDate Date in ISO format (2016-06-01T16:41:41.090Z)\n * @property {Amount} debitAmount Debit amount object\n * @property {Amount} creditAmount Credit amount object\n * @property {Amount} balance Debit and credit difference object\n */\n\n/**\n * BBSeries data object used to draw charts\n * @typedef {object} BBSeries\n * @property {string[]} labels Array of x axis labels\n * @property {Dataset[]} datasets Array of all y axis value datasets\n */\n\n/**\n * Dataset object for y axis data\n * @typedef {object} Dataset\n * @property {number[]} data Array of data points to be drawn for each label\n */\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-turnovers-ng/scripts/index.js","/* eslint max-len: [\"error\", 100, { \"ignoreComments\": true }]*/\nimport { fromHttpError } from 'lib-bb-model-errors';\nimport { bbStorageKeys, preferencesKeys, E_PARAMS } from './constants';\n\n/**\n * Model factory for model-bb-turnovers-ng\n *\n * @inner\n * @type {function}\n * @param {Object} Promise An ES2015 compatible `Promise` object.\n *\n * @return {Object}\n */\nexport default function turnoversModel(\n  Promise,\n  transactionsData,\n  productSummaryData,\n  bbStorage,\n  widgetInstance\n) {\n  /**\n   * @name turnoversModel#FROM_STORAGE\n   * @inner\n   * @type {boolean}\n   *\n   * @description\n   * Defines if products are recieved from bb-storage or from API always\n   */\n  const FROM_STORAGE = widgetInstance.getBooleanPreference(\n    preferencesKeys.IS_PRODUCTS_LIST_FROM_STORAGE\n  );\n\n  /**\n   * @name turnoversModel#IS_FIRST_PRODUCT_DEFAULT\n   * @inner\n   * @type {boolean}\n   *\n   * @description\n   * Defines if the first product is selected by default\n   */\n  const GET_FIRST_AS_DEFAULT = widgetInstance.getBooleanPreference(\n    preferencesKeys.IS_FIRST_PRODUCT_DEFAULT\n  );\n\n  /**\n   * @name turnoversModel#IS_MULTIPLE_ACCOUNTS\n   * @inner\n   * @type {boolean}\n   *\n   * @description\n   * Defines if the widget is combined with multiple account selector\n   */\n  const IS_MULTIPLE_ACCOUNTS = widgetInstance.getBooleanPreference(\n    preferencesKeys.IS_MULTIPLE_ACCOUNTS\n  );\n\n  /**\n   * @name turnoversModel#productKindHasProducts\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Checks if product kind has any products\n   *\n   * @param {Object} productKind a product kind object\n   * @return {boolean} 'true' if has any products\n   */\n  const productKindHasProducts = productKind => productKind.products && productKind.products.length;\n\n  /**\n   * @name turnoversModel#validateTurnoversParameters\n   * @type {function}\n   *\n   * @description\n   * Checks if all required parameters are set\n   *\n   * @returns {Promise.<object>}\n   * A Promise resolving to object with parameters.\n   */\n  const validateTurnoversParameters = (params) => {\n    if (params.arrangementIds && Array.isArray(params.arrangementIds)\n      && params.periodStartDate && params.periodEndDate && params.intervalDuration) {\n      return Promise.resolve(params);\n    }\n\n    return Promise.reject({\n      code: E_PARAMS,\n    });\n  };\n\n  /**\n   * @name turnoversModel#loadProducts\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Load products from API.\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.ProductKinds, module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to object with ProductsKinds and TotalBalance.\n   */\n  const loadProducts = () => productSummaryData\n    .getProductsummary()\n    .then(({ data }) => {\n      bbStorage.setItem(bbStorageKeys.PRODUCT_SUMMARY, data);\n      return data;\n    })\n    .catch((e) => {\n      throw fromHttpError(e);\n    });\n\n  /**\n   * @name turnoversModel#getProducts\n   * @type {function}\n   *\n   * @description\n   * Get products either from storage or from the service\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.ProductKinds, module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to object with ProductsKinds and TotalBalance.\n   */\n  const getProducts = () =>\n    bbStorage.getItem(bbStorageKeys.PRODUCT_SUMMARY)\n    .then(data => (\n      FROM_STORAGE && data\n      ? data\n      : loadProducts()\n    ));\n\n  /**\n   * @name turnoversModel#getProductsArray\n   * @type {function}\n   *\n   * @description\n   * Get products.\n   *\n   * @param {boolean} keepEmptyProducts defines if empty product kinds should be passed.\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.Product[], module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to array with Products.\n   */\n  const getProductsArray = (keepEmptyProducts = false) =>\n    getProducts()\n    .then(data => Object.keys(data)\n      .filter(kind => keepEmptyProducts || productKindHasProducts(data[kind]))\n      .reduce((products, kind) => {\n        const extendedProducts = data[kind].products\n          .map(product => Object.assign(product, { kind }));\n        return products.concat(extendedProducts);\n      }, [])\n    );\n\n  /**\n   * @name turnoversModel#getProductByID\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Get product by id\n   *\n   * @param {any} productId product ID to get a stored product record\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.Product, module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to a product with specified id\n   */\n  const getProductByID = (productId) => getProductsArray()\n    .then(products => {\n      const defaultProduct = GET_FIRST_AS_DEFAULT && products[0]\n        ? products[0]\n        : null;\n      return productId\n        ? products.find(product => product.id === productId)\n        : defaultProduct;\n    });\n\n  /**\n   * @name turnoversModel#getProductsFromList\n   * @inner\n   * @type {function}\n   *\n   * @description\n   * Get products from list\n   *\n   * @param {string[]} ids Product ID array\n   * @returns {Promise.<module:model-bb-product-summary-ng.Product[], module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to an array with Products or null\n   */\n  const getProductsFromList = (ids) => getProductsArray()\n    .then(products => {\n      const defaultProduct = [];\n      if (GET_FIRST_AS_DEFAULT && products[0]) {\n        defaultProduct.push(products[0]);\n      }\n\n      if (!ids || !ids.length) {\n        return defaultProduct;\n      }\n\n      return ids.map(id => products.find(product => product.id === id) || defaultProduct);\n    });\n\n  /**\n   * @name turnoversModel#getSelectedProduct\n   * @type {function}\n   *\n   * @description\n   * Get current selected product.\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.Product, module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to a selected product object.\n   */\n  const getSelectedProduct = () => bbStorage.getItem(bbStorageKeys.PRODUCT_SELECTED)\n    .then(id => getProductByID(id));\n\n  /**\n   * @name turnoversModel#getSelectedProducts\n   * @type {function}\n   *\n   * @description\n   * Get currently selected products array\n   *\n   * @returns {Promise.<module:model-bb-product-summary-ng.Product[], module:lib-bb-model-errors.ModelError>}\n   * A Promise resolving to Product array\n   */\n  const getSelectedProducts = () => bbStorage.getItem(bbStorageKeys.PRODUCTS_SELECTED)\n    .then(ids => getProductsFromList(ids));\n\n  /**\n   * @name turnoversModel#setSelectedProduct\n   * @type {function}\n   *\n   * @description\n   * Set selected product to the sorage\n   *\n   * @param {module:model-bb-product-summary-ng.Product} selectedProduct The selected product value\n   */\n  const setSelectedProduct = (selectedProduct) => {\n    if (selectedProduct) {\n      bbStorage.setItem(bbStorageKeys.PRODUCT_SELECTED, selectedProduct.id);\n    } else {\n      bbStorage.removeItem(bbStorageKeys.PRODUCT_SELECTED);\n    }\n  };\n\n  /**\n   * @name turnoversModel#setSelectedProducts\n   * @type {function}\n   *\n   * @description\n   * Set currently selected products array\n   *\n   * @param {module:model-bb-product-summary-ng.Product[]} products Array of products to select\n   */\n  const setSelectedProducts = (products) => {\n    if (products && products.length) {\n      bbStorage.setItem(bbStorageKeys.PRODUCTS_SELECTED,\n        products.map(product => product.id).filter(id => id)\n      );\n    } else {\n      bbStorage.removeItem(bbStorageKeys.PRODUCTS_SELECTED);\n    }\n  };\n\n  /**\n   * @name turnoversModel#loadTurnovers\n   * @type {function}\n   *\n   * @description\n   * Load product turnovers\n   *\n   * @param {object} params Request parameters\n   * @returns {Promise.<Turnover, module:lib-bb-model-errors.ModelError>}\n   * A Promise with turnover or error data\n   */\n  const loadTurnovers = (params) => transactionsData.getTransactionsTurnovers(params)\n    .then(response => response.data)\n    .catch(e => {\n      throw fromHttpError(e);\n    });\n\n  /**\n   * @name turnoversModel#transformToSeries\n   * @type {function}\n   *\n   * @description\n   * Transforms data into format suitable for chart UI components\n   *\n   * @param {Turnover} data Turnover data\n   * @param {?string} dataKey Optional, tells if data should be mapped to specific key\n   * @returns {BBSeries} Data in format suitable for chart UI components\n   */\n  const transformToSeries = (data, dataKey) => {\n    const turnovers = (data && data.turnovers) ? data.turnovers : [];\n\n    const series = {\n      labels: turnovers.map(turnover => turnover.intervalStartDate),\n    };\n\n    if (dataKey) {\n      Object.assign(series, {\n        datasets: [{\n          dataKey,\n          data: turnovers.map(item => item[dataKey].amount),\n        }],\n      });\n    } else {\n      Object.assign(series, {\n        datasets: [{\n          data: turnovers.map(item => item.debitAmount.amount),\n        }, {\n          data: turnovers.map(item => item.creditAmount.amount),\n        }],\n      });\n    }\n    return series;\n  };\n\n  /**\n   * @name turnoversModel#isFirstProductDefault\n   * @type {function}\n   *\n   * @description\n   * Defines if the first product is selected by default\n   *\n   * @returns {boolean} GET_FIRST_AS_DEFAULT\n   */\n  const isFirstProductDefault = () => GET_FIRST_AS_DEFAULT;\n\n  /**\n   * @name turnoversModel#isProductsListFromStorage\n   * @type {function}\n   *\n   * @description\n   * Defines if products are recieved from bb-storage or from API always\n   *\n   * @returns {boolean} FROM_STORAGE\n   */\n  const isProductsListFromStorage = () => FROM_STORAGE;\n\n  /**\n   * @name turnoversModel#isMultipleAccount\n   * @type {function}\n   *\n   * @description\n   * Defines if the widget is combined with multiple account selector\n   *\n   * @returns {boolean} IS_MULTIPLE_ACCOUNTS\n   */\n  const isMultipleAccount = () => IS_MULTIPLE_ACCOUNTS;\n\n  /**\n   * @name turnoversModel\n   * @type {Object}\n   */\n  return {\n    E_PARAMS,\n    loadTurnovers,\n    validateTurnoversParameters,\n    transformToSeries,\n    getProducts,\n    getProductsArray,\n    getSelectedProduct,\n    getSelectedProducts,\n    setSelectedProduct,\n    setSelectedProducts,\n    isFirstProductDefault,\n    isProductsListFromStorage,\n    isMultipleAccount,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-turnovers-ng/scripts/turnovers.js","/**\n * @name bbStorageKeys\n * @description\n * bbStorage keys enum\n * @type {object}\n */\nexport const bbStorageKeys = {\n  PRODUCT_SELECTED: 'bb.product.selected',\n  PRODUCTS_SELECTED: 'bb.products.selected',\n  PRODUCT_SUMMARY: 'bb.product.summary.data',\n};\n\n/**\n * @name preferencesKeys\n * @description\n * Preferences keys enum\n * @type {object}\n */\nexport const preferencesKeys = {\n  IS_FIRST_PRODUCT_DEFAULT: 'bb.turnovers.useFirstProductAsDefault',\n  IS_PRODUCTS_LIST_FROM_STORAGE: 'bb.turnovers.getProductsFromStorage',\n  IS_MULTIPLE_ACCOUNTS: 'multipleAccounts',\n};\n\n/**\n * @name E_PARAMS\n * @description\n * Additional model error in case required parameters are missing\n * @type {string}\n */\nexport const E_PARAMS = 'error.load.params';\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-turnovers-ng/scripts/constants.js"],"sourceRoot":""}
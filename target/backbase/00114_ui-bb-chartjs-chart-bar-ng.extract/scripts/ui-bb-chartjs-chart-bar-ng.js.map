{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6******","webpack:///webpack/bootstrap dcaf2abb135ce9e57553?c844******","webpack:///./ui-bb-chartjs-chart-bar-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114******","webpack:///./ui-bb-chartjs-chart-bar-ng/scripts/index.js","webpack:///external \"vendor-bb-chartjs\"","webpack:///./ui-bb-chartjs-chart-bar-ng/scripts/component.js","webpack:///./ui-bb-chartjs-chart-bar-ng/scripts/controller.js"],"names":["module","value","component","name","uiBbChartjsChartBarComponent","controller","bindings","title","series","barPercentage","categoryPercentage","tooltip","legend","plugins","horizontal","stacked","gridLines","xFormatter","yFormatter","options","template","uiBbChartjsChartBarController","$element","$scope","Chartjs","$ctrl","HAS_CUSTOM_TOOLTIP","element","find","chart","removeEmptyProperty","prop","obj","target","item","undefined","angular","forEach","key","removeEmptyProperties","drawTooltip","tooltipDataAttr","tooltipSelector","tooltipEl","querySelector","document","createElement","setAttribute","canvas","parentNode","appendChild","opacity","style","display","getAxesOptions","formatter","beforeCalculateTickRotation","axis","Object","assign","ticks","getChartOptions","v","text","scales","xAxes","yAxes","tooltips","enabled","custom","createChart","type","data","merge","updateChart","update","$onInit","$onChanges"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;;;;;;;AC8BA;;;;AACA;;;;AAEA;;;;;;AAEA;;;;;mBAKe,0BAAQA,MAAR,CAAe,4BAAf,EAA6C,EAA7C,EACZC,KADY,CACN,SADM,6BAEZC,SAFY,CAEF,qBAFE,uBAGZC,I,EA3CH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;;ACAA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,KAAMC,+BAA+B;AACnCC,eAAY,CAAC,UAAD,EAAa,QAAb,EAAuB,SAAvB,uBADuB;AAEnCC,aAAU;AACRC,YAAO,GADC;AAERC,aAAQ,GAFA;AAGRC,oBAAe,GAHP;AAIRC,yBAAoB,GAJZ;AAKRC,cAAS,GALD;AAMRC,aAAQ,GANA;AAORC,cAAS,GAPD;AAQRC,iBAAY,GARJ;AASRC,cAAS,GATD;AAURC,gBAAW,GAVH;AAWRC,iBAAY,GAXJ;AAYRC,iBAAY,GAZJ;AAaRC,cAAS;AAbD,IAFyB;AAiBnCC,aAAU;AAjByB,EAArC;;mBAoBehB,4B;;AAEf;;;;;;;;AAQA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;AC3FA;AACA;;;;;;;;AAQA,KAAMiB,gCACJ,SAASA,6BAAT,CAAuCC,QAAvC,EAAiDC,MAAjD,EAAyDC,OAAzD,EAAkE;AAChE,OAAMC,QAAQ,IAAd;AACA,OAAMC,qBAAqB,OAAOD,MAAMd,OAAb,KAA0B,UAArD;;AAEA,OAAMgB,UAAUL,SAASM,IAAT,CAAc,QAAd,EAAwB,CAAxB,CAAhB;AACA,OAAIC,cAAJ;;AAEA;;;;;;;;;;;;AAYA,OAAMC,sBAAsB,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,GAAP,EAAe;AACzC,SAAMC,SAASD,GAAf;AACA,SAAME,OAAOD,OAAOF,IAAP,CAAb;AACA,SAAIG,SAAS,IAAT,IAAiBA,SAASC,SAA9B,EAAyC;AACvC,cAAOF,OAAOF,IAAP,CAAP;AACD,MAFD,MAEO,IAAI,QAAOG,IAAP,yCAAOA,IAAP,OAAgB,QAApB,EAA8B;AACnCE,eAAQC,OAAR,CAAgBH,IAAhB,EAAsB,UAACjC,KAAD,EAAQqC,GAAR;AAAA,gBAAgBR,oBAAoBQ,GAApB,EAAyBJ,IAAzB,CAAhB;AAAA,QAAtB;AACD;;AAED,YAAOD,MAAP;AACD,IAVD;;AAYA;;;;;;;;;AASA,OAAMM,wBAAwB,SAAxBA,qBAAwB,CAACP,GAAD;AAAA,YAC5BI,QAAQC,OAAR,CAAgBL,GAAhB,EAAqB,UAAC/B,KAAD,EAAQqC,GAAR;AAAA,cAAgBR,oBAAoBQ,GAApB,EAAyBN,GAAzB,CAAhB;AAAA,MAArB,CAD4B;AAAA,IAA9B;;AAGA;;;;;;;;;;;AAWA,OAAMQ,cAAc,SAAdA,WAAc,CAAC7B,OAAD,EAAa;AAC/B;AACA,SAAM8B,kBAAkB,sBAAxB;AACA,SAAMC,2BAAyBD,eAAzB,MAAN;AACA,SAAIE,YAAYrB,SAAS,CAAT,EAAYsB,aAAZ,CAA0BF,eAA1B,CAAhB;AACA,SAAI,CAACC,SAAL,EAAgB;AACdA,mBAAYE,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACAH,iBAAUI,YAAV,CAAuBN,eAAvB,EAAwC,EAAxC;AACA;AACAE,iBAAUI,YAAV,CAAuB,cAAvB,EAAuC,0CAAvC;AACAJ,iBAAUI,YAAV,CAAuB,cAAvB,EAAuC,uCAAvC;AACAlB,aAAMmB,MAAN,CAAaC,UAAb,CAAwBC,WAAxB,CAAoCP,SAApC;AACD;;AAED;AACA,SAAIhC,QAAQwC,OAAR,KAAoB,CAAxB,EAA2B;AACzBR,iBAAUS,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACA;AACD;;AAEDV,eAAUS,KAAV,CAAgBC,OAAhB,GAA0B,SAA1B;AACA;AACA5B,WAAMd,OAAN,CAAcA,OAAd,EAAuBgC,SAAvB,EAAkClB,MAAMjB,MAAxC,EAAgDqB,KAAhD;AACD,IAvBD;;AAyBA;;;;;;;;;AASA,OAAMyB,iBAAiB,SAAjBA,cAAiB,CAACC,SAAD;AAAA,YAAe,CAAC;AACrCC,oCAA6B,qCAACC,IAAD,EAAU;AACrCC,gBAAOC,MAAP,CAAcF,IAAd,EAAoB;AAClBG,kBAAOL,UAAUE,KAAKG,KAAf,EAAsBnC,MAAMjB,MAA5B;AADW,UAApB;AAGD,QALoC;AAMrCQ,kBAAW;AACTqC,kBAAS,CAAC,CAAC5B,MAAMT;AADR,QAN0B;AASrCD,gBAAS,CAAC,CAACU,MAAMV,OAToB;AAUrCN,sBAAegB,MAAMhB,aAVgB;AAWrCC,2BAAoBe,MAAMf;AAXW,MAAD,CAAf;AAAA,IAAvB;;AAcA;;;;;;;AAOA,OAAMmD,kBAAkB,SAAlBA,eAAkB,GAAM;AAC5B;AACA,SAAM5C,aAAaQ,MAAMR,UAAN,MAAuB;AAAA,cAAK6C,CAAL;AAAA,MAA1C;AACA,SAAM5C,aAAaO,MAAMP,UAAN,MAAuB;AAAA,cAAK4C,CAAL;AAAA,MAA1C;AACA;AACA;AACA,SAAMlD,SAASa,MAAMb,MAAN,GACb8C,OAAOC,MAAP,CAAclC,MAAMb,MAApB,EAA4B,EAAEyC,SAAS,IAAX,EAA5B,CADa,GAEb,EAAEA,SAAS,KAAX,EAFF;;AAIA,SAAMlC,UAAU;AACdZ,cAAO;AACL8C,kBAAS,CAAC,CAAC5B,MAAMlB,KADZ;AAELwD,eAAMtC,MAAMlB;AAFP,QADO;AAKdyD,eAAQ;AACNC,gBAAOX,eAAerC,UAAf,CADD;AAENiD,gBAAOZ,eAAepC,UAAf;AAFD,QALM;AASdN,qBATc;AAUduD,iBAAU;AACRC,kBAAS,CAAC1C,kBADF;AAER2C,iBAAQ3C,qBAAqB;AAAA,kBAAWc,YAAY7B,OAAZ,CAAX;AAAA,UAArB,GAAuD;AAFvD;AAVI,MAAhB;;AAgBA4B,2BAAsBpB,OAAtB;AACA,YAAOA,OAAP;AACD,IA5BD;;AA8BA;;;;;;;AAOA,OAAMmD,cAAc,SAAdA,WAAc,GAAM;AACxB;AACAzC,aAAQ6B,OAAOC,MAAP,CAAc,IAAInC,OAAJ,CAAYG,OAAZ,EAAqB;AACzC4C,aAAM9C,MAAMX,UAAN,GAAmB,eAAnB,GAAqC,KADF;AAEzC0D,aAAM/C,MAAMjB,MAF6B;AAGzCW,gBAASiB,QAAQqC,KAAR,CAAcZ,iBAAd,EAAiCpC,MAAMN,OAAvC,CAHgC;AAIzCN,gBAASY,MAAMZ;AAJ0B,MAArB,CAAd,EAKJ,EAAEU,cAAF,EALI,CAAR;AAMD,IARD;;AAUA;;;;;;;AAOA,OAAMmD,cAAc,SAAdA,WAAc,GAAM;AACxB7C,WAAM2C,IAAN,GAAa/C,MAAMjB,MAAnB;AACAqB,WAAM8C,MAAN;AACD,IAHD;;AAKA;;;;;;;AAOA,OAAMC,UAAU,SAAVA,OAAU;AAAA,YAAMN,aAAN;AAAA,IAAhB;;AAEA;;;;;;;AAOA,OAAMO,aAAa,SAAbA,UAAa,GAAM;AACvB;AACA,SAAIhD,KAAJ,EAAW;AACT6C;AACD;AACF,IALD;;AAOAhB,UAAOC,MAAP,CAAclC,KAAd,EAAqB;AACnBmD,qBADmB;AAEnBC;AAFmB,IAArB;AAID,EApMH;;mBAsMexD,6B","file":"ui-bb-chartjs-chart-bar-ng/scripts/ui-bb-chartjs-chart-bar-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-chartjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-chartjs-chart-bar-ng\", [\"vendor-bb-angular\", \"vendor-bb-chartjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-chartjs-chart-bar-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-chartjs\"));\n\telse\n\t\troot[\"ui-bb-chartjs-chart-bar-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"vendor-bb-chartjs\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_36__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dcaf2abb135ce9e57553","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-chartjs-chart-bar-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40","/**\n * @module ui-bb-chartjs-chart-bar-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbChartjsChartBar from 'ui-bb-chartjs-chart-bar-ng';\n *\n * export const dependencyKeys = [\n *   uiBbChartjsChartBar,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-chartjs-chart-bar class=\"col-xs-12\"\n *   data-series=\"$ctrl.series\"\n *   data-title=\"$ctrl.title\"\n *   data-stacked=\"false\"\n *   data-horizontal=\"false\"\n *   data-grid-lines=\"false\"\n *   data-bar-percentage=\"0.9\"\n *   data-category-percentage=\"1.0\"\n *   data-legend=\"ext.helpers.customizeLegend\"\n *   data-tooltip=\"ext.helpers.customizeTooltip\"\n *   data-plugins=\"ext.helpers.chartPlugins\"\n *   data-options=\"ext.helpers.chartOptions\"\n *   data-x-formatter=\"ext.helpers.formatX\"\n *   data-y-formatter=\"ext.helpers.formatY\"\n * />\n */\n\nimport angular from 'vendor-bb-angular';\nimport chartjs from 'vendor-bb-chartjs';\n\nimport component from './component';\n\n/**\n * @description The angular module name\n * @name default\n * @type {string}\n */\nexport default angular.module('ui-bb-chartjs-chart-bar-ng', [])\n  .value('chartjs', chartjs)\n  .component('uiBbChartjsChartBar', component)\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-bar-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_36__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-chartjs\"\n// module id = 36\n// module chunks = 6 7 8","import uiBbChartjsChartBarController from './controller';\n\n/**\n * @name uiBbChartjsChartBarComponent\n * @type {object}\n * @description\n * Chart.js bar chart component object\n *\n * @property {string} title Title of the chart\n * @property {ChartjsBarSeries} series Object used to draw Chartjs bar chart\n * @property {number} barPercentage Part of tick width used for one bar in the category.\n * Can be number between 0.0 and 1.0\n * @property {number} categoryPercentage Part of tick width used for one category.\n * Can be number between 0.0 and 1.0\n * @property {function} tooltip Method for drawing custom tooltip. If this property is not\n * used, default tooltip will be rendered. Otherwise, this method will be provided with:\n * - tooltip: Chart.js tooltip object\n * - element: tooltip DOM element\n * - data: series used to draw chart\n * - chart: Chart.js chart object\n * Custom method needs at least to fill in internal HTML of custom tooltip\n * by injecting the content into element provided\n * - Example:\n * customTooltip: (tooltip, element, data, chart) =>\n * Object.assign(element, { innerHTML: '<div>Custom content</div>' }),\n * @property {ChartjsLegend} legend Object used to define chart's legend behavior and look\n * @property {ChartjsPlugin[]} plugins\n * Array of plugins that will be registered upon chart rendering\n * @property {boolean} horizontal Draw bars horizontally\n * @property {boolean} stacked Draw bars stacked one on another\n * @property {boolean} gridLines Draw gridlines inside chart area\n * @property {function} xFormatter Callback that receives all x axes ticks and series data.\n * It should return array of formatted ticks\n * @property {function} yFormatter Callback that receives all y axes ticks and series data.\n * It should return array of formatted ticks\n * @property {ChartjsSettings} options Object that overrides any property of\n * Chart.js default settings object\n */\nconst uiBbChartjsChartBarComponent = {\n  controller: ['$element', '$scope', 'chartjs', uiBbChartjsChartBarController],\n  bindings: {\n    title: '@',\n    series: '<',\n    barPercentage: '<',\n    categoryPercentage: '<',\n    tooltip: '<',\n    legend: '<',\n    plugins: '<',\n    horizontal: '<',\n    stacked: '<',\n    gridLines: '<',\n    xFormatter: '&',\n    yFormatter: '&',\n    options: '<',\n  },\n  template: '<canvas></canvas>',\n};\n\nexport default uiBbChartjsChartBarComponent;\n\n/**\n * Series object used to draw Chartjs bar chart. Compatible with BBSeries generated\n * by model modules.\n * @typedef {object} ChartjsBarSeries\n * @property {string[]} labels Array of x axis labels\n * @property {ChartjsBarDataset[]} datasets Array of datasets\n */\n\n/**\n * Dataset object for bar chart as defined by Chart.js library.\n * Compatible with BBDataset object used in BBSeries.\n * It is required for it to contain data as array of values.\n * More info about additional (optional) properties can be found at\n * {@link http://www.chartjs.org/docs/latest/charts/bar.html#dataset-properties}\n * @typedef {object} ChartjsBarDataset\n * @property {number[]} data Array of data points to be drawn for each label\n */\n\n/**\n * Legend object as defined in Chart.js library.\n * More info\n * {@link http://www.chartjs.org/docs/latest/configuration/legend.html#configuration-options}\n * @typedef {object} ChartjsLegend\n */\n\n/**\n * Plugin object as defined in Chart.js library. It should define at least one hook from\n * {@link http://www.chartjs.org/docs/latest/developers/plugins.html#plugin-core-api}\n * @typedef {object} ChartjsPlugin\n */\n\n/**\n * Settings object with options available for bar chart.\n * More info {@link http://www.chartjs.org/docs/latest/charts/bar.html}\n * @typedef {object} ChartjsSettings\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-bar-ng/scripts/component.js","/* global angular, document */\n/**\n * @name uiBbChartjsChartBarController\n * @ngkey uiBbChartjsChartBarController\n * @type {function}\n *\n * @description\n * Chart.js bar chart controller\n */\nconst uiBbChartjsChartBarController =\n  function uiBbChartjsChartBarController($element, $scope, Chartjs) {\n    const $ctrl = this;\n    const HAS_CUSTOM_TOOLTIP = typeof($ctrl.tooltip) === 'function';\n\n    const element = $element.find('canvas')[0];\n    let chart;\n\n    /**\n     * @name removeEmptyProperty\n     * @type {function}\n     * @inner\n     * @description\n     * Returns a copy of the scanned object without selected property\n     * if the property is null or undefined\n     *\n     * @param {string} prop Name of the property\n     * @param {object} obj Object to be scanned\n     * @returns {object} Cleared object\n     */\n    const removeEmptyProperty = (prop, obj) => {\n      const target = obj;\n      const item = target[prop];\n      if (item === null || item === undefined) {\n        delete target[prop];\n      } else if (typeof item === 'object') {\n        angular.forEach(item, (value, key) => removeEmptyProperty(key, item));\n      }\n\n      return target;\n    };\n\n    /**\n     * @name removeEmptyProperties\n     * @type {function}\n     * @inner\n     * @description\n     * Removes all null or undefined properties from an object\n     *\n     * @param {object} obj Object to be scanned\n     */\n    const removeEmptyProperties = (obj) =>\n      angular.forEach(obj, (value, key) => removeEmptyProperty(key, obj));\n\n    /**\n     * @name drawTooltip\n     * @type {function}\n     * @inner\n     * @description\n     * In case there is custom tooltip callback, this method will prepare\n     * DOM element and provide reference to it, additionally with all\n     * series data and chart instance\n     *\n     * @param {object} tooltip Chart.js tooltip object\n     */\n    const drawTooltip = (tooltip) => {\n      // retrieve existing tooltip DOM element or create a new one\n      const tooltipDataAttr = 'data-chartjs-tooltip';\n      const tooltipSelector = `div[${tooltipDataAttr}]`;\n      let tooltipEl = $element[0].querySelector(tooltipSelector);\n      if (!tooltipEl) {\n        tooltipEl = document.createElement('div');\n        tooltipEl.setAttribute(tooltipDataAttr, '');\n        // prevent flickering when hovering above tooltip that covers part of the chart\n        tooltipEl.setAttribute('onmouseenter', 'event.target.style.display = \\'inherit\\'');\n        tooltipEl.setAttribute('onmouseleave', 'event.target.style.display = \\'none\\'');\n        chart.canvas.parentNode.appendChild(tooltipEl);\n      }\n\n      // if tooltip should not be visible, hide it and stop execution\n      if (tooltip.opacity === 0) {\n        tooltipEl.style.display = 'none';\n        return;\n      }\n\n      tooltipEl.style.display = 'inherit';\n      // execute custom tooltip builder\n      $ctrl.tooltip(tooltip, tooltipEl, $ctrl.series, chart);\n    };\n\n    /**\n     * @name getAxesOptions\n     * @type {function}\n     * @inner\n     * @description\n     * Builds axes JSON configuration\n     *\n     * @param {function} formatter Axis tick formatter\n     */\n    const getAxesOptions = (formatter) => [{\n      beforeCalculateTickRotation: (axis) => {\n        Object.assign(axis, {\n          ticks: formatter(axis.ticks, $ctrl.series),\n        });\n      },\n      gridLines: {\n        display: !!$ctrl.gridLines,\n      },\n      stacked: !!$ctrl.stacked,\n      barPercentage: $ctrl.barPercentage,\n      categoryPercentage: $ctrl.categoryPercentage,\n    }];\n\n    /**\n     * @name getChartOptions\n     * @type {function}\n     * @inner\n     * @description\n     * Builds JSON structure needed for chart rendering\n     */\n    const getChartOptions = () => {\n      // if there are no formatters use dummy callback\n      const xFormatter = $ctrl.xFormatter() || (v => v);\n      const yFormatter = $ctrl.yFormatter() || (v => v);\n      // legend is displayed by default, so if there is no legend data\n      // create an object that forces it to be hidden\n      const legend = $ctrl.legend ?\n        Object.assign($ctrl.legend, { display: true }) :\n        { display: false };\n\n      const options = {\n        title: {\n          display: !!$ctrl.title,\n          text: $ctrl.title,\n        },\n        scales: {\n          xAxes: getAxesOptions(xFormatter),\n          yAxes: getAxesOptions(yFormatter),\n        },\n        legend,\n        tooltips: {\n          enabled: !HAS_CUSTOM_TOOLTIP,\n          custom: HAS_CUSTOM_TOOLTIP ? tooltip => drawTooltip(tooltip) : null,\n        },\n      };\n\n      removeEmptyProperties(options);\n      return options;\n    };\n\n    /**\n     * @name createChart\n     * @type {function}\n     * @inner\n     * @description\n     * Creates new chart instance\n     */\n    const createChart = () => {\n      // generate chart with all the options combined\n      chart = Object.assign(new Chartjs(element, {\n        type: $ctrl.horizontal ? 'horizontalBar' : 'bar',\n        data: $ctrl.series,\n        options: angular.merge(getChartOptions(), $ctrl.options),\n        plugins: $ctrl.plugins,\n      }), { $scope });\n    };\n\n    /**\n     * @name updateChart\n     * @type {function}\n     * @inner\n     * @description\n     * Redraws chart with the new data\n     */\n    const updateChart = () => {\n      chart.data = $ctrl.series;\n      chart.update();\n    };\n\n    /**\n     * AngularJS Lifecycle hook used to draw chart\n     *\n     * @name $onInit\n     * @type {function}\n     * @returns {void}\n     */\n    const $onInit = () => createChart();\n\n    /**\n     * AngularJS Lifecycle hook used to update chart\n     *\n     * @name $onChanges\n     * @type {function}\n     * @returns {void}\n     */\n    const $onChanges = () => {\n      // Skip update before init\n      if (chart) {\n        updateChart();\n      }\n    };\n\n    Object.assign($ctrl, {\n      $onInit,\n      $onChanges,\n    });\n  };\n\nexport default uiBbChartjsChartBarController;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-chartjs-chart-bar-ng/scripts/controller.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 67756ab2f7e9e5e0dbdf?d11b*","webpack:///./widget-bb-action-recipes-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-action-recipes-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///external \"model-bb-action-recipes-ng\"","webpack:///./widget-bb-action-recipes-ng/scripts/controller.js","webpack:///./widget-bb-action-recipes-ng/scripts/constants.js","webpack:///./widget-bb-action-recipes-ng/scripts/mappings.js","webpack:///./widget-bb-action-recipes-ng/scripts/default-hooks.js"],"names":["defaultHooks","hooksKey","module","factory","controller","run","bus","widget","bbIntent","publish","id","getId","init","name","ActionRecipesController","model","hooks","$ctrl","createRecipeFilter","specification","apiTrigger","accounts","filter","Error","type","toApiModel","Function","convertToRecipeModel","apiRecipe","specifications","find","spec","specificationId","action","actions","getAvailableChannels","trigger","onLoad","state","loading","load","then","res","recipes","map","recipe","catch","err","error","code","$onInit","currentView","view","navigateTo","onCreate","newAction","CREATE","onEdit","EDIT","onSave","update","onCreateDismiss","save","Object","assign","onRemove","remove","splice","indexOf","LIST","onActivate","changingStatus","activate","active","ACTION_RECIPE_ACTIVATION_FAILED","onDeactivate","deactivate","ACTION_RECIPE_DEACTIVATION_FAILED","static","labels","View","recipeType","newTransaction","condition","lt","gt","eq","gte","lte","SPECIFICATIONS","httpErrorMessages","Event","RecipeModel","o","RecipeAction","channels","defaultValue","channelsConfig","keys","forEach","channelKey","parseAction","channel","item","value","some","key","push","browser","sms","email"],"mappings":"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","file":"widget-bb-action-recipes-ng/scripts/widget-bb-action-recipes-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-action-recipes-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-action-recipes-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-intent-ng\", \"model-bb-action-recipes-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-action-recipes-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-intent-ng\"), require(\"model-bb-action-recipes-ng\"));\n\telse\n\t\troot[\"widget-bb-action-recipes-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-intent-ng\"], root[\"model-bb-action-recipes-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_23__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_33__, __WEBPACK_EXTERNAL_MODULE_34__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 67756ab2f7e9e5e0dbdf","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-action-recipes-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_23__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 23\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 27\n// module chunks = 1 2","/**\n * @module widget-bb-action-recipes-ng\n *\n * @description\n * Action Recipes Widget\n */\nimport angular from 'vendor-bb-angular';\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport modelActionRecipesModuleKey, { modelActionRecipesKey } from 'model-bb-action-recipes-ng';\n\nimport Controller from './controller';\nimport * as defaultHooks from './default-hooks';\n\nconst hooksKey = 'widget-bb-action-recipes-ng:hooks';\n\nexport default angular\n  .module('widget-bb-action-recipes-ng', [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelActionRecipesModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('ActionRecipesController', [\n    // dependencies to inject\n    widgetKey,\n    eventBusKey,\n    modelActionRecipesKey,\n    hooksKey,\n\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, bbIntentKey, (bus, widget, bbIntent) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n    bbIntent.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 30\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 31\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 32\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_33__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 33\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-action-recipes-ng\"\n// module id = 34\n// module chunks = 2","import { View, labels, httpErrorMessages, Event } from './constants';\nimport { RecipeModel, RecipeAction } from './mappings';\n\nexport default function ActionRecipesController(widget, bus, model, hooks) {\n  /**\n   * @name ActionRecipesController\n   * @ngkey ActionRecipesController\n   * @type {object}\n   * @description Action recipes widget controller\n   */\n  const $ctrl = this;\n\n  const createRecipeFilter = (specification, apiTrigger, accounts) => {\n    const filter = hooks.createRecipeFilter(specification, apiTrigger, accounts);\n\n    if (!filter) {\n      throw new Error(`No filter mapping defined for specification type '${specification.type}'.` +\n        'Make sure you have extended \"selectRecipeFilter\" hook to support this specification type');\n    }\n\n    if (!(filter.toApiModel instanceof Function)) {\n      throw new Error(`Filter mapping for specification type '${specification.type}' does not ` +\n        'have method \"toApiModel\". This method must be present.');\n    }\n\n    return filter;\n  };\n\n  const convertToRecipeModel = (apiRecipe, specifications, accounts) => {\n    const specification = specifications.find(spec => spec.id === apiRecipe.specificationId);\n    const action = new RecipeAction(apiRecipe.actions, hooks.getAvailableChannels(), true);\n    return new RecipeModel(apiRecipe,\n                           specification,\n                           createRecipeFilter(specification, apiRecipe.trigger, accounts),\n                           action);\n  };\n\n  const onLoad = () => {\n    $ctrl.state.loading = true;\n    model\n      .load()\n      .then(res => {\n        $ctrl.state.specifications = res.specifications;\n        $ctrl.state.accounts = res.accounts;\n        $ctrl.state.recipes =\n          res.recipes\n            .map(recipe => convertToRecipeModel(recipe, res.specifications, res.accounts));\n\n        $ctrl.state.loading = false;\n      }).catch((err) => {\n        $ctrl.state.error = httpErrorMessages[err.code];\n        $ctrl.state.loading = false;\n      });\n  };\n\n  /**\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name ActionRecipesController#$onInit\n   * @type {function}\n   * @return {void}\n   */\n  const $onInit = () => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n    onLoad();\n  };\n\n  /**\n   * @description\n   * Returns current view, used by the template to identify in\n   * which state the widget is in\n   *\n   * @name currentView\n   * @type {function}\n   * @return {View}\n   */\n  const currentView = () => $ctrl.state.view;\n\n  /**\n   * @description\n   * Used to switch the view in the template\n\n   * @name navigateTo\n   * @param {View} view New view to switch to\n   * @type {function}\n   * @return {void}\n   */\n  const navigateTo = (view) => {\n    $ctrl.state.view = view;\n  };\n\n  /**\n   * @description\n   * Creates a new action recipe from the given specification.\n   * - Stores composed action object in state.\n   * - Changes view to recipe view\n   *\n   * @name onCreate\n   * @param {Specification} sepcification Action specification which is used\n   * as a template to create new action recipe\n   * @type {function}\n   * @return {void}\n   */\n  const onCreate = (specification) => {\n    $ctrl.state.newAction =\n      new RecipeModel(\n        null,\n        specification,\n        createRecipeFilter(specification),\n        new RecipeAction(specification.actions, hooks.getAvailableChannels(), false));\n    $ctrl.navigateTo(View.CREATE);\n  };\n\n  /**\n   * @description\n   * Starts a process to edit a given recipe\n   *\n   * @name onEdit\n   * @param {Recipe} recipe recipe to be editted\n   * @type {function}\n   * @return {void}\n   */\n  const onEdit = (recipe) => {\n    $ctrl.state.newAction = recipe;\n    $ctrl.navigateTo(View.EDIT);\n  };\n\n  /**\n   * @description\n   * Saves given action recipe. Additionally stores new action in state,\n   * recipe list and changes the view to list\n   *\n   * @name onSave\n   * @param {Recipe} recipe Action recipe to be saved\n   * @type {function}\n   * @return {void}\n   */\n  const onSave = (recipe) => {\n    if (recipe.id) {\n      model.update(recipe.toApiModel()).then(() => {\n        $ctrl.onCreateDismiss();\n      });\n    } else {\n      model.save(recipe.toApiModel()).then(apiRecipe => {\n        $ctrl.state.recipes = [Object.assign(recipe, { id: apiRecipe.id }), ...$ctrl.state.recipes];\n        $ctrl.onCreateDismiss();\n      });\n    }\n  };\n\n  /**\n   * @description\n   * Saves given action recipe. Additionally stores new action in state,\n   * recipe list and changes the view to list\n   *\n   * @name onSave\n   * @param {Recipe} recipe Action recipe to be saved\n   * @type {function}\n   * @return {void}\n   */\n  const onRemove = (recipe) => {\n    model.remove(recipe).then(() => {\n      $ctrl.state.recipes.splice($ctrl.state.recipes.indexOf(recipe), 1);\n      $ctrl.onCreateDismiss();\n    });\n  };\n\n\n  /**\n   * @description\n   * Dismiss action recipe creation.\n   * - Clears action being created from controller state\n   * - Changes view to list\n   *\n   * @name onCreateDismiss\n   * @type {function}\n   * @return {void}\n   */\n  const onCreateDismiss = () => {\n    $ctrl.navigateTo(View.LIST);\n    $ctrl.state.newAction = null;\n  };\n\n /**\n  * @description\n  * Activates given action recipe.\n  * If activation fails, 'active' property of given recipe is set to false.\n  *\n  * @name onActivate\n  * @type {Function}\n  * @param {RecipeModel} recipe to activate\n  * @return {Promise}\n  * @fires bb.event.actionrecipe.activate.failed\n  */\n  const onActivate = recipe => {\n    Object.assign(recipe, { changingStatus: true });\n    return model\n      .activate(recipe)\n      .catch(() => {\n        Object.assign(recipe, { active: false });\n        bus.publish(Event.ACTION_RECIPE_ACTIVATION_FAILED, recipe);\n      })\n      .then(() => Object.assign(recipe, { changingStatus: false }));\n  };\n\n /**\n  * @description\n  * Deactivates given action recipe.\n  * If deactivation fails, 'active' property of given recipe is set to true.\n  *\n  * @name onDeactivate\n  * @type {Function}\n  * @param {RecipeModel} recipe to deactivate\n  * @return {Promise}\n  * @fires bb.event.actionrecipe.deactivate.failed\n  */\n  const onDeactivate = recipe => {\n    Object.assign(recipe, { changingStatus: true });\n    return model\n      .deactivate(recipe)\n      .catch(() => {\n        Object.assign(recipe, { active: true });\n        bus.publish(Event.ACTION_RECIPE_DEACTIVATION_FAILED, recipe);\n      })\n      .then(() => Object.assign(recipe, { changingStatus: false }));\n  };\n\n  Object.assign($ctrl, {\n    /**\n     *  Holds static data of controller.\n     *  @name ActionRecipesController#statics\n     *  @type {ActionRecipesControllerStatics}\n     */\n    static: {\n      labels,\n      View,\n    },\n\n    /**\n     * @description Keeps state related data\n     * @name ActionRecipesController#state\n     * @type {ActionRecipesControllerState}\n     */\n    state: {\n      loading: false,\n      view: View.LIST,\n      error: null,\n      recipes: [],\n      specifications: [],\n      accounts: [],\n      newAction: null,\n    },\n\n    $onInit,\n    navigateTo,\n    currentView,\n    onCreate,\n    onCreateDismiss,\n    onEdit,\n    onSave,\n    onRemove,\n    onActivate,\n    onDeactivate,\n  });\n}\n\n/**\n * @typedef {Object} ActionRecipesControllerStatics\n * @property {Views} views views supported by controller\n */\n\n/**\n * @typedef {Object} ActionRecipesControllerState State of the controller\n * @property {boolean} loading loading indicator.\n * @property {View} view tracks the view the user is in\n * @property {Object} error http error code, if any\n * @property {Array<Recipe>} recipes array of users recipes\n * @property {Array<Specification>} specifications array of available action specifications\n * @property {Array<Account>} accounts array of users accounts\n * @property {Recipe} newAction object used to hold recipe data when new recipe\n * is being created, if any\n */\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/controller.js","import { E_AUTH, E_CONNECTIVITY, E_USER, E_UNEXPECTED } from 'lib-bb-model-errors';\n\n/**\n * @description\n * Recipe data to labels mapper\n *\n * @name\n * @type {object}\n */\nexport const labels = {\n  recipeType: {\n    newTransaction: 'label.list.recipe.type.newTransaction',\n  },\n  condition: {\n    lt: 'label.list.recipe.condition.less',\n    gt: 'label.list.recipe.condition.more',\n    eq: 'label.list.recipe.condition.equal',\n    gte: 'label.list.recipe.condition.moreOrEqual',\n    lte: 'label.list.recipe.condition.lessOrEqual',\n  },\n};\n\n/**\n * @description\n * Available views for the widget\n *\n * @name View\n * @type {object}\n */\nexport const View = {\n  LIST: 'list',\n  SPECIFICATIONS: 'select-specification',\n  CREATE: 'create-recipe',\n  EDIT: 'edit-recipe',\n};\n\n/**\n * @description\n * Http error codes. Used to identify what error has occured\n *\n * @name httpErrorMessages\n * @type {object}\n */\nexport const httpErrorMessages = {\n  [E_AUTH]: 'error.auth',\n  [E_CONNECTIVITY]: 'error.connectivity',\n  [E_USER]: 'error.user',\n  [E_UNEXPECTED]: 'error.unexpected',\n};\n\n\nexport const Event = {\n  /**\n   * @event bb.event.actionrecipe.activate.failed\n   * @description Event fired when activation of action recipe has failed\n   * @type {string}\n   */\n  ACTION_RECIPE_ACTIVATION_FAILED: 'bb.event.actionrecipe.activate.failed',\n  /**\n   * @event bb.event.actionrecipe.deactivate.failed\n   * @description Event fired when deactivation of action recipe has failed\n   * @type {string}\n   */\n  ACTION_RECIPE_DEACTIVATION_FAILED: 'bb.event.actionrecipe.deactivate.failed',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/constants.js","export class RecipeModel {\n  constructor(o, specification, filter, actions) {\n    this.id = o ? o.id : null;\n    this.active = o ? o.active : true;\n    this.specificationId = o ? o.specificationId : specification.id;\n    this.specification = specification;\n    this.filter = filter;\n    this.actions = actions;\n  }\n\n  toApiModel() {\n    return {\n      id: this.id,\n      name: this.specification.name,\n      active: this.active,\n      specificationId: this.specificationId,\n      trigger: this.filter.toApiModel(),\n      actions: this.actions.toApiModel(),\n    };\n  }\n}\n\nexport class RecipeAction {\n  constructor(actions, channels, defaultValue) {\n    this.channelsConfig = channels;\n    Object.keys(channels).forEach(channelKey => {\n      this[channelKey] = this.parseAction(actions, channels[channelKey], defaultValue);\n    });\n  }\n\n  /**\n   * Constructs individual channel object\n   * @inner\n   */\n  parseAction(actions, channel, defaultValue) {\n    const action = actions.find(item => item.type === channel);\n    if (action) {\n      return {\n        type: action.type,\n        value: defaultValue,\n      };\n    }\n    return null;\n  }\n\n  /*\n   * Checks if at least one action is selected\n   */\n  isSelected() {\n    return Object.keys(this.channelsConfig).some(key => this[key] && this[key].value);\n  }\n\n  toApiModel() {\n    const actions = [];\n    Object.keys(this.channelsConfig).forEach(key => {\n      if (this[key] && this[key].value) {\n        actions.push({ type: this[key].type });\n      }\n    });\n    return actions;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/mappings.js","\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-action-recipes-ng\n */\n\n/**\n * @name Hooks#createRecipeFilter\n * @type {function}\n * @description\n * This hook function should return a model of recipe's filter. The returned model is likely to be\n * different for each specification type. The returned object will be assigned to 'filter' field\n * of the recipe and it will be accessible from the templates.\n * The returned object must implement 'toApiModel()' method. This method must convert the filter\n * back to API representation of a trigger (i.e. 'selectors' and 'filter' fields must be present).\n * Here's an example of an object returned by 'toApiModel()':\n * {\n *   selectors: [{\n *     path: 'accountId',\n *     value: '123456789'\n *   }],\n *   filter: {\n *     gte: [{ 'pathValue': 'transaction.amount' }, 1000]\n *   }\n * }\n *\n * @param {object} specification specification used by the recipe\n * @param {object} trigger trigger in backen format from which filter model should be created\n * @param {array} accounts list of accounts which are available for the user\n * @returns {object} view model of recipe filter\n */\nexport function createRecipeFilter() {\n  return null;\n}\n\n/**\n * @name Hooks#getAvailableChannels\n * @type {function}\n * @description\n * This hook returns an object which contains mapping from template channel to backend channel\n * code. Only the channels defined here will be mapped when loading or sending data to/from backend.\n *\n * @returns {object} mapping from template channel name to backend channel name\n */\nexport function getAvailableChannels() {\n  return {\n    browser: 'notification',\n    sms: 'sms',\n    email: 'email',\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-action-recipes-ng/scripts/default-hooks.js"],"sourceRoot":""}
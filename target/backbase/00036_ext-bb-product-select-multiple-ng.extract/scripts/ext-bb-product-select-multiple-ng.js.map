{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap b6e6496f5522437c4c2f?95fa**","webpack:///./ext-bb-product-select-multiple-ng/model.xml","webpack:///external \"vendor-bb-angular-ng-aria\"?9d0e*","webpack:///external \"ui-bb-i18n-ng\"?dc01**","webpack:///./ext-bb-product-select-multiple-ng/scripts/index.js","webpack:///external \"ui-bb-account-selector\"","webpack:///./ext-bb-product-select-multiple-ng/scripts/hooks.js","webpack:///./ext-bb-product-select-multiple-ng/scripts/product-kind-view.js"],"names":["dependencyKeys","hooks","helpers","events","processKinds","processProductsSelected","products","map","maskCardNumber","suffix","defaultViewModel","product","id","name","viewModelFactories","currentAccounts","identifier","IBAN","amount","bookedBalance","currency","termDeposits","BBAN","principalAmount","savingsAccounts","creditCards","cardNumberSuffix","debitCards","loans","investmentAccounts","currentInvestmentValue","productKindView","Object","assign","kind","kinds","reduce","memo","concat","length"],"mappings":"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","file":"ext-bb-product-select-multiple-ng/scripts/ext-bb-product-select-multiple-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-account-selector\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-product-select-multiple-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-i18n-ng\", \"ui-bb-account-selector\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-product-select-multiple-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-account-selector\"));\n\telse\n\t\troot[\"ext-bb-product-select-multiple-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-account-selector\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_19__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b6e6496f5522437c4c2f","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-product-select-multiple-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1 2 3 5 12","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 8\n// module chunks = 0 1 2 4 5 6 7 8 9 10 11 12","/**\n * @module ext-bb-product-select-multiple-ng\n *\n * @description\n * Product select multiple extension for product summary widget.\n *\n * @requires ui-bb-account-selector\n *\n * @example\n * <!-- payment widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *  <value type=\"string\">ext-bb-product-select-multiple-ng</value>\n * </property>\n */\n\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport i18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbAccountSelector from 'ui-bb-account-selector';\nimport extHooks from './hooks';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  i18nNgKey,\n  uiBbAccountSelector,\n];\n\nexport const hooks = extHooks;\nexport const helpers = {};\nexport const events = {};\n\n/**\n * @typedef {Object} ProductKindView\n * @property {string} id The Product Kind identifier\n * @property {string} name The name of the Kind, suitable for display to users\n * @property {Array.<ProductView>} products The products of this Kind\n */\n\n/**\n * @typedef {Object} ProductView\n * @property {string} id The internal Product Identifier\n * @property {string} name The product's name, suitable for display to users\n * @property {?string} identifier The identifier of the Product from the user's perspective\n * @property {?string} amount The most important associated value to be displayed\n * @property {?string} currency ISO currency code\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-product-select-multiple-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-account-selector\"\n// module id = 19\n// module chunks = 2 3 10","import processKinds, { productKindView } from './product-kind-view';\n\n/**\n * @name Hooks\n * @type {object}\n *\n * @description\n * Hooks for widget-bb-product-summary-ng\n */\nexport default {\n  /**\n   * @name processKinds\n   * @description\n   * Hook for process products\n   *\n   * Make flat list\n   *\n   * Map to view model\n   *\n   * @type {function}\n   * @param {array} product The source Product from the widget controller\n   * @returns {array<ProductView>}\n   */\n  processKinds,\n  /**\n   * @name processProductSelected\n   * @type {function}\n   *\n   * @description\n   * Hook for processing selected products after selection update\n   * Prepares the fields of the selected products into a form ready for display to the User\n   *\n   * @param {object} product Product to process\n   * @returns {object}\n   */\n  processProductsSelected: (products) => products.map(productKindView),\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-product-select-multiple-ng/scripts/hooks.js","const maskCardNumber = (suffix) => suffix && `XXXX-XXXX-XXXX-${suffix}`;\n\nconst defaultViewModel = (product) => ({\n  id: product.id,\n  name: product.name,\n});\n\nconst viewModelFactories = {\n  currentAccounts: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: product.IBAN,\n    amount: product.bookedBalance,\n    currency: product.currency,\n  }),\n\n  termDeposits: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: product.BBAN,\n    amount: product.principalAmount,\n    currency: product.currency,\n  }),\n\n  savingsAccounts: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: product.BBAN,\n    amount: product.bookedBalance,\n    currency: product.currency,\n  }),\n\n  creditCards: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: maskCardNumber(product.cardNumberSuffix),\n    amount: product.bookedBalance,\n    currency: product.currency,\n  }),\n\n  debitCards: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: maskCardNumber(product.cardNumberSuffix),\n  }),\n\n  loans: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: product.BBAN,\n    amount: product.bookedBalance,\n    currency: product.currency,\n  }),\n\n  investmentAccounts: (product) => ({\n    id: product.id,\n    name: product.name,\n    identifier: product.BBAN,\n    amount: product.currentInvestmentValue,\n    currency: product.currency,\n  }),\n};\n\n/**\n * @description\n * Prepare the fields of a Product into a form ready for display to the User\n *\n * @inner\n * @type {function}\n * @param {object} product The source Product from the API\n * @returns {ProductView}\n */\nexport const productKindView = (product) =>\n  Object.assign(product,\n    viewModelFactories[product.kind](product) || defaultViewModel(product)\n  );\n\n/**\n * @description\n * Prepare the fields of a Product Kind into a form ready for display to the User\n *\n * @private\n * @type {function}\n * @param {array<object>} kinds The source ProductKinds from the API\n * @returns {array<ProductKindView>}\n */\nexport default (kinds) =>\n  kinds\n    .reduce((memo, { products }) =>\n      memo.concat(\n        products && products.length ?\n        products.map(productKindView) :\n        []\n      ),\n    []);\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-product-select-multiple-ng/scripts/product-kind-view.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///webpack/bootstrap 1dcb9870b042a7feed37?d604*****","webpack:///./ui-bb-conversation-view-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./ui-bb-conversation-view-ng/scripts/index.js","webpack:///external \"vendor-bb-angular-sanitize\"","webpack:///external \"ui-bb-rich-text-editor-ng\"","webpack:///./ui-bb-conversation-view-ng/scripts/component.js","webpack:///./ui-bb-conversation-view-ng/scripts/controller.js"],"names":["module","component","name","bindings","conversation","messages","topics","draft","onClose","onReplySend","labels","controller","transclude","template","$ctrl","$onInit","isLoading","length","getTopicTitle","category","find","topic","code","close","sendReply","conversationId","id","Object","assign"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,iD;;;;;;;;;;;;;ACGA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAPA;;;mBASe,0BAAQA,MAAR,CAAe,4BAAf,EAA6C,mEAA7C,EAGdC,SAHc,CAGJ,wBAHI,uBAIdC,I;;;;;;;ACbD,iD;;;;;;;ACAA,iD;;;;;;;;;;;;;ACAA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,KAAMD,YAAY;AAChBE,aAAU;AACRC,mBAAc,GADN;AAERC,eAAU,GAFF;AAGRC,aAAQ,GAHA;AAIRC,YAAO,GAJC;AAKRC,cAAS,GALD;AAMRC,kBAAa,GANL;AAORC,aAAQ;AAPA,IADM;AAUhBC,mCAVgB;AAWhBC,eAAY,IAXI;AAYhBC;AAZgB,EAAlB;;mBA8EeZ,S;;AAEf;;;;;;;;;;;;;;;;;mBC9GwBU,U;AAAT,UAASA,UAAT,GAAsB;AACnC,OAAMG,QAAQ,IAAd;;AAEA,YAASC,OAAT,GAAmB,CAClB;;AAED,YAASC,SAAT,GAAqB;AACnB,YAAO,CAACF,MAAMT,QAAN,IAAkB,IAAlB,IAA0BS,MAAMT,QAAN,CAAeY,MAAf,KAA0B,CAArD,KACDH,MAAMR,MAAN,IAAgB,IADtB;AAED;;AAED,YAASY,aAAT,GAAyB;AACvB,SAAMC,WAAW,CAACL,MAAMV,YAAN,IAAsB,EAAvB,EAA2Be,QAA5C;AACA,YAAO,CAAC,CAACL,MAAMR,MAAN,IAAgB,EAAjB,EACLc,IADK,CACA;AAAA,cAASC,MAAMC,IAAN,KAAeH,QAAxB;AAAA,MADA,KACqC,EADtC,EAEJjB,IAFI,IAEIiB,QAFX;AAGD;;AAED,YAASI,KAAT,GAAiB;AACfT,WAAMN,OAAN;AACD;;AAED,YAASgB,SAAT,CAAmBjB,KAAnB,EAA0B;AACxB,YAAOO,MAAML,WAAN,CAAkB;AACvBgB,uBAAgBX,MAAMV,YAAN,CAAmBsB,EADZ;AAEvBnB,cAAOoB,OAAOC,MAAP,CAAc,EAAd,EAAkBrB,KAAlB;AAFgB,MAAlB,CAAP;AAID;;AAEDoB,UAAOC,MAAP,CAAc,IAAd,EAAoB;AAClBb,qBADkB;AAElBC,yBAFkB;AAGlBE,iCAHkB;AAIlBK,iBAJkB;AAKlBC;AALkB,IAApB;AAOD,E","file":"ui-bb-conversation-view-ng/scripts/ui-bb-conversation-view-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-rich-text-editor-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-conversation-view-ng\", [\"vendor-bb-angular\", \"vendor-bb-angular-sanitize\", \"ui-bb-rich-text-editor-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-conversation-view-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"vendor-bb-angular-sanitize\"), require(\"ui-bb-rich-text-editor-ng\"));\n\telse\n\t\troot[\"ui-bb-conversation-view-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"vendor-bb-angular-sanitize\"], root[\"ui-bb-rich-text-editor-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_38__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1dcb9870b042a7feed37","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-conversation-view-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 28\n// module chunks = 4 5 6 7 8 9","/**\n * @module ui-bb-conversation-view-ng\n */\nimport angular from 'vendor-bb-angular';\nimport ngSanitizeKey from 'vendor-bb-angular-sanitize';\nimport uiBbRichTextEditorNg from 'ui-bb-rich-text-editor-ng';\n\nimport component from './component';\n\nexport default angular.module('ui-bb-conversation-view-ng', [\n  ngSanitizeKey, uiBbRichTextEditorNg,\n])\n.component('uiBbConversationViewNg', component)\n.name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-conversation-view-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-sanitize\"\n// module id = 37\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-rich-text-editor-ng\"\n// module id = 38\n// module chunks = 6 7","import controller from './controller';\n\n/**\n * @name uiBbConversationViewNg\n * @type {object}\n * @description\n * Conversation view directive which can be used to display a list of messages in conversation.\n *\n * @property {object} conversation conversation to show\n * @property {object} messages messages belonging to the conversation.\n * @property {Array<Topic>} list of topics\n * @property {object} draft optional draft object to be displayed in response field\n * @property {function} on-close function to be called when the view is closed\n * @property {function} on-reply-send function to be called to send a response draft\n * @example\n *\n * <ui-bb-conversation-view-ng\n *   data-on-click=\"$conversationViewCtrl.viewConversation(conversation)\"\n *   data-conversation=\"$conversationViewCtrl.conversation\"\n *   data-messages=\"$conversationViewCtrl.messages\"\n *   data-topics=\"$ctrl.topics\"\n *   data-draft=\"$conversationViewCtrl.draft\"\n *   data-on-close=\"$conversationViewCtrl.close()\"\n *   data-on-reply-send=\"$conversationViewCtrl.sendReply(draft)\"\n *   data-labels=\"{\n *     labelClose: ('ui-bb-conversation-view-ng.label.close' | i18n),\n *     labelSend: ('ui-bb-conversation-view-ng.label.send' | i18n),\n *   }\"></ui-bb-conversation-view-ng>\n *\n */\nconst component = {\n  bindings: {\n    conversation: '<',\n    messages: '<',\n    topics: '<',\n    draft: '<',\n    onClose: '&',\n    onReplySend: '&',\n    labels: '<',\n  },\n  controller,\n  transclude: true,\n  template: `\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading container-fluid\">\n        <div class=\"row\">\n          <div class=\"col-sm-8 col-xs-5 conversation-info\">\n            <span class=\"list-group-item-heading subject\">{{ $ctrl.conversation.subject }}</span>\n          </div>\n          <div class=\"col-sm-2 col-xs-2 category\">\n            <span class=\"label label-default\" data-ng-class=\"{{ $ctrl.conversation.category }}\">\n              {{ $ctrl.getTopicTitle() }}\n            </span>\n          </div>\n          <div class=\"col-sm-2 col-xs-5 date text-right\">\n            {{ $ctrl.conversation.timestamp | date: 'shortDate' }}\n          </div>\n        </div>\n      </div>\n\n      <ul class=\"list-group\" data-ng-if=\"!$ctrl.isLoading()\">\n        <li class=\"list-group-item\" data-ng-repeat=\"$message in $ctrl.messages\">\n          <b>{{ $message.senderName }}</b><br/>\n          <div class=\"message-header\">\n            {{ $message.deliveredOn | date: 'shortDate' }}\n            <div class=\"pull-right\">\n              <i class=\"fa fa-clock-o\" aria-hidden=\"true\"></i>\n              {{ $message.deliveredOn | date: 'shortTime' }}\n            </div>\n          </div>\n          <div class=\"message-body\">\n            <div data-ng-bind-html=\"$message.body\"></div>\n          </div>\n        </li>\n      </ul>\n\n      <div class=\"loading-panel text-center\" data-ng-if=\"$ctrl.isLoading()\">\n        <div class=\"h4\" data-i18n-key=\"label.message.loading\"></div>\n      </div>\n\n      <div class=\"panel-footer\" data-ng-if=\"!$ctrl.isLoading()\">\n        <form name=\"replyMessageForm\">\n          <ui-bb-rich-text-editor-ng\n            class=\"form-control\"\n            data-ng-model=\"$ctrl.draft.body\">\n          </ui-bb-rich-text-editor-ng>\n        </form>\n        <p>\n          <div class=\"btn-group\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-default\" data-ng-click=\"$ctrl.close()\"\n              aria-label=\"{{ $ctrl.labels.labelClose }}\">\n              <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n            </button>\n          </div>\n          <div class=\"pull-right\">\n            <button type=\"submit\" class=\"pull-left btn btn-primary\"\n              data-ng-disabled=\"!replyMessageForm.$valid\"\n              data-ng-click=\"$ctrl.sendReply($ctrl.draft)\"\n              data-i18n-key=\"label.send\"\n              aria-label=\"{{ $ctrl.labels.labelSend }}\">\n            </button>\n          </div>\n        </p>\n      </div>\n    </div>\n  `,\n};\n\nexport default component;\n\n/**\n * @typedef {Object} Topic\n * @property {string} id\n * @property {string} code\n * @property {string} name\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-conversation-view-ng/scripts/component.js","export default function controller() {\n  const $ctrl = this;\n\n  function $onInit() {\n  }\n\n  function isLoading() {\n    return ($ctrl.messages == null || $ctrl.messages.length === 0)\n       && $ctrl.topics == null;\n  }\n\n  function getTopicTitle() {\n    const category = ($ctrl.conversation || {}).category;\n    return (($ctrl.topics || [])\n      .find(topic => topic.code === category) || {})\n      .name || category;\n  }\n\n  function close() {\n    $ctrl.onClose();\n  }\n\n  function sendReply(draft) {\n    return $ctrl.onReplySend({\n      conversationId: $ctrl.conversation.id,\n      draft: Object.assign({}, draft),\n    });\n  }\n\n  Object.assign(this, {\n    $onInit,\n    isLoading,\n    getTopicTitle,\n    close,\n    sendReply,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-conversation-view-ng/scripts/controller.js"],"sourceRoot":""}
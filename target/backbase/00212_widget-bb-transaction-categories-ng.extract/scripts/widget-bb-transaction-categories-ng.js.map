{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap 92a145f295b31f3f86be?9c80*","webpack:///./widget-bb-transaction-categories-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-model-errors\"?7567","webpack:///./widget-bb-transaction-categories-ng/scripts/index.js","webpack:///external \"lib-bb-widget-ng\"","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"model-bb-transaction-categories-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./widget-bb-transaction-categories-ng/scripts/controller.js","webpack:///./widget-bb-transaction-categories-ng/scripts/constants.js","webpack:///./widget-bb-transaction-categories-ng/scripts/default-hooks.js"],"names":["moduleKey","hooksKey","module","factory","controller","run","intents","init","name","TransactionCategoriesController","errorMessage","code","bus","hooks","widget","model","bbIntent","$ctrl","intentResolve","selectedTransaction","intentPreferencesArray","getStringPreference","INTENTS_LIST","split","$onInit","isLoading","getCategories","then","items","afterCategoriesLoad","loaded","publish","CXP_ITEM_LOADED","id","getId","BB_ITEM_LOADED","indexOf","SHOW_CATEGORIES","handle","passedData","respond","selectedTransactionObject","isModalOpen","catch","error","Object","assign","Event","Intent","PreferencesKeys","identity","a"],"mappings":"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","file":"widget-bb-transaction-categories-ng/scripts/widget-bb-transaction-categories-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-transaction-categories-ng\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-transaction-categories-ng\", [\"vendor-bb-angular\", \"lib-bb-model-errors\", \"lib-bb-widget-ng\", \"lib-bb-event-bus-ng\", \"lib-bb-widget-extension-ng\", \"model-bb-transaction-categories-ng\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-transaction-categories-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"model-bb-transaction-categories-ng\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"widget-bb-transaction-categories-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"model-bb-transaction-categories-ng\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_11__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 92a145f295b31f3f86be","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-transaction-categories-ng/model.xml\n// module id = 0\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 11\n// module chunks = 1 2","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 15\n// module chunks = 1 2","/**\n * @module widget-bb-transaction-categories-ng\n *\n * @description\n * Transaction categories\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport modelTransactionCategoriesModuleKey, {\n  modelTransactionCategoriesKey,\n} from 'model-bb-transaction-categories-ng';\n\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport Controller from './controller';\n\nimport defaultHooks from './default-hooks';\n\nconst moduleKey = 'widget-bb-transaction-categories-ng';\nconst hooksKey = `${moduleKey}:hooks`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    modelTransactionCategoriesModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .controller('TransactionCategoriesController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    widgetKey,\n    modelTransactionCategoriesKey,\n    bbIntentKey,\n    /* into */\n    Controller,\n  ])\n\n  // Initialize intent library\n  .run([bbIntentKey, (intents) => {\n    intents.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 18\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 19\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 20\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_21__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-transaction-categories-ng\"\n// module id = 21\n// module chunks = 2","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 22\n// module chunks = 2","/**\n * @module widget-bb-transaction-categories-ng\n * @name TransactionCategoriesController\n *\n * @description\n * Transaction categories\n */\n\nimport { E_AUTH, E_CONNECTIVITY } from 'lib-bb-model-errors';\nimport { Event, Intent, PreferencesKeys } from './constants';\n\nconst errorMessage = (code) => ({\n  [E_AUTH]: 'error.load.auth',\n  [E_CONNECTIVITY]: 'error.load.connectivity',\n}[code] || 'error.load.unexpected');\n\nexport default function TransactionCategoriesController(bus, hooks, widget, model, bbIntent) {\n  const $ctrl = this;\n  let intentResolve;\n  let selectedTransaction;\n  const intentPreferencesArray =\n    widget.getStringPreference(PreferencesKeys.INTENTS_LIST).split(',');\n\n  /**\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name TransactionCategoriesController#$onInit\n   * @type {function}\n   * @returns {void}\n   */\n  const $onInit = () => {\n    $ctrl.isLoading = true;\n\n    return model.getCategories()\n      .then(loaded => {\n        $ctrl.items = hooks.afterCategoriesLoad(loaded);\n      })\n      .then(() => {\n        $ctrl.isLoading = false;\n\n        bus.publish(Event.CXP_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n\n        bus.publish(Event.BB_ITEM_LOADED, {\n          id: widget.getId(),\n        });\n\n        if (intentPreferencesArray.indexOf(Intent.SHOW_CATEGORIES) > -1) {\n          bbIntent.handle(Intent.SHOW_CATEGORIES, (passedData, respond) => {\n            $ctrl.selectedTransaction = hooks.selectedTransactionObject(passedData);\n            $ctrl.isModalOpen = true;\n            $ctrl.intentResolve = respond;\n          });\n        }\n      })\n      .catch(error => {\n        $ctrl.error = errorMessage(error.code);\n        bus.publish('widget-bb-transaction-categories-ng.load.failed', { error });\n      });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processItems} hook.\n     * null if the items aren't loaded.\n     *\n     * @name TransactionCategoriesController#items\n     * @type {any}\n     */\n    items: null,\n\n    /**\n     * @description\n     * Loading status\n     *\n     * @name TransactionCategoriesController#isLoading\n     * @type {boolean}\n     */\n    isLoading: false,\n\n    /**\n     * @description\n     * The error encountered when attempting to fetch from the model\n     *\n     * @name TransactionCategoriesController#error\n     * @type {ModelError}\n     */\n    error: null,\n\n    intentResolve,\n\n    selectedTransaction,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/controller.js","/**\n * @name Event\n * @description\n * Widget events enum\n * @type {object}\n */\nexport const Event = {\n  CXP_ITEM_LOADED: 'cxp.item.loaded',\n  BB_ITEM_LOADED: 'bb.item.loaded',\n};\n\n/**\n * @name Intent\n * @description\n * Widget intent enum\n * @type {object}\n */\nexport const Intent = {\n  SHOW_CATEGORIES: 'intent.rb.categories.management.list.view',\n};\n\n/**\n * @name PreferencesKeys\n * @description\n * Preferences keys enum\n * @type {object}\n */\nexport const PreferencesKeys = {\n  INTENTS_LIST: 'intents',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/constants.js","const identity = a => a;\n\nexport default {\n  /**\n   * @name afterCategoriesLoad\n   * @type {function}\n   * @description\n   * Default hook for setting the passed items from the model\n   *\n   * @param {array} items\n   * @returns {array}\n   */\n  afterCategoriesLoad: identity,\n\n  /**\n   * @name selectedTransactionObject\n   * @type {function}\n   * @description\n   * Default hook for setting the passed items from the model\n   *\n   * @param {object} transaction\n   * @returns {object}\n   */\n  selectedTransactionObject: identity,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-transaction-categories-ng/scripts/default-hooks.js"],"sourceRoot":""}
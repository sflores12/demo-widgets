{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 8f94b648f5040b42cdf4?eff8****","webpack:///./ui-bb-maps-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01**","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./ui-bb-maps-ng/scripts/index.js","webpack:///./ui-bb-maps-ng/scripts/map-api.js","webpack:///./ui-bb-maps-ng/scripts/constants.js","webpack:///./ui-bb-maps-ng/scripts/map-view.js","webpack:///./ui-bb-maps-ng/scripts/list-view.js","webpack:///./ui-bb-maps-ng/scripts/map-search.js","webpack:///./ui-bb-maps-ng/scripts/maps-helpers.js"],"names":["mapsHelpersKey","moduleKey","module","factory","directive","name","Promise","mapsHelpers","scope","preferences","restrict","controller","ctrl","$scope","$maps","deferred","defer","setPreferences","cbFuncName","script","document","createElement","mapKey","KEY","url","API","window","google","maps","resolve","type","async","src","querySelector","appendChild","getMapsApi","promise","then","setApi","getPreferences","Preference","ZOOM","LAT","LNG","RADIUS","LIMIT","Events","places","require","transclude","template","searchMethod","mapSearch","link","element","attr","parentCtrl","initMap","mapEl","drawMap","setCurrentPosition","registerMapEvents","messages","listSearch","el","initList","listLimit","getListLimit","setPlaces","placesList","settingUpPromise","settingUp","all","discoverCurrentPosition","loadPlaces","data","calculateDistance","sortByDistance","catch","setupError","selectPlace","place","bindings","placeholder","ctrls","Object","assign","apiCtrl","gMapCtrl","placeListCtrl","mapsApi","autocomplete","Autocomplete","addListener","getPlace","geometry","map","centerMarker","centerCoords","markers","placesLoadFn","setupDeferred","populateMapOptions","LatLng","center","zoom","addInfoWindow","marker","text","infoWindow","InfoWindow","content","open","createMarkers","list","forEach","latitude","longitude","icon","position","lat","parseFloat","lng","Marker","push","addMarkersInfoWin","length","markerWrapper","address","addressLine1","postalCode","addressLine2","infoWin","addDistanceToCenter","distance","spherical","computeDistanceBetween","wrapperEl","mapOptions","mapTypeControlOptions","mapTypeIds","MapTypeId","ROADMAP","disableDefaultUI","zoomControl","Map","angular","navigator","geolocation","getCurrentPosition","coords","setCenter","path","SymbolPath","CIRCLE","scale","strokeColor","strokeWeight","reject","fn","setPlacesFn","item","itemPosition","sort","a","b","getListRadius","bounds","getBounds","getNorthEast","getSouthWest","params","getCenter","radius","Math","ceil","loadFn","prefs","location","setZoom"],"mappings":"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","file":"ui-bb-maps-ng/scripts/ui-bb-maps-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-maps-ng\", [\"ui-bb-i18n-ng\", \"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-maps-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"ui-bb-maps-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_19__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8f94b648f5040b42cdf4","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-maps-ng/model.xml\n// module id = 0\n// module chunks = 5","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 2\n// module chunks = 0 1 2 5","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 19\n// module chunks = 3 4 5 6","/**\n * @module ui-bb-maps-ng\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbMapsNg from 'ui-bb-maps-ng';\n *\n * export const dependencyKeys = [\n *   uiBbMapsNg,\n * ];\n *\n * // file: templates/template.ng.html\n * <g-map places=\"$ctrl.loadPlaces()\" preferences=\"$ctrl.getPlacesPreferences()\">\n *  {{ ::'places.message.loading' | i18n }}\n * </g-map>\n */\nimport angular from 'vendor-bb-angular';\nimport i18nNgKey from 'ui-bb-i18n-ng';\n\nimport mapApi from './map-api';\nimport mapView from './map-view';\nimport listView from './list-view';\nimport search from './map-search';\nimport mapsHelpers from './maps-helpers';\nconst mapsHelpersKey = 'ui-bb-maps-ng:maps-helpers';\n\nexport const moduleKey = 'ui-bb-maps-ng';\n\nexport default angular\n  .module(moduleKey, [i18nNgKey])\n  .factory(mapsHelpersKey, ['$q', mapsHelpers])\n  .directive('gMapApi', ['$q', mapsHelpersKey, mapApi])\n  .directive('gMap', [mapsHelpersKey, mapView])\n  .directive('gMapSearch', [search])\n  .directive('placeList', ['$q', mapsHelpersKey, listView])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/index.js","/* global google, document, window */\n/**\n * @name gMapApi\n * @type {function}\n *\n * @param {object} mapsHelpers\n * @param {Promise}\n *\n * @return {object}\n */\n\nimport { Preference } from './constants';\n\nconst directive = (Promise, mapsHelpers) => ({\n  scope: {\n    preferences: '&',\n  },\n  restrict: 'E',\n  controller: ['$scope', function ctrl($scope) {\n    let $maps;\n    const preferences = $scope.preferences() || {};\n    const deferred = Promise.defer();\n    mapsHelpers.setPreferences(preferences);\n\n    const cbFuncName = 'googleMapsAPILoad';\n    const script = document.createElement('script');\n    const mapKey = preferences[Preference.KEY];\n    const url = preferences[Preference.API];\n\n    // Ugly global function -- cannot be avoided...\n    window[cbFuncName] = () => {\n      $maps = google.maps;\n      deferred.resolve();\n      delete window[cbFuncName];\n    };\n\n    script.type = 'text/javascript';\n    script.async = 'true';\n    script.src = `${url}/js?libraries=geometry,places&key=${mapKey}&callback=${cbFuncName}`;\n    document.querySelector('head').appendChild(script);\n\n    this.getMapsApi = () => {\n      // quit if maps are already there\n      if ($maps) {\n        deferred.resolve();\n        return deferred.promise;\n      }\n\n      return deferred.promise.then(() => {\n        mapsHelpers.setApi($maps);\n\n        return $maps;\n      });\n    };\n\n    this.getPreferences = () => preferences;\n  }],\n});\n\nexport default directive;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/map-api.js","/**\n * Widget preferences enum\n * @type {object}\n */\nexport const Preference = {\n  KEY: 'apiKey',\n  API: 'mapApiUrl',\n  ZOOM: 'mapZoom',\n  LAT: 'latitude',\n  LNG: 'longitude',\n  RADIUS: 'placesFilterRadius',\n  LIMIT: 'limitList',\n};\n\nexport const Events = {\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/constants.js","/* global document */\n/**\n * @name gMap\n * @type {function}\n *\n * @description\n * Implements a component, which invokes\n * a map initialization process inside\n * an element, where it's applied.\n *\n * @param {object} mapsHelpers\n *\n * @return {object}\n */\nconst directive = (mapsHelpers) => ({\n  restrict: 'E',\n  scope: {\n    places: '&',\n  },\n  require: '^^gMapApi',\n  transclude: true,\n  template: `\n    <div class=\"col-lg-12\">\n      <div class=\"row\">\n        <ng-transclude></ng-transclude>\n        <div class=\"places-map\"></div>\n      </div>\n    </div>\n  `,\n  controller: function ctrl() {\n    this.searchMethod = mapsHelpers.mapSearch;\n  },\n  link: (scope, element, attr, parentCtrl) => {\n    const $scope = scope;\n\n    /**\n     * @name initMap\n     * @type {function}\n     *\n     * @description\n     * Init map with setting current position,\n     * adding places as markers and info wins.\n     *\n     * @param {HTMLElement} mapEl\n     *\n     * @returns {promise}\n     */\n    $scope.initMap = (mapEl) =>\n      parentCtrl.getMapsApi()\n        .then(() => mapsHelpers.drawMap(mapEl))\n        .then(() => mapsHelpers.setCurrentPosition())\n        .then(() => mapsHelpers.registerMapEvents($scope.places()));\n\n    $scope.initMap(element[0].querySelector('div.places-map'));\n  },\n});\n\nexport default directive;\n\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/map-view.js","/* global document */\n/**\n * @name placeList\n * @type {function}\n *\n * @description\n * Implements a component, which shows a list\n * of places with distances to current location\n *\n * @param {object} mapsHelpers\n *\n * @return {object}\n */\nconst directive = (Promise, mapsHelpers) => ({\n  restrict: 'E',\n  scope: {\n    places: '&',\n    messages: '<',\n  },\n  transclude: true,\n  template: `\n    <div class=\"places-list list-items-wrapper\">\n      <ng-transclude></ng-transclude>\n      <div\n        data-ng-if=\"placesList.length && !placesList[0].distance\"\n        class=\"alert alert-info text-center\"\n        data-ng-bind=\"messages.list\"\n      ></div>\n      <div\n        class=\"alert alert-info text-center\"\n        data-ng-if=\"!placesList.length\"\n        data-ng-bind=\"messages.empty\"\n      ></div>\n      <div\n        data-ng-if=\"setupError\"\n        class=\"alert alert-danger text-center\"\n        data-ng-bind=\"messages.error\"\n      ></div>\n      <div\n        data-ng-if=\"placesList.length\"\n        class=\"panel list-item list-item-min-height\"\n        data-ng-repeat=\"place in placesList | limitTo: listLimit\"\n        data-ng-click=\"selectPlace(place)\"\n      >\n        <div class=\"col-xs-12 col-sm-8\">\n          <div class=\"row\">\n            <div class=\"col-xs-12\">\n              <strong data-ng-bind=\"place.name\"></strong>\n            </div>\n            <div class=\"col-xs-12 place-address\">\n              <span data-ng-bind=\"place.address.addressLine1\"></span>\n              <span data-ng-bind=\"place.address.postalCode\"></span>\n              <span data-ng-if=\"place.address.country\">,\n                <span class=\"text-muted\" data-ng-bind=\"place.address.country\"></span>\n              </span>\n              <span data-ng-if=\"place.address.addressLine2 || place.address.addressLine3\">\n                <br>\n                <span data-ng-bind=\"place.address.addressLine2\"></span>\n                <span data-ng-bind=\"place.address.addressLine3\"></span>\n              </span>\n              <span class=\"text-primary visible-xs\" data-ng-if=\"place.distance\">\n                <br>\n                <span data-ng-bind=\"place.distance | number: 0\"></span>\n                <span> m</span>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div data-ng-if=\"place.distance\" class=\"col-sm-4 text-primary text-right hidden-xs\">\n          <span data-ng-bind=\"place.distance | number: 0\"></span>\n          <span> m</span>\n        </div>\n        <div class=\"clearfix\"></div>\n      </div>\n    </div>\n  `,\n  require: '^^gMapApi',\n  controller: function ctrl() {\n    this.searchMethod = mapsHelpers.listSearch;\n  },\n  link: (scope, el, attr, parentCtrl) => {\n    const $scope = scope;\n\n    /**\n     * @name initList\n     * @type {function}\n     *\n     * @description\n     * Init places list with getting current position,\n     * adding distance to current position.\n     *\n     * @returns {promise}\n     */\n    $scope.initList = () => {\n      $scope.listLimit = mapsHelpers.getListLimit();\n\n      $scope.setPlaces = (placesList) => {\n        $scope.placesList = placesList;\n      };\n\n      const settingUpPromise = mapsHelpers.settingUp($scope.places(), $scope.setPlaces);\n\n      return parentCtrl.getMapsApi()\n        .then(() => {\n          Promise.all([settingUpPromise, mapsHelpers.discoverCurrentPosition()])\n            .then(() => {\n              mapsHelpers.loadPlaces()\n                .then((data) => mapsHelpers.calculateDistance(data))\n                .then((data) => mapsHelpers.sortByDistance(data))\n                .then((data) => {\n                  $scope.placesList = data;\n                });\n            })\n            .catch(() => {\n              $scope.setupError = true;\n            });\n        });\n    };\n\n    $scope.selectPlace = (place) => {\n      mapsHelpers.mapSearch(place);\n    };\n\n    $scope.initList();\n  },\n});\n\nexport default directive;\n\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/list-view.js","/**\n * @name gMapSearch\n * @type {function}\n *\n * @description\n * Location search component\n *\n * @return {object}\n * @property {string} placeholder Placeholder text\n */\nconst directive = () => ({\n  restrict: 'E',\n  bindings: {\n    placeholder: '@',\n  },\n  template: `\n    <label class=\"show\">\n      <input type=\"text\" class=\"form-control g-map-address-search\" placeholder=\"{{placeholder}}\" />\n    </label>\n  `,\n  require: ['^^gMapApi', '^?^^gMap', '?^^placeList'],\n  link: (scope, el, attr, ctrls) => {\n    Object.assign(scope, { placeholder: attr.placeholder });\n\n    const apiCtrl = ctrls[0];\n    const gMapCtrl = ctrls[1];\n    const placeListCtrl = ctrls[2];\n    const searchMethod =\n      (gMapCtrl && gMapCtrl.searchMethod) || (placeListCtrl && placeListCtrl.searchMethod);\n\n    apiCtrl.getMapsApi()\n      .then((mapsApi) => {\n        const autocomplete =\n          new mapsApi.places.Autocomplete(el[0].querySelector('.g-map-address-search'));\n\n        autocomplete.addListener('place_changed', () => {\n          const place = autocomplete.getPlace();\n\n          if (place.geometry) {\n            searchMethod(place);\n          }\n        });\n      });\n  },\n});\n\nexport default directive;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/map-search.js","/* global google, document, window, navigator, angular*/\nimport { Preference } from './constants';\n\nexport default function (Promise) {\n  // Vars to be shared among map helpers\n  let $maps;\n  let map;\n  let centerMarker;\n  let centerCoords;\n  let preferences;\n  let markers;\n  let placesLoadFn;\n\n  // for list view\n  let setPlaces;\n  let setupDeferred;\n\n  /**\n   * @name populateMapOptions\n   * @type {function}\n   * @private\n   * @inner\n   *\n   * @description\n   * Populates map options object with values\n   *\n   * @returns {{center: {lat: number, lng: number}, zoom: number}}\n   */\n  function populateMapOptions() {\n    centerCoords = new $maps.LatLng(preferences[Preference.LAT], preferences[Preference.LNG]);\n    return {\n      center: centerCoords,\n      zoom: preferences[Preference.ZOOM] || 10,\n    };\n  }\n\n  /**\n   * @name addInfoWindow\n   * @type {function}\n   * @private\n   *\n   * @param {object} marker\n   * @param {string} text to be shown within a window\n   * @returns {object}\n   */\n  function addInfoWindow(marker, text) {\n    const infoWindow = new $maps.InfoWindow({\n      content: text || 'No text provided',\n    });\n\n    marker.addListener('click', () => infoWindow.open(map, marker));\n    return infoWindow;\n  }\n\n  /**\n   * @name createMarkers\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Create markers and add those to a list we will use later\n   *\n   * @param {array} list\n   * @returns {void}\n   */\n  function createMarkers(list) {\n    // remove all markers first\n    markers = [];\n    list.forEach((place) => {\n      const { latitude, longitude, icon } = place;\n      const position = { lat: parseFloat(latitude), lng: parseFloat(longitude) };\n      const marker = new $maps.Marker({\n        position,\n        map,\n        icon,\n      });\n      markers.push(Object.assign(marker, { place }));\n    });\n  }\n\n  /**\n   * @name addMarkersInfoWin\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Add name and address info windows to markers\n   *\n   * @returns {void}\n   */\n  function addMarkersInfoWin() {\n    if (markers.length < 1) return;\n\n    markers.forEach((marker) => {\n      const markerWrapper = marker;\n      const place = markerWrapper.place || {};\n      // TODO: info window template should be customizable\n      const content = `\n        <h4>${place.name}</h4>\n        <div>\n          ${place.address.addressLine1 || ''},\n          ${place.address.postalCode || ''}\n          ${place.address.addressLine2 || ''}\n        </div>\n      `;\n      markerWrapper.infoWin = addInfoWindow(markerWrapper, content);\n    });\n  }\n\n  /**\n   * @name addDistanceToCenter\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Add information about distance between current location\n   * and specific place (marker)\n   *\n   * @returns {void}\n   */\n  function addDistanceToCenter() {\n    if (markers.length > 0 && centerMarker) {\n      markers.forEach((marker) => {\n        const markerWrapper = marker;\n        markerWrapper.place.distance =\n          $maps.geometry\n            .spherical\n            .computeDistanceBetween(centerMarker.position, markerWrapper.position);\n      });\n    }\n  }\n\n  /**\n   * @name drawMap\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Draw map into a wrapper\n   *\n   * @param {string} mapWrapperIdentifier of map wrapper DOM el\n   * @param {function} getDoublePreference\n   *\n   * @returns {object}\n   */\n  function drawMap(wrapperEl) {\n    const mapOptions = Object.assign(populateMapOptions(), {\n      mapTypeControlOptions: {\n        mapTypeIds: [google.maps.MapTypeId.ROADMAP],\n      },\n      disableDefaultUI: true, // a way to quickly hide all controls\n      zoomControl: true, // allow zoom only\n    });\n    map = new $maps.Map(wrapperEl, mapOptions);\n    // save reference\n    angular.element(wrapperEl).data('map', map);\n    return map;\n  }\n\n  /**\n   * @name setCurrentPosition\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Set position based on geolocation (if allowed)\n   *\n   * @returns {object}\n   */\n  function setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        centerCoords = new $maps.LatLng(position.coords.latitude, position.coords.longitude);\n        map.setCenter(centerCoords);\n\n        // TODO: current position marker should be customizable\n        centerMarker = new $maps.Marker({\n          position: centerCoords,\n          icon: {\n            path: $maps.SymbolPath.CIRCLE,\n            scale: 5,\n            strokeColor: 'green',\n            strokeWeight: 5,\n          },\n          map,\n        });\n        addDistanceToCenter();\n      });\n    }\n    return map;\n  }\n\n  /**\n   * @name discoverCurrentPosition\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Returns position based on geolocation (if allowed)\n   *\n   * @return {void}\n   */\n  function discoverCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        centerCoords = new $maps.LatLng(position.coords.latitude, position.coords.longitude);\n        setupDeferred.resolve();\n      }, () => {\n        // User refused to use geolocation\n        centerCoords = new $maps.LatLng(preferences[Preference.LAT], preferences[Preference.LNG]);\n        setupDeferred.resolve();\n      });\n    } else {\n      setupDeferred.reject();\n    }\n  }\n\n  /**\n   * @name settingUp\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Returns promise of setting up current position\n   *\n   * @param {function} fn\n   * @param {function} setPlacesFn\n   *\n   * @return {promise}\n   */\n  function settingUp(fn, setPlacesFn) {\n    setPlaces = setPlacesFn;\n    placesLoadFn = fn;\n    setupDeferred = Promise.defer();\n\n    return setupDeferred.promise;\n  }\n\n  /**\n   * @name calculateDistance\n   * @type {function}\n   * @private\n   *\n   * @param {array} data list of places\n   *\n   * @return {Array}\n   */\n  function calculateDistance(data) {\n    if (!centerCoords || !data) return [];\n    data.forEach((place) => {\n      const item = place;\n      const itemPosition = new $maps.LatLng(place.latitude, place.longitude);\n      item.distance = $maps.geometry.spherical\n        .computeDistanceBetween(centerCoords, itemPosition);\n    });\n\n    return data;\n  }\n\n  /**\n   * @name sortByDistance\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Sorting places list by distance to current location\n   * (closest on top)\n   *\n   * @param {array} data list of places\n   *\n   * @return {Array}\n   */\n  function sortByDistance(data) {\n    if (!data) return [];\n    return data.sort((a, b) => a.distance - b.distance);\n  }\n\n  /**\n   * @name getListRadius\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Return radius preference\n   *\n   * @returns {number}\n   */\n  function getListRadius() {\n    return preferences[Preference.RADIUS];\n  }\n\n  /**\n   * @name getListLimit\n   * @type {function}\n   * @private\n   *\n   * @description\n   * Return preference related to list limit\n   *\n   * @returns {number}\n   */\n  function getListLimit() {\n    return preferences[Preference.LIMIT];\n  }\n\n  /**\n   * @name registerMapEvents\n   * @type {function}\n   * @private\n   * @param  {Function} fn Callback function\n   *\n   * @return {void}\n   */\n  function registerMapEvents(fn) {\n    // Idle event is fired when the map becomes idle after panning or zooming.\n    map.addListener('idle', () => {\n      const bounds = map.getBounds();\n      // distance in km\n      const distance = $maps.geometry.spherical\n            .computeDistanceBetween(bounds.getNorthEast(), bounds.getSouthWest()) / 1000;\n\n      const params = {\n        latitude: bounds.getCenter().lat(),\n        longitude: bounds.getCenter().lng(),\n        radius: Math.ceil(distance / 2),\n      };\n\n      const loadFn = fn(params)\n        .then((data) => {\n          if (data) {\n            createMarkers(data);\n            addMarkersInfoWin();\n          }\n          return data;\n        });\n\n      if (setPlaces) {\n        loadFn\n          .then((data) => calculateDistance(data))\n          .then((data) => sortByDistance(data))\n          .then((data) => setPlaces(data));\n      }\n    });\n  }\n\n  /**\n   * @name loadPlaces\n   * @type {function}\n   * @private\n   *\n   * @return {Promise}\n   */\n  function loadPlaces() {\n    const params = {\n      latitude: preferences[Preference.LAT],\n      longitude: preferences[Preference.LNG],\n      radius: preferences[Preference.RADIUS],\n    };\n\n    return placesLoadFn(params);\n  }\n\n  function setApi(mapsApi) {\n    $maps = mapsApi;\n  }\n\n  function setPreferences(prefs) {\n    preferences = prefs;\n  }\n\n  function listSearch(place) {\n    const params = {\n      latitude: place.geometry.location.lat(),\n      longitude: place.geometry.location.lng(),\n      radius: preferences[Preference.RADIUS],\n    };\n\n    // updates center coordinates, used to calculate distance\n    centerCoords = new $maps.LatLng(params.latitude, params.longitude);\n\n    if (map) {\n      map.setCenter(place.geometry.location);\n      // reset zoom to default value on each new search\n      map.setZoom(preferences[Preference.ZOOM]);\n    }\n\n    placesLoadFn(params)\n      .then((data) => calculateDistance(data))\n      .then((data) => sortByDistance(data))\n      .then((data) => setPlaces(data));\n  }\n\n  function mapSearch(place) {\n    const location = (place.geometry && place.geometry.location) ||\n            new $maps.LatLng(place.latitude, place.longitude);\n\n    if (map) {\n      map.setCenter(location);\n      // reset zoom to default value on each new search\n      map.setZoom(preferences[Preference.ZOOM]);\n    }\n  }\n\n  return {\n    drawMap,\n    setCurrentPosition,\n    discoverCurrentPosition,\n    settingUp,\n    calculateDistance,\n    sortByDistance,\n    getListRadius,\n    getListLimit,\n    registerMapEvents,\n    loadPlaces,\n    setApi,\n    setPreferences,\n    listSearch,\n    mapSearch,\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-maps-ng/scripts/maps-helpers.js"],"sourceRoot":""}
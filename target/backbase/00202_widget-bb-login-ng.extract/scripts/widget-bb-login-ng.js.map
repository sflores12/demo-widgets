{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*************","webpack:///webpack/bootstrap ed40b4c6a0ad86da1c64?6024*************","webpack:///./widget-bb-login-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*******","webpack:///external \"lib-bb-intent-ng\"?add1","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///./widget-bb-login-ng/scripts/index.js","webpack:///external \"model-bb-login-ng\"","webpack:///./widget-bb-login-ng/scripts/controller.js"],"names":["module","controller","run","intents","init","name","LoginController","model","widgetInstance","$ctrl","portal","window","b$","loginRedirectPage","getStringPreference","loginRedirectUrl","config","serverRoot","portalName","username","password","loginError","$onInit","login","isLoading","then","response","status","location","assign","catch","Object"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;ACAA,iD;;;;;;;ACAA,iD;;;;;;;;;;;;;ACMA;;;;AAEA;;;;AAIA;;;;AAEA;;;;AACA;;;;;;mBAEe,0BACZA,MADY,CACL,oBADK,EACiB,4EADjB,EAOZC,UAPY,CAOD,iBAPC,EAOkB;AAC7B;AAD6B;AAI7B;AAJ6B,sBAPlB;;AAeb;AAfa,EAgBZC,GAhBY,CAgBR,6BAAc,UAACC,OAAD,EAAa;AAC9BA,WAAQC,IAAR;AACD,EAFI,CAhBQ,EAoBZC,I,EArCH;;;;;;;;;;;;ACAA,iD;;;;;;;;;;;;mBCSwBC,e;AATxB;;AAEA;;;;;;;AAOe,UAASA,eAAT,CAAyBC,KAAzB,EAAgCC,cAAhC,EAAgD;AAC7D,OAAMC,QAAQ,IAAd;AACA,OAAMC,SAASC,OAAOC,EAAP,IAAaD,OAAOC,EAAP,CAAUF,MAAtC;;AAEA,OAAMG,oBAAoBL,eAAeM,mBAAf,CAAmC,mBAAnC,CAA1B;;AAEA,OAAMC,mBAAmBL,SACpBA,OAAOM,MAAP,CAAcC,UADM,SACQP,OAAOQ,UADf,SAC6BL,iBAD7B,GAEvBA,iBAFF;;AAIA,OAAMM,WAAW,EAAjB;AACA,OAAMC,WAAW,EAAjB;;AAEA,OAAMC,aAAa,KAAnB;;AAEA,OAAMC,UAAU,SAAVA,OAAU,GAAM,CAAG,CAAzB;;AAEA,OAAMC,QAAQ,SAARA,KAAQ,GAAM;AAClBd,WAAMe,SAAN,GAAkB,IAAlB;AACA,YAAOjB,MAAMgB,KAAN,CAAYd,MAAMU,QAAlB,EAA4BV,MAAMW,QAAlC,EACJK,IADI,CACC,UAACC,QAAD,EAAc;AAClBjB,aAAMe,SAAN,GAAkB,KAAlB;AACA,WAAIE,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BhB,gBAAOiB,QAAP,CAAgBC,MAAhB,CAAuBd,gBAAvB;AACD;AACF,MANI,EAMFe,KANE,CAMI,YAAM;AACbrB,aAAMe,SAAN,GAAkB,KAAlB;AACAf,aAAMY,UAAN,GAAmB,IAAnB;AACAZ,aAAMW,QAAN,GAAiB,EAAjB;AACD,MAVI,CAAP;AAYD,IAdD;;AAgBAW,UAAOF,MAAP,CAAcpB,KAAd,EAAqB;AACnB;;;;;;;;AAQAa,qBATmB;AAUnB;;;;;;;AAOAC,iBAjBmB;AAkBnB;;;;AAIAJ,uBAtBmB;AAuBnB;;;;AAIAC,uBA3BmB;AA4BnBC,2BA5BmB;AA6BnB;;;;;;;AAOAG,gBAAW;AApCQ,IAArB;AAsCD,E","file":"widget-bb-login-ng/scripts/widget-bb-login-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"), require(\"model-bb-login-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-login-ng\", [\"vendor-bb-angular\", \"lib-bb-intent-ng\", \"lib-bb-widget-ng\", \"model-bb-login-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-login-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-intent-ng\"), require(\"lib-bb-widget-ng\"), require(\"model-bb-login-ng\"));\n\telse\n\t\troot[\"widget-bb-login-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-intent-ng\"], root[\"lib-bb-widget-ng\"], root[\"model-bb-login-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_49__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ed40b4c6a0ad86da1c64","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-login-ng/model.xml\n// module id = 0\n// module chunks = 14","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0 7 8 9 10 11 12 13 14 15 17 18","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 40\n// module chunks = 12 14 17 18","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 41\n// module chunks = 12 13 14 15 17 18","/**\n * @module widget-bb-login-ng\n *\n * @description\n * Login widget\n */\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, {\n  widgetKey,\n} from 'lib-bb-widget-ng';\n\nimport bbIntentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport modelLoginModuleKey, { modelLoginKey } from 'model-bb-login-ng';\nimport Controller from './controller';\n\nexport default angular\n  .module('widget-bb-login-ng', [\n    modelLoginModuleKey,\n    widgetModuleKey,\n    bbIntentModuleKey,\n  ])\n\n  .controller('LoginController', [\n    // dependencies to inject\n    modelLoginKey,\n    widgetKey,\n    /* into */\n    Controller,\n  ])\n\n  // Initialize intent library\n  .run([bbIntentKey, (intents) => {\n    intents.init();\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-login-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_49__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-login-ng\"\n// module id = 49\n// module chunks = 14 17 18","/* global window */\n\n/**\n * @name LoginController\n * @type {object}\n *\n * @description\n * Login widget\n */\nexport default function LoginController(model, widgetInstance) {\n  const $ctrl = this;\n  const portal = window.b$ && window.b$.portal;\n\n  const loginRedirectPage = widgetInstance.getStringPreference('loginRedirectPage');\n\n  const loginRedirectUrl = portal ?\n    `${portal.config.serverRoot}/${portal.portalName}/${loginRedirectPage}` :\n    loginRedirectPage;\n\n  const username = '';\n  const password = '';\n\n  const loginError = false;\n\n  const $onInit = () => { };\n\n  const login = () => {\n    $ctrl.isLoading = true;\n    return model.login($ctrl.username, $ctrl.password)\n      .then((response) => {\n        $ctrl.isLoading = false;\n        if (response.status === 200) {\n          window.location.assign(loginRedirectUrl);\n        }\n      }).catch(() => {\n        $ctrl.isLoading = false;\n        $ctrl.loginError = true;\n        $ctrl.password = '';\n      }\n    );\n  };\n\n  Object.assign($ctrl, {\n    /**\n     * @description\n     * AngularJS Lifecycle hook used to initialize the controller\n     * @type {function}\n     *\n     * @name LoginController#$onInit\n     * @returns {void}\n     */\n    $onInit,\n    /**\n     * @description Login function\n     * @type {function}\n     *\n     * @name LoginController#login\n     * @returns {Promise}\n     */\n    login,\n    /**\n     * @name LoginController#username\n     * @type {string}\n     */\n    username,\n    /**\n     * @name LoginController#password\n     * @type {string}\n     */\n    password,\n    loginError,\n    /**\n     * @description\n     * Loading status\n     *\n     * @name isLoading\n     * @type {boolean}\n     */\n    isLoading: false,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-login-ng/scripts/controller.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ba9372d13c966203e28a","webpack:///./ext-bb-income-spending-analysis-category-ng/model.xml","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/index.js","webpack:///external \"vendor-bb-angular-ng-aria\"","webpack:///external \"ui-bb-i18n-ng\"","webpack:///external \"ui-bb-substitute-error-ng\"","webpack:///external \"ui-bb-format-amount\"","webpack:///external \"ui-bb-chartjs-chart-donut-ng\"","webpack:///external \"ui-bb-chartjs-chart-bar-ng\"","webpack:///external \"ui-bb-empty-state-ng\"","webpack:///external \"ui-bb-change-period-ng\"","webpack:///external \"vendor-bb-uib-buttons\"","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/hooks.js","webpack:///external \"lib-bb-styles\"","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/helpers.js","webpack:///./ext-bb-income-spending-analysis-category-ng/scripts/constants.js"],"names":["dependencyKeys","hooks","helpers","events","processAnalysisCategorySeries","series","data","colors","labels","forEach","categoryName","index","categoryClass","replace","toLowerCase","Object","assign","datasets","backgroundColor","borderWidth","totalPortion","analysisItems","items","map","item","portion","processTurnoverSeries","dataset","datasetColor","hoverBackgroundColor","reverse","original","updated","onTurnoversUpdate","startDate","Date","params","periodStartDate","setDate","intervalStartDay","toISOString","slice","processLoadError","parseStyle","selector","attr","parseFloat","getTooltipArrowInnerSize","getTooltipArrowOutterSize","getTooltipLineHeight","getAngleFromPortion","offset","Math","PI","calculatePosition","center","radius","xOffset","yOffset","angle","chartRadius","position","left","cos","top","sin","setTooltipPosition","element","tooltip","chart","circlePosition","additionalOffset","minimum","arrowOutSize","arrowBorder","clientWidth","clientHeight","style","outerRadius","categoryToIconClass","transactionCategory","getYAxisLabelPadding","axisY","getNewDate","newDate","getTime","getTimezoneOffset","populateSelectedSectorObject","$ctrl","activeSectorName","category","bookingDateGreaterThan","bookingDateLessThan","periodEndDate","productId","selectedProducts","id","context","i18nFilter","$filter","dateFilter","currencyFilter","getSymbol","code","getRule","symbol","isSpending","chartOptions","layout","padding","right","bottom","hover","mode","getTrendIconClass","trend","checkTrendValueChanged","abs","getTrendLabel","buildTooltipContent","trendClass","textClass","tooltipCategory","trendValue","totalAmount","amount","currencyCode","undefined","getNewSliceLabel","topHalf","wrapper","document","createElement","setAttribute","dataAttr","className","icon","amountEl","innerHTML","$compile","angular","contents","$rootScope","opacity","appendChild","onDonutChartSectorClickAnimation","chartInstance","event","defaultChartRadius","activeSectors","getElementsAtEvent","length","isActiveSectorSelected","update","render","name","label","selected","clearSliceLabels","container","querySelectorAll","remove","renderSliceLabels","canvas","parentNode","config","labelOffset","setTimeout","setTurnoversTooltipPosition","positionX","floor","caretX","width","positionY","caretY","max","periodStartLabelFormatter","date","periodEndLabelFormatter","setHours","customizeTooltip","dataPoints","arrowClass","customizeTurnoversTooltip","turnovers","dataKey","donutChartOptions","ctrl","isSpendingAnalysis","barChartOptions","scales","xAxes","ticks","fontColor","axisX","fontFamily","axisBase","yAxes","gridLines","display","drawBorder","tickMarkLength","min","maxTicksLimit","chartPlugins","afterInit","isInsideContainer","idPrefix","parent","getAttribute","indexOf","subscription","containerIdPrefix","bus","subscribe","sender","node","htmlNode","find","beforeEvent","type","onClickLayoutUpdate","afterEvent","afterDatasetsUpdate","onPeriodStartChange","newStartDate","onPeriodEndChange","newEndDate","updateAnalysisCategories","updatePeriod","monthsRange","setMonth","getMonth","updateTurnovers","isSeriesDataAvailable","getClickHandler","clickEvent","activeSector","setSelectedAnalysisItem","formatX","tick","formatY","balance","DEFAULT_TOOLTIP_SELECTOR","ARROW_INNER_CSS_SELECTOR","ARROW_OUTER_CSS_SELECTOR","BAR_CHART_CSS_SELECTORS","CHART_SLICE_LABEL","CHART_SECTOR_SHIFT_SIZE","MS_IN_MIN","RENDERING_ANIMATION_TIME","CHART_UPDATE_SUBSCRIPTIONS"],"mappings":"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","file":"ext-bb-income-spending-analysis-category-ng/scripts/ext-bb-income-spending-analysis-category-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-change-period-ng\"), require(\"vendor-bb-uib-buttons\"), require(\"lib-bb-styles\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bb-income-spending-analysis-category-ng\", [\"vendor-bb-angular-ng-aria\", \"ui-bb-i18n-ng\", \"ui-bb-substitute-error-ng\", \"ui-bb-format-amount\", \"ui-bb-chartjs-chart-donut-ng\", \"ui-bb-chartjs-chart-bar-ng\", \"ui-bb-empty-state-ng\", \"ui-bb-change-period-ng\", \"vendor-bb-uib-buttons\", \"lib-bb-styles\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bb-income-spending-analysis-category-ng\"] = factory(require(\"vendor-bb-angular-ng-aria\"), require(\"ui-bb-i18n-ng\"), require(\"ui-bb-substitute-error-ng\"), require(\"ui-bb-format-amount\"), require(\"ui-bb-chartjs-chart-donut-ng\"), require(\"ui-bb-chartjs-chart-bar-ng\"), require(\"ui-bb-empty-state-ng\"), require(\"ui-bb-change-period-ng\"), require(\"vendor-bb-uib-buttons\"), require(\"lib-bb-styles\"));\n\telse\n\t\troot[\"ext-bb-income-spending-analysis-category-ng\"] = factory(root[\"vendor-bb-angular-ng-aria\"], root[\"ui-bb-i18n-ng\"], root[\"ui-bb-substitute-error-ng\"], root[\"ui-bb-format-amount\"], root[\"ui-bb-chartjs-chart-donut-ng\"], root[\"ui-bb-chartjs-chart-bar-ng\"], root[\"ui-bb-empty-state-ng\"], root[\"ui-bb-change-period-ng\"], root[\"vendor-bb-uib-buttons\"], root[\"lib-bb-styles\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_12__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba9372d13c966203e28a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bb-income-spending-analysis-category-ng/model.xml\n// module id = 0\n// module chunks = 0","/**\n * @module ext-bb-income-spending-analysis-category-ng\n *\n * @description\n * Default extension for widget-bb-income-spending-analysis-category-ng\n *\n * @requires vendor-bb-angular-ng-aria\n * @requires ui-bb-i18n-ng\n * @requires ui-bb-substitute-error-ng\n * @requires ui-bb-format-amount\n * @requires ui-bb-chartjs-chart-donut-ng\n * @requires ui-bb-empty-state-ng\n */\nimport ngAriaModuleKey from 'vendor-bb-angular-ng-aria';\nimport i18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbSubstituteErrorNgKey from 'ui-bb-substitute-error-ng';\nimport uiBbFormatAmount from 'ui-bb-format-amount';\nimport uiBbChartjsChartDonutNg from 'ui-bb-chartjs-chart-donut-ng';\nimport uiBbChartjsChartBarNgKey from 'ui-bb-chartjs-chart-bar-ng';\nimport uiBbEmptyStateKey from 'ui-bb-empty-state-ng';\nimport uiBbChangePeriodKey from 'ui-bb-change-period-ng';\nimport uibBbButtons from 'vendor-bb-uib-buttons';\n\nimport extHooks from './hooks';\nimport extHelpers from './helpers';\n\nexport const dependencyKeys = [\n  ngAriaModuleKey,\n  i18nNgKey,\n  uiBbSubstituteErrorNgKey,\n  uiBbFormatAmount,\n  uiBbChartjsChartDonutNg,\n  uiBbChartjsChartBarNgKey,\n  uiBbEmptyStateKey,\n  uiBbChangePeriodKey,\n  uibBbButtons,\n];\n\nexport const hooks = extHooks;\nexport const helpers = extHelpers;\nexport const events = {};\n\n/**\n * Extended analysis category item\n * @typedef {object} ExtendedAnalysisCategory\n * @extends module:model-bb-income-spending-analysis-category-ng.AnalysisCategory\n * @property {number} totalPortion\n * Percentage of total income/spending for a given category\n * and all categories with a higher portion\n */\n\n/**\n * Analysis specific BBSeries object\n * @typedef {object} AnalysisCategoryBBSeries\n * @property {string[]} labels Array of chart labels\n * @property {AnalysisCategoryDataset[]} datasets Array of all datasets\n * @property {ExtendedAnalysisCategory[]} analysisItems Extended spending array\n */\n\n/**\n * Spendings specific dataset object for chart\n * @typedef {object} AnalysisCategoryDataset\n * @extends module:model-bb-income-spending-analysis-category-ng.Dataset\n * @property {string} backgroundColor Background color for chart slices\n * @property {number} borderWidth Border size between slices\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular-ng-aria\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 3\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-substitute-error-ng\"\n// module id = 4\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-format-amount\"\n// module id = 5\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-donut-ng\"\n// module id = 6\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-chartjs-chart-bar-ng\"\n// module id = 7\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-empty-state-ng\"\n// module id = 8\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-change-period-ng\"\n// module id = 9\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-uib-buttons\"\n// module id = 10\n// module chunks = 0","import getStyle from 'lib-bb-styles';\n\n/**\n * @name processAnalysisCategorySeries\n * @type {function}\n *\n * @description\n * Hook for income/spending chart series object post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.BBSeries} series chart series data\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} data\n * @returns {AnalysisCategoryBBSeries} processed series\n */\nconst processAnalysisCategorySeries = (series, data) => {\n  // applies background colors from the theme to chart slices\n  const colors = [];\n  series.labels.forEach((categoryName, index) => {\n    // convert category name to category class\n    const categoryClass = categoryName\n      .replace(/[^\\w]|[\\s]/g, '-')\n      .replace(/-{2,}/g, '-')\n      .toLowerCase();\n\n    colors[index] = getStyle(`.bb-transaction-category-${categoryClass}`, 'color');\n  });\n\n  Object.assign(series.datasets[0], {\n    backgroundColor: colors,\n    borderWidth: 0,\n  });\n\n  let totalPortion = 0;\n  const analysisItems = data.items.map(item => {\n    totalPortion += item.portion;\n    return Object.assign(item, { totalPortion });\n  });\n\n  return Object.assign(series, { analysisItems });\n};\n\n/**\n * @name processTurnoverSeries\n * @type {function}\n *\n * @description\n * Default hook for turnovers chart series object post processing\n *\n * @param {module:model-bb-turnovers-ng.BBSeries} series chart series data\n * @param {module:model-bb-turnovers-ng.Turnover} data original turnover object\n * @returns {TurnoversBBSeries} processed series\n */\nconst processTurnoverSeries = (series, data) => {\n  series.datasets.forEach((dataset, index) => {\n    const datasetColor = getStyle(`.chart-bar-dataset-${index}`, 'color');\n    Object.assign(dataset, {\n      backgroundColor: datasetColor,\n      hoverBackgroundColor: datasetColor,\n    });\n  });\n\n  return Object.assign(series, {\n    datasets: series.datasets.reverse(),\n    original: data,\n    updated: true,\n  });\n};\n\n/**\n * @name onTurnoversUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params to process\n * @returns {object} processed params\n */\nconst onTurnoversUpdate = params => {\n  // make sure that period start date covers the whole month at the beginning\n  // other intervals are not covered because extension doesn't have them as an option\n  const startDate = new Date(params.periodStartDate);\n  startDate.setDate(params.intervalStartDay);\n  Object.assign(params, {\n    periodStartDate: startDate.toISOString().slice(0, 10),\n  });\n\n  return params;\n};\n\n/**\n * @name processLoadError\n * @type {function}\n *\n * @description\n * Overwrite the default hook and don't return passed error\n *\n * @param {error} The error passed\n * @returns {*} null\n */\nconst processLoadError = () => null;\n\nexport default {\n  processAnalysisCategorySeries,\n  processTurnoverSeries,\n  onTurnoversUpdate,\n  processLoadError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/hooks.js","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-styles\"\n// module id = 12\n// module chunks = 0 1","/* global angular, document */\nimport getStyle from 'lib-bb-styles';\nimport {\n  MS_IN_MIN,\n  CHART_SLICE_LABEL,\n  DEFAULT_TOOLTIP_SELECTOR,\n  ARROW_INNER_CSS_SELECTOR,\n  ARROW_OUTER_CSS_SELECTOR,\n  CHART_SECTOR_SHIFT_SIZE,\n  RENDERING_ANIMATION_TIME,\n  CHART_UPDATE_SUBSCRIPTIONS,\n  BAR_CHART_CSS_SELECTORS,\n  MAX_Y_TICKS,\n} from './constants';\n\n/**\n * @description\n * Parses numeric style to float or returns 0 if not found\n *\n * @name parseStyle\n * @type {function}\n * @inner\n * @param {string} selector\n * @param {string} attr Attribute\n * @returns {number}\n */\nconst parseStyle = (selector, attr) => parseFloat(getStyle(selector, attr)) || 0;\n\n/**\n * @description\n * Retrieves inner size of the tooltip arrow\n *\n * @name getTooltipArrowInnerSize\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipArrowInnerSize = () => parseStyle(ARROW_INNER_CSS_SELECTOR, 'borderWidth');\n\n/**\n * @description\n * Retrieves outer size of the tooltip arrow\n *\n * @name getTooltipArrowOutterSize\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipArrowOutterSize = () => parseStyle(ARROW_OUTER_CSS_SELECTOR, 'borderWidth');\n\n/**\n * @description\n * Retrieves default line height of the tooltip content\n *\n * @name getTooltipLineHeight\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getTooltipLineHeight = () => parseStyle(DEFAULT_TOOLTIP_SELECTOR, 'lineHeight');\n\n/**\n * @description\n * Converts portion value to angle in RAD\n *\n * @name getAngleFromPortion\n * @type {function}\n * @inner\n * @property {number} portion\n * @returns {number}\n */\nconst getAngleFromPortion = (portion) => {\n  const offset = portion <= 25 ? 25 : 125;\n  return (((offset - portion) / 100) * 2) * Math.PI;\n};\n\n/**\n * @description\n * Calculates absolute position of an element in chart area\n *\n * @name calculatePosition\n * @type {function}\n * @inner\n * @property {number} portion Element's portion\n * @property {number} center Chart's center distance from the edge\n * @property {number} radius Distance from the chart's center\n * @property {?number} xOffset Additional x offset\n * @property {?number} yOffset Additional y offset\n * @returns {Position}\n */\nconst calculatePosition = (portion, center, radius, xOffset = 0, yOffset = 0) => {\n  const angle = getAngleFromPortion(portion);\n  const chartRadius = CHART_SECTOR_SHIFT_SIZE + radius;\n  const position = {\n    left: (Math.cos(angle) * chartRadius) + center + CHART_SECTOR_SHIFT_SIZE,\n    top: (-Math.sin(angle) * chartRadius) + center + CHART_SECTOR_SHIFT_SIZE,\n  };\n\n  return {\n    left: `${position.left - xOffset}px`,\n    top: `${position.top - yOffset}px`,\n  };\n};\n\n/**\n * @description\n * Calculates absolute position of the tooltip, based on\n * chart dimensions and assigns them to the tooltip DOM element\n *\n * @name setTooltipPosition\n * @type {function}\n * @inner\n * @param {object} element in DOM\n * @param {object} tooltip object containing tooltip related data like\n * positions, current data point, styling from chart options, etc.\n * @param {object} chart instance\n * @param {ExtendedAnalysisCategory} item Hovered item\n */\nconst setTooltipPosition = (element, tooltip, chart, item) => {\n  const circlePosition = item.totalPortion - (item.portion / 2);\n  const additionalOffset = item.portion < CHART_SLICE_LABEL.minimum ? 0 : CHART_SLICE_LABEL.offset;\n  const arrowOutSize = getTooltipArrowOutterSize();\n  const arrowBorder = arrowOutSize - getTooltipArrowInnerSize();\n\n  const xOffset = circlePosition > 50 ?\n    (element.clientWidth + arrowOutSize + (additionalOffset / 3)) :\n    -arrowOutSize - (additionalOffset / 3);\n  const yOffset = ((element.clientHeight + getTooltipLineHeight()) / 2) - arrowBorder -\n    (item.portion < CHART_SLICE_LABEL.minimum ? CHART_SECTOR_SHIFT_SIZE : 0);\n\n  Object.assign(element.style, calculatePosition(circlePosition,\n    chart.outerRadius, chart.outerRadius + additionalOffset, xOffset, yOffset));\n};\n\n/**\n * @description\n * Converts transaction category name into category CSS icon class sufix\n *\n * @name categoryToIconClass\n * @type {function}\n * @inner\n * @param {string} transactionCategory Transaction category\n * @returns {string}\n */\nconst categoryToIconClass = (transactionCategory) =>\n  transactionCategory.toLowerCase().replace(/\\W/g, '-').replace(/-{2,}/g, '-');\n\n/**\n * @description\n * Tries to get Y axis label padding\n * Returns 0 if selector is not correct\n *\n * @name helpers#getYAxisLabelPadding\n * @type {function}\n * @inner\n * @returns {number}\n */\nconst getYAxisLabelPadding = () =>\n  parseFloat(getStyle(BAR_CHART_CSS_SELECTORS.axisY, 'padding')) || 0;\n\n/**\n * @description\n * Creates new Date object based on input date\n * Returns new Date object\n *\n * @name getNewDate\n * @type {function}\n * @inner\n * @param {Date} newDate\n * @returns {string}\n */\nconst getNewDate = newDate =>\n  new Date(newDate.getTime() - (newDate.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @description\n * Maps controller's properties into object required for transaction category intent\n *\n * @name populateSelectedSectorObject\n * @type {function}\n * @inner\n * @param {object} $ctrl\n * @param {string} activeSectorName\n * @returns {object}\n */\nconst populateSelectedSectorObject = ($ctrl, activeSectorName) => ({\n  category: activeSectorName,\n  bookingDateGreaterThan: $ctrl.periodStartDate,\n  bookingDateLessThan: $ctrl.periodEndDate,\n  productId: $ctrl.selectedProducts[0].id,\n});\n\nconst helpers = (context) => {\n  const i18nFilter = context.$filter('i18n');\n  const dateFilter = context.$filter('date');\n  const currencyFilter = context.$filter('currency');\n  const getSymbol = (code) => context.getRule(code).symbol || code;\n\n  /**\n   * @description\n   * Flag that tells us if current analysis type is spending\n   *\n   * @inner\n   * @name isSpending\n   * @type {boolean}\n   */\n  let isSpending = true;\n\n  /**\n   * @description\n   * Chart.js options object to be used by component.\n   * Has higher priority, can be used to override default options\n   * values in a chart.\n   *\n   * @inner\n   * @name chartOptions\n   * @type {object}\n   */\n  const chartOptions = {\n    layout: {\n      padding: {\n        left: CHART_SECTOR_SHIFT_SIZE,\n        right: CHART_SECTOR_SHIFT_SIZE,\n        top: CHART_SECTOR_SHIFT_SIZE,\n        bottom: CHART_SECTOR_SHIFT_SIZE,\n      },\n    },\n    hover: {\n      mode: null,\n    },\n  };\n\n  /**\n   * @description\n   * Returns the different icon class based on trend value\n   *\n   * @name getTrendIconClass\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {string}\n   */\n  const getTrendIconClass = trend => {\n    if (trend < -1) {\n      return 'fa-arrow-down';\n    } else if (trend > 1) {\n      return 'fa-arrow-up';\n    }\n\n    return '';\n  };\n\n  /**\n   * @description\n   * Checks if the trend for the previous month\n   * is the same as for the current one\n   *\n   * @name checkTrendValueChanged\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {boolean}\n   */\n  const checkTrendValueChanged = trend => {\n    if (Math.abs(trend) <= 1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * @description\n   * Returns the message for the trend label based on trend value\n   *\n   * @name getTrendLabel\n   * @type {function}\n   * @inner\n   * @param {number} trend Trend percentage\n   * @returns {string}\n   */\n  const getTrendLabel = trend => {\n    if (trend < -1) {\n      return 'analysis.tooltip.less.than.previous';\n    } else if (trend > 1) {\n      return 'analysis.tooltip.more.than.previous';\n    }\n\n    return 'analysis.tooltip.same.as.previous';\n  };\n\n  /**\n   * @description\n   * Builds HTML content of the tooltip\n   *\n   * @name buildTooltipContent\n   * @type {function}\n   * @inner\n   * @param {ExtendedAnalysisCategory} item Hovered item\n   * @returns {string}\n   */\n  const buildTooltipContent = (item) => {\n    const trendClass = item.trend > 0 ? 'text-danger' : 'text-success';\n    const textClass = isSpending ? trendClass : 'text-muted';\n    const tooltipCategory = `\n      <i class=\"fa bb-transaction-category-${categoryToIconClass(item.category)}\"></i>\n    `;\n    const trendValue = `\n      <span>${Math.abs(item.trend)}%</span>\n    `;\n    return `\n      <span class=\"chart-tooltip-analysis-category text-muted\">\n        ${item.portion < CHART_SLICE_LABEL.minimum\n          ? `<span class=\"mr-1 d-inline-block\">${tooltipCategory}</span>`\n          : ''}\n        ${item.category}\n      </span>\n      <div class=\"row\">\n        <strong>\n          <ui-bb-format-amount\n            class=\"h4 my-0 mb-05 col-xs-12 chart-tooltip-analysis-amount amount-regular-color\"\n            data-amount=\"${item.totalAmount.amount}\"\n            data-currency=\"'${item.totalAmount.currencyCode}'\"\n            data-wrap>\n          </ui-bb-format-amount>\n        </strong>\n      </div>\n      <p class=\"chart-tooltip-analysis-portion text-muted\">\n        ${item.portion}% ${i18nFilter('analysis.tooltip.of.total')}\n      </p>\n      ${item.trend !== undefined ? `\n        <hr class=\"chart-tooltip-divider\">\n        <p class=\"chart-tooltip-analysis-trend ${textClass}\">\n          <i\n            class=\"chart-tooltip-info-icon fa ${getTrendIconClass(item.trend)}\"\n          ></i>\n          <span class=\"h4 m-0 d-block\">\n            ${checkTrendValueChanged(item.trend) ? trendValue : ''}\n          </span>\n          <span class=\"chart-tooltip-info-text text-muted\">\n            ${i18nFilter(getTrendLabel(item.trend))}\n          </span>\n        </p>\n      ` : ''}\n    `;\n  };\n\n  /**\n   * @description\n   * Builds the DOM element that contains slice label\n   *\n   * @name getNewSliceLabel\n   * @type {function}\n   * @inner\n   * @param {string} category Category name\n   * @param {object} amount Amount object\n   * @param {string} amount.currencyCode Amount's currency code (ISO)\n   * @param {number} amount.amount Amount's value\n   * @param {boolean} topHalf Is this top half slice\n   * @returns {object}\n   */\n  const getNewSliceLabel = (category, amount, topHalf) => {\n    const wrapper = document.createElement('div');\n    wrapper.setAttribute(CHART_SLICE_LABEL.dataAttr, '');\n    wrapper.className = 'text-center';\n\n    const icon = document.createElement('i');\n    icon.className =\n      `fa chart-donut-slice-icon bb-transaction-category-${categoryToIconClass(category)}`;\n\n    const amountEl = document.createElement('div');\n    amountEl.className = 'chart-donut-slice-amount';\n    amountEl.innerHTML = `\n      <ui-bb-format-amount class=\"amount-regular-color amount-integer\"\n        data-amount=\"${amount.amount}\"\n        data-currency=\"'${amount.currencyCode}'\"\n        data-wrap>\n      </ui-bb-format-amount>`;\n\n    // compile UI component\n    context.$compile(angular.element(amountEl).contents())(context.$rootScope);\n\n    wrapper.style.position = 'absolute';\n    // do not show item until it is positioned correctly\n    wrapper.style.opacity = 0;\n    if (!topHalf) {\n      wrapper.appendChild(icon);\n    }\n    wrapper.appendChild(amountEl);\n    if (topHalf) {\n      wrapper.appendChild(icon);\n    }\n\n    return wrapper;\n  };\n\n  /**\n   * @description onClick handler with a visualisation for donut sector\n   *\n   * @name onDonutChartSectorClickAnimation\n   * @type {function}\n   * @param {*} chartInstance - the Chart.js object\n   * @param {*} event - Chart.js click event object with a clicked area\n   * @returns {object} name and isSelected flag of the active sector (category)\n   */\n  const onDonutChartSectorClickAnimation = (chartInstance, event) => {\n    const defaultChartRadius = chartInstance.outerRadius;\n    const activeSectors = chartInstance.getElementsAtEvent(event);\n\n    if (!activeSectors.length) { return null; }\n    /* eslint dot-notation:1 */\n    const isActiveSectorSelected = activeSectors[0]['_model'].outerRadius > defaultChartRadius;\n\n    // clear the chart radius\n    Object.assign(chartInstance, { outerRadius: defaultChartRadius });\n    chartInstance.update();\n\n    // toggle active sector shifting\n    if (!isActiveSectorSelected) {\n      activeSectors[0]['_model'].outerRadius = defaultChartRadius + CHART_SECTOR_SHIFT_SIZE;\n      chartInstance.render(RENDERING_ANIMATION_TIME, false);\n    }\n    return { name: activeSectors[0]['_model'].label, selected: !isActiveSectorSelected };\n  };\n\n  /**\n   * @description\n   * Clears all slice labels already present in chart area\n   *\n   * @name clearSliceLabels\n   * @type {function}\n   * @inner\n   * @param {object} container DOM element that contains all labels\n   */\n  const clearSliceLabels = (container) =>\n    angular.element(container.querySelectorAll(`div[${CHART_SLICE_LABEL.dataAttr}]`)).remove();\n\n  /**\n   * @description\n   * Renders slice labels\n   *\n   * @name renderSliceLabels\n   * @type {function}\n   * @inner\n   * @param {*} chartInstance - the Chart.js object\n   */\n  const renderSliceLabels = (chartInstance) => {\n    // clear any existing icons if any on render\n    clearSliceLabels(chartInstance.canvas.parentNode);\n\n    if (!chartInstance.config.data.analysisItems) {\n      return;\n    }\n\n    chartInstance.config.data.analysisItems.forEach(item => {\n      if (item.portion < CHART_SLICE_LABEL.minimum) {\n        return;\n      }\n\n      const circlePosition = item.totalPortion - (item.portion / 2);\n      // top half of the labels has amount on top of the icon, other half on the bottom\n      const topHalf = circlePosition < 25 || circlePosition > 75;\n      const labelOffset = CHART_SLICE_LABEL.offset;\n      const element = getNewSliceLabel(item.category, item.totalAmount, topHalf);\n      // append element to chart in order to make it possible to measure width and height\n      chartInstance.canvas.parentNode.appendChild(element);\n      // use timeout to get real element dimensions once ui component is compiled\n      setTimeout(() => {\n        // position label correctly\n        const yOffset = labelOffset + (element.clientHeight / 2) +\n          (topHalf ? (element.clientHeight / 6) : (-element.clientHeight / 3));\n\n        const radius = chartInstance.outerRadius + labelOffset;\n        Object.assign(element.style, calculatePosition(circlePosition,\n          radius, radius, labelOffset + (element.clientWidth / 2), yOffset), { opacity: 1 });\n      }, 0);\n    });\n  };\n\n\n  /**\n   * @description\n   * Calculates absolute position of the tooltip, based on\n   * bar height and chart dimensions and assigns them to the\n   * tooltip DOM element\n   *\n   * @name helpers#setTurnoversTooltipPosition\n   * @type {function}\n   * @inner\n   * @param {object} element in DOM\n   * @param {object} tooltip object containing tooltip related data like\n   * positions, current data point, styling from chart options, etc.\n   */\n  const setTurnoversTooltipPosition = (element, tooltip) => {\n    const positionX = Math.floor(tooltip.caretX) - Math.floor(tooltip.width);\n    const positionY = tooltip.caretY - element.clientHeight;\n\n    Object.assign(element.style, {\n      left: `${positionX}px`,\n      top: `${Math.max(0, positionY)}px`,\n    });\n  };\n\n  return {\n    /**\n     * @description\n     * Start period label formatter helper. Returns formatted date.\n     *\n     * @name periodStartLabelFormatter\n     * @type {function}\n     * @param {Date} date\n     * @returns {string} Formatted label\n     */\n    periodStartLabelFormatter: (date) => dateFilter(date, 'd MMM yyyy'),\n\n    /**\n     * @description\n     * End period label formatter helper. In case period is larger than current date\n     * (end date of current month) it returns translation for analysis.label.period.now,\n     * otherwise it returns formatted date\n     *\n     * @name periodEndLabelFormatter\n     * @type {function}\n     * @param {Date} date\n     * @returns {string} Formatted label\n     */\n    periodEndLabelFormatter: (date) => (new Date(new Date().setHours(0, 0, 0, 0)) > date\n      ? dateFilter(date, 'd MMM yyyy')\n      : i18nFilter('analysis.label.period.now')),\n\n    /**\n     * @description\n     * Creates custom tooltip content and places tooltip element on the edge\n     * of currently active portion\n     *\n     * @name customizeTooltip\n     * @type {function}\n     *\n     * @param {object} tooltip object containing tooltip related data like\n     * positions, current data point, styling from chart options, etc.\n     * @param {object} element in DOM\n     * @param {AnalysisCategoryBBSeries} data array of data used to draw the chart\n     * @param {object} chart instance\n     */\n    customizeTooltip: (tooltip, element, data, chart) => {\n      // get all data for active point\n      const item = data.analysisItems[tooltip.dataPoints[0].index];\n      const arrowClass = (item.totalPortion - (item.portion / 2)) > 50 ?\n        'bb-arrow-right' : 'bb-arrow-left';\n\n      Object.assign(element, {\n        innerHTML: buildTooltipContent(item),\n        className: `chart-tooltip chart-tooltip-default hidden-xs ${arrowClass}`,\n      });\n\n      // compile tooltip's content\n      context.$compile(angular.element(element).contents())(context.$rootScope);\n\n      // calculate element position\n      setTooltipPosition(element, tooltip, chart, item);\n    },\n\n    /**\n     * @description\n     * Creates custom tooltip content and places tooltip element on top\n     * of the currently active bar\n     *\n     * @name customizeTurnoversTooltip\n     * @type {function}\n     *\n     * @param {object} tooltip object containing tooltip related data like\n     * positions, current data point, styling from chart options, etc.\n     * @param {object} element in DOM\n     * @param {TurnoversBBSeries} data array of data used to draw the chart\n     */\n    customizeTurnoversTooltip: (tooltip, element, data) => {\n      // get all data for active point\n      const item = data.original.turnovers[tooltip.dataPoints[0].index];\n      const dataKey = data.datasets[0].dataKey;\n      Object.assign(element, {\n        innerHTML: `\n          <ui-bb-format-amount class=\"amount-regular-color\"\n            data-amount=\"${item[dataKey].amount}\"\n            data-currency=\"'${item[dataKey].currencyCode}'\"\n            data-wrap>\n          </ui-bb-format-amount>\n        `,\n        className:\n          `chart-tooltip chart-tooltip-default chart-tooltip-small\n            text-center bb-arrow-bottom hidden-xs`,\n      });\n\n      // compile tooltip's content\n      context.$compile(angular.element(element).contents())(context.$rootScope);\n\n      // calculate element position\n      setTurnoversTooltipPosition(element, tooltip);\n    },\n\n    /**\n     * @description\n     * Keeps analysis type flag and returns chart options object\n     *\n     * @name donutChartOptions\n     * @type {function}\n     * @returns {object} Donut chart options object\n     */\n    donutChartOptions: (ctrl) => {\n      isSpending = ctrl.isSpendingAnalysis();\n      return chartOptions;\n    },\n\n    /**\n     * @description\n     * Chart.js options object to be used by bar chart component.\n     * Has higher priority, can be used to override default options\n     * values in a chart.\n     *\n     * @inner\n     * @name barChartOptions\n     * @type {object}\n     */\n\n    barChartOptions: {\n      scales: {\n        xAxes: [{\n          ticks: {\n            fontColor: getStyle(BAR_CHART_CSS_SELECTORS.axisX, 'color'),\n            fontFamily: getStyle(BAR_CHART_CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n        yAxes: [{\n          gridLines: {\n            display: true,\n            drawBorder: false,\n            tickMarkLength: 0,\n          },\n          ticks: {\n            min: 0,\n            maxTicksLimit: MAX_Y_TICKS,\n            padding: getYAxisLabelPadding(),\n            fontColor: getStyle(BAR_CHART_CSS_SELECTORS.axisY, 'color'),\n            fontFamily: getStyle(BAR_CHART_CSS_SELECTORS.axisBase, 'fontFamily'),\n          },\n        }],\n      },\n    },\n\n    /**\n     * @description\n     * Array of plugins used to transform Chart.js rendering in the extension\n     *\n     * @name chartPlugins\n     * @type {array}\n     */\n    chartPlugins: [\n      {\n        afterInit: (chartInstance) => {\n          const isInsideContainer = (element, idPrefix) => {\n            const parent = element.parentNode;\n            if (!parent || !parent.getAttribute) {\n              return false;\n            } else if ((parent.getAttribute('data-pid') || '').indexOf(idPrefix) === 0) {\n              return true;\n            }\n\n            return isInsideContainer(parent, idPrefix);\n          };\n\n          // subscribe to toggle event of any type of container that has this behaviour\n          CHART_UPDATE_SUBSCRIPTIONS.forEach((subscription) => {\n            // if canvas is not inside a container, do not subscribe to it's event\n            const containerIdPrefix = `container-${subscription.container}`;\n            if (!isInsideContainer(chartInstance.canvas, containerIdPrefix)) {\n              return;\n            }\n\n            context.bus.subscribe(subscription.event, (sender) => {\n              // sender can be either HTML node or container's object\n              // to conduct a search, node is needed\n              const node = sender.htmlNode ? angular.element(sender.htmlNode) : sender;\n              if (node.find(chartInstance.canvas).length) {\n                renderSliceLabels(chartInstance);\n              }\n            });\n          });\n        },\n        beforeEvent: (chartInstance, event) => {\n          if (event.type === 'click') {\n            Object.assign(chartInstance, { onClickLayoutUpdate: true });\n          }\n        },\n        afterEvent: (chartInstance, event) => {\n          if (event.type === 'click') {\n            Object.assign(chartInstance, { onClickLayoutUpdate: false });\n          }\n        },\n        afterDatasetsUpdate: (chartInstance) => {\n          if (chartInstance.onClickLayoutUpdate) {\n            return;\n          }\n\n          renderSliceLabels(chartInstance);\n        },\n      },\n    ],\n\n    /**\n     * @description\n     * Callback on period start date value change. This function ensures\n     * that controller property is also updated\n     *\n     * @name onPeriodStartChange\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} ctrl\n     */\n    onPeriodStartChange: (ctrl) => (newStartDate) =>\n      Object.assign(ctrl, { periodStartDate: getNewDate(newStartDate) }),\n\n    /**\n     * @description\n     * Callback on period value change. Calls\n     * controller's onPeriodEndChanged listener\n     *\n     * @name onPeriodEndChange\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} ctrl\n     */\n    onPeriodEndChange: (ctrl) => (newEndDate) => {\n      Object.assign(ctrl, { periodEndDate: getNewDate(newEndDate) });\n      ctrl.updateAnalysisCategories();\n    },\n\n    updatePeriod: (ctrl, monthsRange) => {\n      const date = new Date();\n      const startDate = (monthsRange === 1)\n        ? date.setDate(1)\n        : date.setMonth(date.getMonth() - monthsRange);\n\n      Object.assign(ctrl, {\n        periodStartDate: getNewDate(new Date(startDate)),\n        periodEndDate: getNewDate(new Date()),\n      });\n      if (monthsRange > 1) {\n        ctrl.updateTurnovers();\n      }\n\n      ctrl.updateAnalysisCategories();\n    },\n\n    /**\n     * @description\n     * Checks if data for chart is available in series object\n     *\n     * @name isSeriesDataAvailable\n     * @type {function}\n     * @param {AnalysisCategoryBBSeries} series\n     * @returns {boolean} returns true if series data is not empty\n     */\n    isSeriesDataAvailable: (series) => (series ? series.datasets[0].data.length : false),\n\n    /**\n     * @description\n     * Function to create new handler for the chart click handling\n     *\n     * @name getClickHandler\n     * @type {function}\n     * @param {IncomeSpendingAnalysisCategoryController} $ctrl\n     * @returns {function} chart click handler\n     */\n    getClickHandler: function getClickHandler($ctrl) {\n      return function (clickEvent) {\n        // TODO: remove once multiple account request is supported by transactions enpoint\n        if ($ctrl.selectedProducts.length > 1) {\n          return;\n        }\n        // end of section\n\n        const chartInstance = this;\n        const activeSector = onDonutChartSectorClickAnimation(chartInstance, clickEvent);\n        if (activeSector && activeSector.name) {\n          $ctrl.setSelectedAnalysisItem(activeSector.selected\n            ? populateSelectedSectorObject($ctrl, activeSector.name)\n            : null\n          );\n        }\n      };\n    },\n\n    /**\n     * @description\n     * X axis tick formatter\n     *\n     * @name formatX\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatX: (ticks) => ticks.map(tick => dateFilter(tick, 'MMM')),\n\n    /**\n     * @description\n     * Y axis tick formatter\n     *\n     * @name formatY\n     * @type {function}\n     *\n     * @param {array} ticks Array of scale ticks\n     * @param {TurnoversBBSeries} data Chart series\n     * @returns {array} Formatted array of ticks\n     */\n    formatY: (ticks, data) => {\n      if (!data) {\n        return [];\n      }\n\n      // the same currency is being used for all ticks\n      const currencyCode = data.original.turnovers[0].balance.currencyCode;\n      return ticks.map(tick => {\n        if (parseFloat(tick) === 0) {\n          return null;\n        }\n        return currencyFilter(tick, getSymbol(currencyCode), 0);\n      });\n    },\n    categoryToIconClass,\n  };\n};\n\nexport default helpers;\n\n/**\n * Element absolute position object\n * @typedef {object} Position\n * @property {number} left Distance from left edge of the area\n * @property {number} top Distance from the top of area\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/helpers.js","/* eslint-disable import/prefer-default-export */\n/**\n * @name DEFAULT_TOOLTIP_SELECTOR\n * @description\n * Chart's tooltip CSS selector\n * @type {string}\n */\nexport const DEFAULT_TOOLTIP_SELECTOR = '.chart-tooltip-default';\n\n/**\n * @name ARROW_INNER_CSS_SELECTOR\n * @description\n * Chart tooltip's arrow CSS selector (inner layer)\n * @type {string}\n */\nexport const ARROW_INNER_CSS_SELECTOR = `${DEFAULT_TOOLTIP_SELECTOR}.bb-arrow-left::after`;\n\n/**\n * @name ARROW_OUTER_CSS_SELECTOR\n * @description\n * Chart tooltip's arrow CSS selector (outer layer)\n * @type {string}\n */\nexport const ARROW_OUTER_CSS_SELECTOR = `${DEFAULT_TOOLTIP_SELECTOR}.bb-arrow-left::before`;\n\n/**\n * @name BAR_CHART_CSS_SELECTORS\n * @description\n * Object with selectors needed for correct styling of bar chart canvas parts\n * @type {CSS}\n */\nexport const BAR_CHART_CSS_SELECTORS = {\n  axisBase: '.chart-bar-axis',\n  axisX: '.chart-bar-axis-x',\n  axisY: '.chart-bar-axis-y',\n};\n\n/**\n * @name CHART_SLICE_LABEL\n * @description\n * Slice labels configuration\n * @type {object}\n * @property {string} dataAttr Data attribute that will be attached to the wrapper\n * that contains the label\n * @property {number} offset Icon's offset from the outer edge of the chart\n * @property {number} minimum Minimum value of portion required to create a label\n */\nexport const CHART_SLICE_LABEL = {\n  dataAttr: 'data-category-label',\n  offset: 27,\n  minimum: 2,\n};\n\n/**\n * @name CHART_SECTOR_SHIFT_SIZE\n * @description\n * Slice shifting size (pixels) and size of the canvas padding (which is\n * needed to provide a space for the shifting animation). Is also\n * used for icons offset calculation.\n * @type {number}\n */\nexport const CHART_SECTOR_SHIFT_SIZE = 10; // pixels\n\n/**\n * @name MS_IN_MIN\n * @description\n * Amount of milliseconds in a minute\n * @type {number}\n */\nexport const MS_IN_MIN = 60000;\n\n/**\n * @name RENDERING_ANIMATION_TIME\n * @description\n * Time in milliseconds to have a donut slice animation on click\n * @type {number}\n */\nexport const RENDERING_ANIMATION_TIME = 500; // ms\n\n/**\n * @name CHART_UPDATE_SUBSCRIPTIONS\n * @description\n * List of container names and events that those containers can publish on which\n * chart needs to be redrawn\n * @type {UpdateSubscription[]}\n */\nexport const CHART_UPDATE_SUBSCRIPTIONS = [\n  {\n    container: 'panel',\n    event: 'DeckPanelLoaded',\n  },\n  {\n    container: 'carousel',\n    event: 'CarouselSlideLoaded',\n  },\n  {\n    container: 'lightbox',\n    event: 'LightboxOpened',\n  },\n];\n\n/**\n * @typedef {object} UpdateSubscription\n * @description\n * Object containing container name and event that that container can publish\n * @property {string} container Container name\n * @property {string} event Event that can be expected from a container\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bb-income-spending-analysis-category-ng/scripts/constants.js"],"sourceRoot":""}
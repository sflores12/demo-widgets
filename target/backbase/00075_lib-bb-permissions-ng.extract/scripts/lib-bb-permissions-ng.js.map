{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******","webpack:///webpack/bootstrap db8bf0fee4532d5d1022?56ce*******","webpack:///./lib-bb-permissions-ng/model.xml","webpack:///./lib-bb-permissions-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"?a114","webpack:///external \"lib-bb-storage-ng\"","webpack:///external \"data-bb-accessgroups-http-ng\"","webpack:///./lib-bb-permissions-ng/scripts/permissions.js","webpack:///external \"lib-bb-model-errors\""],"names":["moduleKey","bbPermissionsKey","module","provider","cacheDisabled","permissionsCheckDisabled","downloadOnInitDisabled","setCacheEnabled","value","setPermissionsCheckEnabled","enableDownloadOnInit","$get","Promise","accessGroupData","bbStorage","name","storageKey","loadingPromise","permissionsFactory","getCachedPermissions","resolve","getItem","loadPermissions","getAccessgroupsUsersPermissionsSummary","then","data","setItem","permissions","catch","error","getAllPermissions","getPrivilegeValue","resource","fn","privilege","findIndex","permission","function","getObjProperty","obj","propertyName","Object","prototype","hasOwnProperty","call","getPermissionsForPrivileges","privileges","reduce","permissionsObj","privilegesArray","assign","resourceObj","fnObj","forEach","getPermissions","isPermitted","partials","String","split","isFormatValid","length","console","warn","priv","downloadAndCacheOnInit","enabled","loading"],"mappings":"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","file":"lib-bb-permissions-ng/scripts/lib-bb-permissions-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-storage-ng\"), require(\"data-bb-accessgroups-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-permissions-ng\", [\"vendor-bb-angular\", \"lib-bb-storage-ng\", \"data-bb-accessgroups-http-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-permissions-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-storage-ng\"), require(\"data-bb-accessgroups-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"lib-bb-permissions-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-storage-ng\"], root[\"data-bb-accessgroups-http-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_44__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db8bf0fee4532d5d1022","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-permissions-ng/model.xml\n// module id = 0\n// module chunks = 7","/**\n * @module lib-bb-permissions-ng\n *\n * @description\n * Library to download and filter available user permissions by specified set of privileges.\n * By default permissions will be downloaded from the server for a check and chached.\n *\n * @example\n * import bbPermissionsModuleKey, { bbPermissionsKey } from 'lib-bb-permissions-ng';\n *\n * // General usage:\n * angular\n *   .module('ExampleModule', [\n *     bbPermissionsModuleKey,\n *   ])\n *   .config([`${bbPermissionsKey}Provider`,\n *     (permissionsProvider) => {\n *       permissionsProvider.setCacheEnabled(false);\n *       permissionsProvider.setPermissionsCheckEnabled(true);\n *     }\n *   ])\n *   .controller('DemoController', [bbPermissionsKey,\n *     (permissions) => {\n *       const privileges = [{\n *         resource: 'Contacts',\n *         function: 'Contacts',\n *         privileges: ['read', 'delete'],\n *       }];\n *\n *       // This is more general approach to get permissions for specified privileges\n *       permissions.getPermissions(privileges)\n *         .then(data => {\n *           this.permissions = data;\n *           this.canDeleteContacts = data.Contacts.Contacts.delete;\n *         });\n *\n *       // This is simplified approach to get permission for a single privilege\n *       permissions.isPermitted('Contacts.Contacts.delete')\n *         .then(isPermitted => {\n *           this.canDeleteContacts = isPermitted;\n *         });\n *     }\n *   ]);\n */\n\nimport angular from 'vendor-bb-angular';\nimport storageModuleKey, { bbStorageServiceKey } from 'lib-bb-storage-ng';\nimport accessGroupsDataModuleKey, { accessGroupsDataKey } from 'data-bb-accessgroups-http-ng';\n\nimport permissionsFactory from './permissions';\n\nconst moduleKey = 'lib-bb-permissions-ng';\n\n/**\n * @name bbPermissionsKey\n * @type {string}\n * @description Injector name of [PermissionsLibrary](#PermissionsLibrary) instance\n */\nexport const bbPermissionsKey = `${moduleKey}:bbPermissions`;\n\nexport default angular\n  .module(moduleKey, [\n    storageModuleKey,\n    accessGroupsDataModuleKey,\n  ])\n  .provider(bbPermissionsKey, () => {\n    let cacheDisabled = false;\n    let permissionsCheckDisabled = false;\n    let downloadOnInitDisabled = true;\n\n    /**\n     * @name setCacheEnabled\n     * @type {function}\n     * @description\n     * Sets a flag to enable or disable library caching\n     * @param {boolean} value Is cache enabled\n     */\n    const setCacheEnabled = value => {\n      cacheDisabled = !value;\n    };\n\n    /**\n     * @name setPermissionsCheckEnabled\n     * @type {function}\n     * @description\n     * Sets a flag to enable or disable library permissions check at all.\n     * @param {boolean} value Is permissions checks enabled\n     */\n    const setPermissionsCheckEnabled = value => {\n      permissionsCheckDisabled = !value;\n    };\n\n    /**\n     * @name enableDownloadOnInit\n     * @type {function}\n     * @description\n     * Sets flag to enable or disable permissions download on library initialisation.\n     * @param {boolean} value Is permissions download on init enabled\n     */\n    const enableDownloadOnInit = value => {\n      downloadOnInitDisabled = !value;\n    };\n\n    return {\n      setCacheEnabled,\n      setPermissionsCheckEnabled,\n      enableDownloadOnInit,\n      $get: [\n        '$q',\n        accessGroupsDataKey,\n        bbStorageServiceKey,\n\n        /* into */\n        (Promise, accessGroupData, bbStorage) =>\n          permissionsFactory(\n            Promise,\n            accessGroupData,\n            bbStorage,\n            cacheDisabled,\n            permissionsCheckDisabled,\n            downloadOnInitDisabled\n          ),\n      ],\n    };\n  })\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-permissions-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 40\n// module chunks = 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage-ng\"\n// module id = 41\n// module chunks = 7","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-accessgroups-http-ng\"\n// module id = 42\n// module chunks = 7 8","import { fromHttpError } from 'lib-bb-model-errors';\n\nconst storageKey = 'lib.bb.permissions.data';\n\n/**\n * @name loadingPromise\n * @type {Promise}\n * @inner\n * @description\n * Preserves Promise reference for active permissions\n * network requests. Will be reset when Promise fulfilled.\n */\nlet loadingPromise;\n\n/**\n * @name PermissionsLibrary\n * @type {function}\n *\n * @description\n * Library responsible for downloading permissions for the widgets,\n * and caching them in the bbStorage.\n */\nconst permissionsFactory = (\n  Promise,\n  accessGroupData,\n  bbStorage,\n  cacheDisabled,\n  permissionsCheckDisabled,\n  downloadOnInitDisabled\n) => {\n  /**\n   * @name getCachedPermissions\n   * @type {function}\n   * @inner\n   * @description\n   * Returns cached permissions if cache is enabled, null otherwise.\n   * @returns {Promise} A Promise with permissions.\n   */\n  const getCachedPermissions = () =>\n    (cacheDisabled ? Promise.resolve(null) : bbStorage.getItem(storageKey));\n\n  /**\n   * @name loadPermissions\n   * @type {function}\n   * @inner\n   * @description\n   * Loads permissions for the server and stores them in the cache\n   * if cache is enabled.\n   * @returns {Promise.<object[]>} A Promise for permissions network request\n   */\n  const loadPermissions = () => {\n    // If permissions are loading already – return existing promise\n    if (loadingPromise) {\n      return loadingPromise;\n    }\n\n    loadingPromise = accessGroupData.getAccessgroupsUsersPermissionsSummary()\n      .then(({ data }) => data)\n      .then(permissions => {\n        if (!cacheDisabled) {\n          bbStorage.setItem(storageKey, permissions);\n        }\n        loadingPromise = null;\n        return permissions;\n      })\n      .catch(error => {\n        loadingPromise = null;\n        throw fromHttpError(error);\n      });\n\n    return loadingPromise;\n  };\n\n  /**\n   * @name getAllPermissions\n   * @type {function}\n   * @inner\n   * @description\n   * Returns either cached permissions or permissions from the server.\n   * If permissions check is disabled, it will return null.\n   * @returns {Promise} A Promise with permissions.\n   */\n  const getAllPermissions = () => {\n    // Return resolved Promise immediately if permissions check is disabled\n    if (permissionsCheckDisabled) {\n      return Promise.resolve(null);\n    }\n\n    return getCachedPermissions()\n      .then(permissions => permissions || loadPermissions());\n  };\n\n  /**\n   * @name getPrivilegeValue\n   * @type {function}\n   * @inner\n   * @description\n   * Returns value for the privilege with specified resource and business function name.\n   * By default will return true if permissions check is disabled.\n   * @param {object[]} permissions An array of available user permissions\n   * @param {string} resource A privilege resource name\n   * @param {string} fn A privilege business function name\n   * @param {string} privilege A privilege name\n   * @returns {boolean} Permission value.\n   */\n  const getPrivilegeValue = (permissions, resource, fn, privilege) => permissionsCheckDisabled ||\n    permissions.findIndex(permission => (\n      permission.resource === resource &&\n      permission.function === fn &&\n      !!permission.permissions[privilege]\n    )) !== -1;\n\n  /**\n   * @name getObjProperty\n   * @type {function}\n   * @inner\n   * @description\n   * This function will return object's property by name.\n   * If property not specified, it will be created with empty object value.\n   * @param {object} obj Object with properties\n   * @param {string} propertyName Property name\n   * @returns {object} Object's property value\n   */\n  const getObjProperty = (obj, propertyName) => {\n    if (!Object.prototype.hasOwnProperty.call(obj, propertyName)) {\n      // eslint-disable-next-line no-param-reassign\n      obj[propertyName] = {};\n    }\n    return obj[propertyName];\n  };\n\n  /**\n   * @name getPermissionsForPrivileges\n   * @type {function}\n   * @inner\n   * @description\n   * Evaluates permission values for requested privileges set.\n   * @param {object[]} permissions=[] Available user permissions\n   * @param {object[]} privileges Requested privileges set\n   * @returns {object} Evaluated permissions object.\n   */\n  const getPermissionsForPrivileges = (permissions = [], privileges) => privileges\n    .reduce((permissionsObj, { resource, function: fn, privileges: privilegesArray }) => {\n      const obj = Object.assign({}, permissionsObj);\n      const resourceObj = getObjProperty(obj, resource);\n      const fnObj = getObjProperty(resourceObj, fn);\n\n      privilegesArray.forEach(privilege => {\n        fnObj[privilege] = getPrivilegeValue(permissions, resource, fn, privilege);\n      });\n\n      return obj;\n    }, {});\n\n  /**\n   * @name getPermissions\n   * @type {function}\n   * @description\n   * Retrieves available permissions and filters them by specified privileges set.\n   * @param {object[]} privileges=[] A set of requests privileges\n   * @returns {Promise.<object>} A Promise with permissions object\n   */\n  const getPermissions = (privileges = []) => getAllPermissions()\n    .then(permissions => getPermissionsForPrivileges(permissions, privileges));\n\n  /**\n   * @name isPermitted\n   * @type {function}\n   * @description\n   * Checks user permissions for single privelege. Takes only one string parameter,\n   * which have to be formatted in a special way – string should contain of three parts\n   * separated with dot.\n   * First part is Resource name, second part – Business Function name,\n   * third part – privilege to check.\n   *\n   * @example\n   * permissionsService.isPermitted('Contacts.Contacts.read')\n   *   .then(isPermitted => { console.log(isPermitted) })\n   *   .catch(error => { console.error('Unable to check permissions') });\n   *\n   * @param {string} privilege String which describes single privilege to check.\n   * @returns {Promise.<boolean>} A Promise with boolean permission check result.\n   */\n  const isPermitted = privilege => {\n    const partials = String(privilege).split('.');\n    const isFormatValid = partials.length === 3;\n\n    if (!isFormatValid) {\n      // eslint-disable-next-line\n      console.warn(`Privilege \"${privilege}\" format is not valid.`+\n        'It should be string with two dots-separators. For example \"Contacts.Contact.edit\".');\n      return Promise.resolve(false);\n    }\n\n    const [resource, fn, priv] = partials;\n    const privileges = [{\n      resource,\n      function: fn,\n      privileges: [priv],\n    }];\n\n    return getPermissions(privileges)\n      .then(permissions => permissions[resource][fn][priv]);\n  };\n\n  /* Initialisation */\n  const downloadAndCacheOnInit = !downloadOnInitDisabled &&\n    !permissionsCheckDisabled && !cacheDisabled;\n\n  if (downloadAndCacheOnInit) {\n    loadPermissions();\n  }\n\n  return {\n    getPermissions,\n    isPermitted,\n\n    /**\n     * @name enabled\n     * @type {boolean}\n     * @description\n     * Indicates is permissions check disabled.\n     */\n    get enabled() {\n      return !permissionsCheckDisabled;\n    },\n\n    /**\n     * @name loading\n     * @type {boolean}\n     * @description\n     * Indicates is library currently loading permissions from the server.\n     */\n    get loading() {\n      return !!loadingPromise;\n    },\n  };\n};\n\nexport default permissionsFactory;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-permissions-ng/scripts/permissions.js","module.exports = __WEBPACK_EXTERNAL_MODULE_44__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 44\n// module chunks = 7 8 17 18 19 20 21 22 23"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 0ceaf36d3a12330da233","webpack:///./fe-dist/http-ng/data-bb-categories-management-http-ng/model.xml","webpack:///./fe-dist/http-ng/data-bb-categories-management-http-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///./fe-dist/http-ng/data-bb-categories-management-http-ng/scripts/data-bb-categories-management-http.js"],"names":["categoriesManagementDataModuleKey","categoriesManagementDataKey","module","provider","config","baseUri","setBaseUri","$get","name","conf","httpClient","version","definedTypes","parse","res","data","headers","status","statusText","postCategoriesRecord","url","method","then","catch","err","getCategories","params","deleteCategoriesRecord","id","putCategoriesRecord","schemas"],"mappings":"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","file":"data-bb-categories-management-http-ng/scripts/data-bb-categories-management-http-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"data-bb-categories-management-http-ng\", [\"vendor-bb-angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-bb-categories-management-http-ng\"] = factory(require(\"vendor-bb-angular\"));\n\telse\n\t\troot[\"data-bb-categories-management-http-ng\"] = factory(root[\"vendor-bb-angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0ceaf36d3a12330da233","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./fe-dist/http-ng/data-bb-categories-management-http-ng/model.xml\n// module id = 0\n// module chunks = 0","/* eslint-disable */\n/**\n * @module data-bb-categories-management-http-ng\n *\n * @description A data module for accessing the Categories Management REST API.\n *\n * @returns {String} `data-bb-categories-management-http-ng`\n * @example\n * import categoriesManagementDataModuleKey, {\n *   categoriesManagementDataKey,\n * } from 'data-bb-categories-management-http-ng';\n */\n\nimport ng from 'vendor-bb-angular';\n\nimport categoriesManagementData from './data-bb-categories-management-http';\n\nconst categoriesManagementDataModuleKey = 'data-bb-categories-management-http-ng';\n/**\n * @name categoriesManagementDataKey\n * @type {string}\n * @description Angular dependency injection key for the CategoriesManagementData service\n */\nexport const categoriesManagementDataKey = 'data-bb-categories-management-http-ng:categoriesManagementData';\n/**\n * @name default\n * @type {string}\n * @description Angular dependency injection module key\n */\nexport default ng\n  .module(categoriesManagementDataModuleKey, [])\n\n  /**\n   * @constructor CategoriesManagementData\n   * @type {object}\n   *\n   * @description Public api for data-bb-categories-management-http-ng service\n   *\n   */\n  .provider(categoriesManagementDataKey, [() => {\n    const config = {\n      baseUri: '/',\n    };\n\n    /**\n     * @name CategoriesManagementDataProvider\n     * @type {object}\n     * @ngkey data-bb-categories-management-http-ng:categoriesManagementDataProvider\n     * @description\n     * Data service that can be configured with custom base URI.\n     *\n     * @example\n     * // Configuring in an angular app:\n     * angular.module(...)\n     *   .config(['data-bb-categories-management-http-ng:categoriesManagementDataProvider',\n     *     (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *       });\n     *\n     * // Configuring With config-bb-providers-ng:\n     * export default [\n     *   ['data-bb-categories-management-http-ng:categoriesManagementDataProvider', (dataProvider) => {\n     *       dataProvider.setBaseUri('http://my-service.com/');\n     *   }]\n     * ];\n     */\n    return {\n      /**\n       * @name CategoriesManagementDataProvider#setBaseUri\n       * @type {function}\n       * @param {string} baseUri Base URI which will be the prefix for all HTTP requests\n       */\n      setBaseUri: (baseUri) => {\n        config.baseUri = baseUri;\n      },\n\n      /**\n       * @name CategoriesManagementDataProvider#$get\n       * @type {function}\n       * @return {object} An instance of the service\n       */\n      $get: [\n        '$http',\n        /* into */\n       categoriesManagementData(config),\n      ],\n    };\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-categories-management-http-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 2\n// module chunks = 0","/* eslint-disable */\nexport default (conf) => (httpClient) => {\n  // Base param constants\n  const baseUri = conf.baseUri || '';\n\n  const version = 'v2';\n\n\n  /**\n   * The root defined types from the RAML.\n   * @private\n   */\n  const definedTypes = {};\n\n  \n  definedTypes['CategoriesManagementData.Category-UPDATE'] = {\"properties\":{\"categoryId\":{\"type\":\"integer\",\"required\":true},\"transactionId\":{\"type\":\"string\",\"required\":false},\"categoryName\":{\"type\":\"string\",\"enum\":[\"Home\",\"Health & Beauty\",\"Groceries\",\"Eating & Drinking\",\"Transportation\",\"Shopping\",\"Hobbies & Entertainment\",\"Bills & Utilities\",\"Income\",\"Other Income\",\"Savings\",\"Transfer\",\"Fees\",\"Other\",\"Uncategorized\"],\"required\":true},\"iconLocation\":{\"type\":\"string\",\"required\":false},\"categoryType\":{\"type\":\"string\",\"enum\":[\"Expenses\",\"Income\",\"Transfer\",\"Deferred Compensation\",\"General\"],\"required\":true},\"subCategoryName\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['CategoriesManagementData.Category-ITEM'] = {\"properties\":{\"categoryId\":{\"type\":\"integer\",\"required\":true},\"transactionId\":{\"type\":\"string\",\"required\":false},\"categoryName\":{\"type\":\"string\",\"enum\":[\"Home\",\"Health & Beauty\",\"Groceries\",\"Eating & Drinking\",\"Transportation\",\"Shopping\",\"Hobbies & Entertainment\",\"Bills & Utilities\",\"Income\",\"Other Income\",\"Savings\",\"Transfer\",\"Fees\",\"Other\",\"Uncategorized\"],\"required\":true},\"iconLocation\":{\"type\":\"string\",\"required\":false},\"categoryType\":{\"type\":\"string\",\"enum\":[\"Expenses\",\"Income\",\"Transfer\",\"Deferred Compensation\",\"General\"],\"required\":true},\"subCategoryName\":{\"type\":\"string\",\"required\":false}}};\n  \n  definedTypes['CategoriesManagementData.Category-LIST'] = {\"type\":\"array\",\"items\":{\"properties\":{\"categoryId\":{\"type\":\"integer\",\"required\":true},\"transactionId\":{\"type\":\"string\",\"required\":false},\"categoryName\":{\"type\":\"string\",\"enum\":[\"Home\",\"Health & Beauty\",\"Groceries\",\"Eating & Drinking\",\"Transportation\",\"Shopping\",\"Hobbies & Entertainment\",\"Bills & Utilities\",\"Income\",\"Other Income\",\"Savings\",\"Transfer\",\"Fees\",\"Other\",\"Uncategorized\"],\"required\":true},\"iconLocation\":{\"type\":\"string\",\"required\":false},\"categoryType\":{\"type\":\"string\",\"enum\":[\"Expenses\",\"Income\",\"Transfer\",\"Deferred Compensation\",\"General\"],\"required\":true},\"subCategoryName\":{\"type\":\"string\",\"required\":false}}}};\n  \n  definedTypes['CategoriesManagementData.Category-BAD-REQUEST'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['CategoriesManagementData.Category-INTERNAL-SERVER-ERROR'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['CategoriesManagementData.Category-NOT-FOUND'] = {\"properties\":{\"message\":{\"type\":\"string\",\"required\":true}}};\n  \n  definedTypes['CategoriesManagementData.CategoryId'] = {\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true}}};\n  \n\n  \n  /**\n   * @typedef CategoriesManagementData.Category-BAD-REQUEST\n   * @type {Object}\n   * @property {String} message\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.Category-INTERNAL-SERVER-ERROR\n   * @type {Object}\n   * @property {String} message\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.Category-ITEM\n   * @type {Object}\n   * @property {Integer} categoryId Primary Key Internal Category Id\n   * @property {?String} transactionId Internal transaction category, to be used when updating a specific category\n   * @property {String} categoryName One of \"Home\", \"Health & Beauty\", \"Groceries\", \"Eating & Drinking\", \"Transportation\", \"Shopping\", \"Hobbies & Entertainment\", \"Bills & Utilities\", \"Income\", \"Other Income\", \"Savings\", \"Transfer\", \"Fees\", \"Other\", \"Uncategorized\"\n   * @property {?String} iconLocation\n   * @property {String} categoryType One of \"Expenses\", \"Income\", \"Transfer\", \"Deferred Compensation\", \"General\"\n   * @property {?String} subCategoryName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.Category-LIST\n   * @type {Array.<CategoriesManagementData.CategoryITEM>}\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.Category-NOT-FOUND\n   * @type {Object}\n   * @property {String} message\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.Category-UPDATE\n   * @type {Object}\n   * @property {Integer} categoryId Primary Key Internal Category Id\n   * @property {?String} transactionId Internal transaction category, to be used when updating a specific category\n   * @property {String} categoryName One of \"Home\", \"Health & Beauty\", \"Groceries\", \"Eating & Drinking\", \"Transportation\", \"Shopping\", \"Hobbies & Entertainment\", \"Bills & Utilities\", \"Income\", \"Other Income\", \"Savings\", \"Transfer\", \"Fees\", \"Other\", \"Uncategorized\"\n   * @property {?String} iconLocation\n   * @property {String} categoryType One of \"Expenses\", \"Income\", \"Transfer\", \"Deferred Compensation\", \"General\"\n   * @property {?String} subCategoryName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.CategoryITEM\n   * @type {Object}\n   * @property {Integer} categoryId Primary Key Internal Category Id\n   * @property {?String} transactionId Internal transaction category, to be used when updating a specific category\n   * @property {String} categoryName One of \"Home\", \"Health & Beauty\", \"Groceries\", \"Eating & Drinking\", \"Transportation\", \"Shopping\", \"Hobbies & Entertainment\", \"Bills & Utilities\", \"Income\", \"Other Income\", \"Savings\", \"Transfer\", \"Fees\", \"Other\", \"Uncategorized\"\n   * @property {?String} iconLocation\n   * @property {String} categoryType One of \"Expenses\", \"Income\", \"Transfer\", \"Deferred Compensation\", \"General\"\n   * @property {?String} subCategoryName\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n  /**\n   * @typedef CategoriesManagementData.CategoryId\n   * @type {Object}\n   * @property {Integer} id Internally used unique identification\n   * @property {?Object} additions Container object for custom API extensions\n   */\n  \n\n  /*\n   * @name parse\n   * @type {Function}\n   * @private\n   * @description Should be overwritten by transformResponse on a project level\n   */\n  function parse(res) {\n    return {\n      data: res.data,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n    };\n  }\n\n  \n   /**\n   * @name CategoriesManagementData#postCategoriesRecord\n   * @type {Function}\n   * @description Create categories\n   \n   * @param {CategoriesManagementData.Category-ITEM} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link CategoriesManagementData.CategoryId} on success  or rejects with data of {@link CategoriesManagementData.Category-BAD-REQUEST}, {@link CategoriesManagementData.Category-INTERNAL-SERVER-ERROR} on error\n   *\n   * @example\n   * categoriesManagementData\n   *  .postCategoriesRecord(data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function postCategoriesRecord(data, headers) {\n    const url = `${baseUri}${version}/categories`;\n\n    return httpClient({\n      method: 'POST',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name CategoriesManagementData#getCategories\n   * @type {Function}\n   * @description Retrieve list of categories\n   \n   * @param {?Object} params Map of query parameters.\n     \n   * @param {?string} params.categoryId Primary Key Internal Category Id.\n     \n   * @param {?string} params.categoryName backbase specific category.\n     \n   * @param {?string} params.categoryType Specific code of the group the category type belongs to this to be mapped to in integration.\n     \n   * @param {?string} params.subCategoryName subCategoryName.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as {@link CategoriesManagementData.Category-LIST} on success  or rejects with data of {@link CategoriesManagementData.Category-BAD-REQUEST}, {@link CategoriesManagementData.Category-NOT-FOUND}, {@link CategoriesManagementData.Category-INTERNAL-SERVER-ERROR} on error\n   *\n   * @example\n   * categoriesManagementData\n   *  .getCategories(params, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function getCategories(params, headers) {\n    const url = `${baseUri}${version}/categories`;\n\n    return httpClient({\n      method: 'GET',\n      url,\n      \n      params: params || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name CategoriesManagementData#deleteCategoriesRecord\n   * @type {Function}\n   * @description Delete category by Id\n   \n   * @param {string} id \n     \n   \n   * @param {?Object} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as void on success or rejects with data of {@link CategoriesManagementData.Category-BAD-REQUEST}, {@link CategoriesManagementData.Category-NOT-FOUND}, {@link CategoriesManagementData.Category-INTERNAL-SERVER-ERROR} on error\n   *\n   * @example\n   * categoriesManagementData\n   *  .deleteCategoriesRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function deleteCategoriesRecord(id, data, headers) {\n    const url = `${baseUri}${version}/categories/${id}`;\n\n    return httpClient({\n      method: 'DELETE',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n   /**\n   * @name CategoriesManagementData#putCategoriesRecord\n   * @type {Function}\n   * @description Update category by an Id\n   \n   * @param {string} id \n     \n   \n   * @param {CategoriesManagementData.Category-UPDATE} data Data to be sent as the request message data.\n     \n   \n   * @param {?Object} headers Map of custom header attributes.\n     \n   \n   * @returns {Promise.<Response>} Resolves data value as void on success or rejects with data of {@link CategoriesManagementData.Category-BAD-REQUEST}, {@link CategoriesManagementData.Category-NOT-FOUND}, {@link CategoriesManagementData.Category-INTERNAL-SERVER-ERROR} on error\n   *\n   * @example\n   * categoriesManagementData\n   *  .putCategoriesRecord(id, data, headers)\n   *  .then(function(result){\n   *    console.log('headers', result.headers)\n   *    console.log('data', result.data);\n   *  });\n   */\n  function putCategoriesRecord(id, data, headers) {\n    const url = `${baseUri}${version}/categories/${id}`;\n\n    return httpClient({\n      method: 'PUT',\n      url,\n      \n      data: data || {},\n      \n      headers: headers || {},\n    }).then(parse)\n    .catch(err => { throw parse(err); });\n  }\n  \n\n  \n  /**\n   * @description\n   * Schema data. Keys of the object are names of the POST and PUT methods\n   *\n   * Note: The schema is not strictly a JSON schema. It is a whitelisted set of\n   * keys for each object property. The keys that are exposed are meant for validation\n   * purposes.\n   *\n   * The full list of *possible* keys for each property is:\n   * type, minimum, maximum, minLength, maxLength, pattern, enum, format, default,\n   * properties, items, minItems, maxItems, uniqueItems and required.\n   *\n   * See http://json-schema.org/latest/json-schema-validation.html for more details\n   * on the meaning of these keys.\n   *\n   * The \"required\" array from JSON schema is tranformed into a \"required\" boolean\n   * on each property. This is for ease of use.\n   *\n   * @name CategoriesManagementData#schemas\n   * @type {Object}\n   */\n  const schemas = {};\n\n    \n  /**\n   * @description\n   * An object describing the JSON schema for the postCategoriesRecord method\n   *\n   * @name CategoriesManagementData#schemas.postCategoriesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"categoryId\": {\n      \"type\": \"integer\",\n      \"required\": true\n    },\n    \"transactionId\": {\n      \"type\": \"string\",\n      \"required\": false\n    },\n    \"categoryName\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Home\",\n        \"Health & Beauty\",\n        \"Groceries\",\n        \"Eating & Drinking\",\n        \"Transportation\",\n        \"Shopping\",\n        \"Hobbies & Entertainment\",\n        \"Bills & Utilities\",\n        \"Income\",\n        \"Other Income\",\n        \"Savings\",\n        \"Transfer\",\n        \"Fees\",\n        \"Other\",\n        \"Uncategorized\"\n      ],\n      \"required\": true\n    },\n    \"iconLocation\": {\n      \"type\": \"string\",\n      \"required\": false\n    },\n    \"categoryType\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Expenses\",\n        \"Income\",\n        \"Transfer\",\n        \"Deferred Compensation\",\n        \"General\"\n      ],\n      \"required\": true\n    },\n    \"subCategoryName\": {\n      \"type\": \"string\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.postCategoriesRecord = definedTypes['CategoriesManagementData.Category-ITEM'];\n      \n  /**\n   * @description\n   * An object describing the JSON schema for the putCategoriesRecord method\n   *\n   * @name CategoriesManagementData#schemas.putCategoriesRecord\n   * @type {Object}\n   * @example\n   * {\n  \"properties\": {\n    \"categoryId\": {\n      \"type\": \"integer\",\n      \"required\": true\n    },\n    \"transactionId\": {\n      \"type\": \"string\",\n      \"required\": false\n    },\n    \"categoryName\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Home\",\n        \"Health & Beauty\",\n        \"Groceries\",\n        \"Eating & Drinking\",\n        \"Transportation\",\n        \"Shopping\",\n        \"Hobbies & Entertainment\",\n        \"Bills & Utilities\",\n        \"Income\",\n        \"Other Income\",\n        \"Savings\",\n        \"Transfer\",\n        \"Fees\",\n        \"Other\",\n        \"Uncategorized\"\n      ],\n      \"required\": true\n    },\n    \"iconLocation\": {\n      \"type\": \"string\",\n      \"required\": false\n    },\n    \"categoryType\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"Expenses\",\n        \"Income\",\n        \"Transfer\",\n        \"Deferred Compensation\",\n        \"General\"\n      ],\n      \"required\": true\n    },\n    \"subCategoryName\": {\n      \"type\": \"string\",\n      \"required\": false\n    }\n  }\n}\n   */\n      \n  schemas.putCategoriesRecord = definedTypes['CategoriesManagementData.Category-UPDATE'];\n      \n\n  /**\n   * @typedef Response\n   * @type {Object}\n   * @property {Object} data See method descriptions for possible return types\n   * @property {Function} headers Getter headers function\n   * @property {Number} status HTTP status code of the response.\n   * @property {String} statusText HTTP status text of the response.\n   */\n\n  return ({\n    \n    postCategoriesRecord,\n    \n    getCategories,\n    \n    deleteCategoriesRecord,\n    \n    putCategoriesRecord,\n    \n    schemas,\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./fe-dist/http-ng/data-bb-categories-management-http-ng/scripts/data-bb-categories-management-http.js"],"sourceRoot":""}
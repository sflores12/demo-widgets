{
  "_args": [
    [
      {
        "raw": "vendor-bb-uib-datepicker@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
        "scope": null,
        "escapedName": "vendor-bb-uib-datepicker",
        "name": "vendor-bb-uib-datepicker",
        "rawSpec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
        "spec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
        "type": "remote"
      },
      "/opt/jobs/collection-retail-banking-release-pipeline/workspace/dist"
    ]
  ],
  "_from": "vendor-bb-uib-datepicker@1.3.3-bb.3",
  "_id": "vendor-bb-uib-datepicker@1.3.3-bb.3",
  "_inCache": true,
  "_location": "/vendor-bb-uib-datepicker",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vendor-bb-uib-datepicker@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
    "scope": null,
    "escapedName": "vendor-bb-uib-datepicker",
    "name": "vendor-bb-uib-datepicker",
    "rawSpec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
    "spec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/collection-bb-blocks",
    "/ui-bb-calendar-popup-ng",
    "/vendor-bb-uib-datepicker-popup"
  ],
  "_resolved": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
  "_shasum": "0b7ced5897b48085ebba28a674d2de1bce62f334",
  "_shrinkwrap": null,
  "_spec": "vendor-bb-uib-datepicker@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-datepicker/-/vendor-bb-uib-datepicker-1.3.3-bb.3.tgz",
  "_where": "/opt/jobs/collection-retail-banking-release-pipeline/workspace/dist",
  "dependencies": {
    "vendor-bb-angular": "^1.5.8-bb.1",
    "vendor-bb-uib-dateparser": "^1.3.3-bb.3",
    "vendor-bb-uib-is-class": "^1.3.3-bb.3"
  },
  "description": "Angular UI Bootstrap datepicker component written in pure AngularJS  based on Bootstrap's markup and CSS.",
  "devDependencies": {},
  "main": "scripts/vendor-bb-uib-datepicker.js",
  "name": "vendor-bb-uib-datepicker",
  "optionalDependencies": {},
  "readme": "# vendor-bb-uib-datepicker\n\nAngular UI Bootstrap datepicker component written in pure AngularJS  based on Bootstrap's markup and CSS.\n\nThis component has been split from the complete\n<a href=\"http://angular-ui.github.io/bootstrap/versioned-docs/1.3.3/\">Angular UI\nBootstrap v1.3.3</a> and wrapped in a UMD block.\n\n## Imports\n\n* vendor-bb-angular\n* vendor-bb-uib-dateparser\n* vendor-bb-uib-is-class\n\n---\n\n## Exports\n\n### *default*\n\nThe angular module name\n\n**Type:** *string*\n\n---\n\n## Usage in Extensions\n\nUI Components must be declared as dependencies of extensions before they can be used:\n\n```javascript\n// extension scripts/index.js\nimport uibDatepickerKey from 'vendor-bb-uib-datepicker';\n\nexport const dependencyKeys = [\n  uibDatepickerKey,\n];\n```\n\n## Directive Usage\n\n<usage>\nOur datepicker is flexible and fully customizable.\n\nYou can navigate through days, months and years.\n\nThe datepicker has 3 modes:\n\n* `day` - In this mode you're presented with a 6-week calendar for a specified month.\n* `month` - In this mode you can select a month within a selected year.\n* `year` - In this mode you are presented with a range of years (20 by default).\n\n### uib-datepicker settings\n\n* `ng-model`\n  <small class=\"badge\">$</small>\n  <i class=\"glyphicon glyphicon-eye-open\"></i> -\n  The date object. Must be a Javascript `Date` object. You may use the `uibDateParser` service to assist in string-to-object conversion.\n\n* `ng-model-options`\n  <small class=\"badge\">$</small>\n  <small class=\"badge\">C</small>\n  _(Default: `{}`)_ -\n  Supported [angular ngModelOptions](https://docs.angularjs.org/api/ng/directive/ngModelOptions):\n  * allowInvalid\n  * timezone\n\n* `template-url`\n  _(Default: `uib/template/datepicker/datepicker.html`)_ -\n  Add the ability to override the template used on the component.\n\nApart from the previous settings, to configure the uib-datepicker you need to create an object in Javascript with all the options and use it on the `datepicker-options` attribute:\n\n* `datepicker-options`\n  <small class=\"badge\">$</small> -\n  An object to configure the datepicker in one place.\n\n  * `customClass ({date: date, mode: mode})` -\n    An optional expression to add classes based on passing an object with date and current mode properties.\n\n  * `dateDisabled ({date: date, mode: mode})` -\n    An optional expression to disable visible options based on passing an object with date and current mode properties.\n\n  * `datepickerMode`\n    <small class=\"badge\">C</small>\n    <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `day`)_ -\n    Current mode of the datepicker _(day|month|year)_. Can be used to initialize the datepicker in a specific mode.\n\n  * `formatDay`\n    <small class=\"badge\">C</small>\n    _(Default: `dd`)_ -\n    Format of day in month.\n\n  * `formatMonth`\n    <small class=\"badge\">C</small>\n    _(Default: `MMMM`)_ -\n    Format of month in year.\n\n  * `formatYear`\n    <small class=\"badge\">C</small>\n    _(Default: `yyyy`)_ -\n    Format of year in year range.\n\n  * `formatDayHeader`\n    <small class=\"badge\">C</small>\n    _(Default: `EEE`)_ -\n    Format of day in week header.\n\n  * `formatDayTitle`\n    <small class=\"badge\">C</small>\n    _(Default: `MMMM yyyy`)_ -\n    Format of title when selecting day.\n\n  * `formatMonthTitle`\n    <small class=\"badge\">C</small>\n    _(Default: `yyyy`)_ -\n    Format of title when selecting month.\n\n  * `initDate`\n    <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `null`)_ -\n    The initial date view when no model value is specified.\n\n  * `maxDate`\n    <small class=\"badge\">C</small>\n    <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `null`)_ -\n    Defines the maximum available date. Requires a Javascript Date object.\n\n  * `maxMode`\n    <small class=\"badge\">C</small>\n      <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `year`)_ -\n    Sets an upper limit for mode.\n\n  * `minDate`\n    <small class=\"badge\">C</small>\n    <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `null`)_ -\n    Defines the minimum available date. Requires a Javascript Date object.\n\n  * `minMode`\n    <small class=\"badge\">C</small>\n    <i class=\"glyphicon glyphicon-eye-open\"></i>\n    _(Default: `day`)_ -\n    Sets a lower limit for mode.\n\n  * `shortcutPropagation`\n    <small class=\"badge\">C</small>\n    _(Default: `false`)_ -\n    An option to disable the propagation of the keydown event.\n\n  * `showWeeks`\n    <small class=\"badge\">C</small>\n    _(Default: `true`)_ -\n    Whether to display week numbers.\n\n  * `startingDay`\n    <small class=\"badge\">C</small>\n    *(Default: `$locale.DATETIME_FORMATS.FIRSTDAYOFWEEK`)* -\n    Starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday).\n\n  * `yearRows`\n    <small class=\"badge\">C</small>\n    _(Default: `4`)_ -\n    Number of rows displayed in year selection.\n\n  * `yearColumns`\n    <small class=\"badge\">C</small>\n    _(Default: `5`)_ -\n  Number of columns displayed in year selection.\n\n### Keyboard support\n\nDepending on datepicker's current mode, the date may refer either to day, month or year. Accordingly, the term view refers either to a month, year or year range.\n\n * `Left`: Move focus to the previous date. Will move to the last date of the previous view, if the current date is the first date of a view.\n * `Right`: Move focus to the next date. Will move to the first date of the following view, if the current date is the last date of a view.\n * `Up`: Move focus to the same column of the previous row. Will wrap to the appropriate row in the previous view.\n * `Down`: Move focus to the same column of the following row. Will wrap to the appropriate row in the following view.\n * `PgUp`: Move focus to the same date of the previous view. If that date does not exist, focus is placed on the last date of the month.\n * `PgDn`: Move focus to the same date of the following view. If that date does not exist, focus is placed on the last date of the month.\n * `Home`: Move to the first date of the view.\n * `End`: Move to the last date of the view.\n * `Enter`/`Space`: Select date.\n * `Ctrl`+`Up`: Move to an upper mode.\n * `Ctrl`+`Down`: Move to a lower mode.\n * `Esc`: Will close popup, and move focus to the input.\n\n**Notes**\n\nIf the date a user enters falls outside of the min-/max-date range, a `dateDisabled` validation error will show on the form.\n\n---\n\n## Demo\n\nTo see all docs and a working demo, please refer to the\n<a href=\"http://angular-ui.github.io/bootstrap/versioned-docs/1.3.3/#/datepicker\" target=\"_blank\">official\ndocumentation</a> for this component.\n",
  "readmeFilename": "README.md",
  "version": "1.3.3-bb.3"
}

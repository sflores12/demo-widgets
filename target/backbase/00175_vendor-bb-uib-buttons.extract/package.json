{
  "_args": [
    [
      {
        "raw": "vendor-bb-uib-buttons@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
        "scope": null,
        "escapedName": "vendor-bb-uib-buttons",
        "name": "vendor-bb-uib-buttons",
        "rawSpec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
        "spec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
        "type": "remote"
      },
      "/opt/jobs/collection-retail-banking-release-pipeline/workspace/dist"
    ]
  ],
  "_from": "vendor-bb-uib-buttons@1.3.3-bb.3",
  "_id": "vendor-bb-uib-buttons@1.3.3-bb.3",
  "_inCache": true,
  "_location": "/vendor-bb-uib-buttons",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vendor-bb-uib-buttons@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
    "scope": null,
    "escapedName": "vendor-bb-uib-buttons",
    "name": "vendor-bb-uib-buttons",
    "rawSpec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
    "spec": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/collection-bb-blocks",
    "/ext-bb-income-spending-analysis-category-ng"
  ],
  "_resolved": "https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
  "_shasum": "b039bfd56deb04aaa3b74a3c94d0b31adc1ae979",
  "_shrinkwrap": null,
  "_spec": "vendor-bb-uib-buttons@https://artifacts.backbase.com/api/npm/npm-backbase/vendor-bb-uib-buttons/-/vendor-bb-uib-buttons-1.3.3-bb.3.tgz",
  "_where": "/opt/jobs/collection-retail-banking-release-pipeline/workspace/dist",
  "dependencies": {
    "vendor-bb-angular": "^1.5.8-bb.1"
  },
  "description": "Angular UI Bootstrap buttons component written in pure AngularJS  based on Bootstrap's markup and CSS.",
  "devDependencies": {},
  "main": "scripts/vendor-bb-uib-buttons.js",
  "name": "vendor-bb-uib-buttons",
  "optionalDependencies": {},
  "readme": "# vendor-bb-uib-buttons\n\nAngular UI Bootstrap buttons component written in pure AngularJS  based on Bootstrap's markup and CSS.\n\nThis component has been split from the complete\n<a href=\"http://angular-ui.github.io/bootstrap/versioned-docs/1.3.3/\">Angular UI\nBootstrap v1.3.3</a> and wrapped in a UMD block.\n\n## Imports\n\n* vendor-bb-angular\n\n\n---\n\n## Exports\n\n### *default*\n\nThe angular module name\n\n**Type:** *string*\n\n---\n\n## Usage in Extensions\n\nUI Components must be declared as dependencies of extensions before they can be used:\n\n```javascript\n// extension scripts/index.js\nimport uibButtonsKey from 'vendor-bb-uib-buttons';\n\nexport const dependencyKeys = [\n  uibButtonsKey,\n];\n```\n\n## Directive Usage\n\n<usage>\nWith the buttons directive, we can make a group of buttons behave like a set of checkboxes (`uib-btn-checkbox`) or behave like a set of radio buttons (`uib-btn-radio`).\n\n### uib-btn-checkbox settings\n\n* `btn-checkbox-false`\n  _(Default: `false`)_ -\n  Sets the value for the unchecked status.\n  \n* `btn-checkbox-true`\n  _(Default: `true`)_ -\n  Sets the value for the checked status.\n  \n* `ng-model`\n  <small class=\"badge\">$</small>\n  <i class=\"glyphicon glyphicon-eye-open\"></i> -\n  Model where we set the checkbox status. By default `true` or `false`.\n\n### uib-btn-radio settings\n\n* `ng-model`\n  <small class=\"badge\">$</small>\n  <i class=\"glyphicon glyphicon-eye-open\"></i> -\n  Model where we set the radio status. All radio buttons in a group should use the same `ng-model`.\n    \n* `uib-btn-radio` -\n  <small class=\"badge\">$</small>\n  Value to assign to the `ng-model` if we check this radio button.\n\n* `uib-uncheckable`\n  <small class=\"badge\">$</small>\n  _(Default: `null`)_ -\n  An expression that evaluates to a truthy or falsy value that determines whether the `uncheckable` attribute is present.\n  \n* `uncheckable`\n  <small class=\"badge\">B</small> -\n  Whether a radio button can be unchecked or not.\n  \n### Additional settings `uibButtonConfig`\n\n* `activeClass`\n  _(Default: `active`)_ -\n  Class to apply to the checked buttons.\n  \n* `toggleEvent`\n  _(Default: `click`)_ -\n  Event used to toggle the buttons.\n\n### Known issues\n\nTo use tooltips or popovers on elements within a `btn-group`, set the tooltip/popover `appendToBody` option to `true`. This is due to Bootstrap CSS styling. See [here](http://getbootstrap.com/components/#btn-groups) for more information.\n\n---\n\n## Demo\n\nTo see all docs and a working demo, please refer to the\n<a href=\"http://angular-ui.github.io/bootstrap/versioned-docs/1.3.3/#/buttons\" target=\"_blank\">official\ndocumentation</a> for this component.\n",
  "readmeFilename": "README.md",
  "version": "1.3.3-bb.3"
}

{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 779b1f71a92f6bec7e36?1313****","webpack:///./ext-bbm-notification-center-list-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01***","webpack:///external \"ui-bb-date-label-filter-ng\"?be82***","webpack:///./ext-bbm-notification-center-list-ng/scripts/index.js","webpack:///external \"ui-bbm-scroll-ng\"","webpack:///./ext-bbm-notification-center-list-ng/scripts/helpers.js"],"names":["helpers","dependencyKeys","LevelIconClass","ALERT","WARNING","INFO","SUCCESS","DateLabelKey","NOW","TODAY","YESTERDAY","$filter","normalizeDate","filteredDate","dateStr","replace","getLevelIcon","level","getDateLabel","date","notification","createdOn","labelKey","resultDateLabel","isOpen","hasNotifications","Boolean","ctrl","state","notifications","data","length","showLoadingState","loading","showLoadMoreLoading","showLoadMore","showErrorState","error","showEmptyState"],"mappings":"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","file":"ext-bbm-notification-center-list-ng/scripts/ext-bbm-notification-center-list-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-notification-center-list-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-date-label-filter-ng\", \"ui-bbm-scroll-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-notification-center-list-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-scroll-ng\"));\n\telse\n\t\troot[\"ext-bbm-notification-center-list-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-date-label-filter-ng\"], root[\"ui-bbm-scroll-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_30__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 779b1f71a92f6bec7e36","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-notification-center-list-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 4\n// module chunks = 0 1 2 3 4 5","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 5\n// module chunks = 0 1 2 3 4 5","/**\n * @module ext-bbm-notification-center-list-ng\n *\n * @description\n * Mobile extension for a notiication center list.\n *\n * @example\n * <!-- Contact widget model.xml -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-notification-list-ng</value>\n * </property>\n */\nimport uiBbI18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbDateLabelFilterKey from 'ui-bb-date-label-filter-ng';\nimport uiBbmScrollNgKey from 'ui-bbm-scroll-ng';\n\nimport extHelpers from './helpers';\n\nexport const helpers = extHelpers;\n\nexport const dependencyKeys = [\n  uiBbI18nNgKey,\n  uiBbDateLabelFilterKey,\n  uiBbmScrollNgKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-scroll-ng\"\n// module id = 30\n// module chunks = 4","import { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\nconst LevelIconClass = {\n  ALERT: 'fa-exclamation-circle',\n  WARNING: 'fa-exclamation-triangle',\n  INFO: 'fa-info-circle',\n  SUCCESS: 'fa-check-circle',\n};\n\nconst DateLabelKey = {\n  [TimePeriod.NOW]: 'calendar.label.now',\n  [TimePeriod.TODAY]: 'calendar.label.today',\n  [TimePeriod.YESTERDAY]: 'calendar.label.yesterday',\n};\n\n/**\n * @description\n * Helpers for ext-bbm-notification-center-list-ng\n *\n * @name Helpers\n * @type {Object}\n */\nexport default ({ $filter }) => {\n  /**\n   * The standard ISO-8601 supports the following formats for time offsets:\n   * ±[hh]:[mm], ±[hh][mm], or ±[hh]\n   * However iOS does support only ±[hh]:[mm] format.\n   * Thus we make sure that the given date string has the following\n   * variation of the ISO-8601 standard:\n   * \"YYYY-MM-DDThh:mm:ss.SSS±hh:mm\"\n   * @name normalizeDate\n   * @type {function}\n   *\n   * @param dateStr\n   * @inner\n   */\n  const normalizeDate = dateStr => {\n    const filteredDate = $filter('date')(dateStr, 'yyyy-MM-ddTHH:mm:ss.sssZ');\n    return filteredDate.replace(/(\\d{2}):?(\\d{2})$/, '$1:$2');\n  };\n\n  /**\n   * @description\n   * Returns CSS class for icon according to the given level.\n   *\n   * @name Helpers#getLevelIcon\n   * @type {function}\n   *\n   * @param {string} level Notification level\n   * @return {string}\n   */\n  const getLevelIcon = level => LevelIconClass[level];\n\n  /**\n   * @description\n   * Returns a date label for the given notification.\n   *\n   * @name Helpers#getDateLabel\n   * @type {function}\n   *\n   * @param {module:model-bb-notifications-ng.Notification} notification\n   * @return {string}\n   */\n  const getDateLabel = notification => {\n    const date = normalizeDate(notification.createdOn);\n    let labelKey;\n    let resultDateLabel;\n\n    if (!notification.isOpen) {\n      labelKey = DateLabelKey[$filter('dateLabel')(date)];\n      if (labelKey) {\n        if (labelKey === DateLabelKey[TimePeriod.NOW]) {\n          resultDateLabel = $filter('i18n')(labelKey);\n        } else {\n          resultDateLabel = $filter('i18n')(labelKey) +\n            $filter('i18n')('calendar.label.at') +\n            $filter('date')(date, 'hh:mm');\n        }\n      }\n    }\n\n    return labelKey ? resultDateLabel : $filter('date')(date, 'd MMMM yyyy');\n  };\n\n  /**\n   * @description\n   * Checks if there are notifications.\n   *\n   * @name Helpers#hasNotifications\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const hasNotifications = ctrl => Boolean(\n    ctrl.state.notifications.data &&\n    ctrl.state.notifications.data.length\n  );\n\n  /**\n   * @description\n   * Checks for the loading state.\n   *\n   * @name Helpers#showLoadingState\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const showLoadingState = ctrl => (\n    ctrl.state.notifications.loading && !hasNotifications(ctrl)\n  );\n\n  /**\n   * @description\n   * Checks for the load more's loading state.\n   *\n   * @name Helpers#showLoadMoreLoading\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const showLoadMoreLoading = ctrl => (\n    ctrl.state.notifications.loading && hasNotifications(ctrl)\n  );\n\n  /**\n   * @description\n   * Checks for the load more states.\n   *\n   * @name Helpers#showLoadMore\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const showLoadMore = ctrl => (\n    showLoadMoreLoading(ctrl)\n  );\n\n  /**\n   * @description\n   * Checks for the error state.\n   *\n   * @name Helpers#showErrorState\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const showErrorState = ctrl => (\n    ctrl.state.notifications.error &&\n    !ctrl.state.loading &&\n    !hasNotifications(ctrl)\n  );\n\n  /**\n   * @description\n   * Checks for the empty state.\n   *\n   * @name Helpers#showEmptyState\n   * @type {function}\n   *\n   * @param {module:widget-bbm-notification-center-ng.ListController} ctrl\n   * @return {boolean}\n   */\n  const showEmptyState = ctrl => (\n    Boolean(ctrl.state.notifications.data && !ctrl.state.notifications.data.length) &&\n    !ctrl.state.notifications.error &&\n    !ctrl.state.loading\n  );\n\n  return {\n    getLevelIcon,\n    getDateLabel,\n    hasNotifications,\n    showLoadingState,\n    showErrorState,\n    showEmptyState,\n    showLoadMore,\n    showLoadMoreLoading,\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-notification-center-list-ng/scripts/helpers.js"],"sourceRoot":""}
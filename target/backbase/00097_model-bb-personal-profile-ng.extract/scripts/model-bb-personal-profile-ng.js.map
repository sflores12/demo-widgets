{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***","webpack:///webpack/bootstrap e9a8cf4452f4666f063d?191d***","webpack:///./model-bb-personal-profile-ng/model.xml","webpack:///./model-bb-personal-profile-ng/scripts/index.js","webpack:///external \"vendor-bb-angular\"","webpack:///external \"data-bb-user-http-ng\"","webpack:///./model-bb-personal-profile-ng/scripts/personal-profile.js","webpack:///external \"lib-bb-model-errors\""],"names":["moduleKey","modelPersonalProfileKey","module","factory","name","personalProfileModel","Promise","userData","load","getUsersRecord","then","response","data","catch","httpErrorResponse","loadUsersProfile","getUsersProfilesRecord","updateUsersProfile","putUsersProfilesRecord","user","id"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;;;;;;;;ACmBA;;;;AAEA;;;;AAIA;;;;;;AAEO,KAAMA,gCAAY,8BAAlB,C,CA3BP;;;;;;;;;;;;;;;;;;;AA4BO,KAAMC,4DAA0B,oCAAhC;;mBAEQ,0BACZC,MADY,CACL,8BADK,EAC2B,4BAD3B,EAKZC,OALY,CAKJF,uBALI,EAKqB,CAChC,IADgC;AAGhC;AAHgC,2BALrB,EAYZG,I;;;;;;;AC1CH,iD;;;;;;;ACAA,iD;;;;;;;;;;;;mBCcwBC,oB;;AAbxB;;AAEA;;;;;;;;;;;AAWe,UAASA,oBAAT,CAA8BC,OAA9B,EAAuCC,QAAvC,EAAiD;AAC9D;;;;;;;;;AASA,YAASC,IAAT,GAAgB;AACd;AACA,YAAOD,SAASE,cAAT,CAAwB,SAAxB,EACJC,IADI,CACC;AAAA,cAAYC,SAASC,IAArB;AAAA,MADD,EAEJC,KAFI,CAEE,6BAAqB;AAC1B,aAAM,qCAAcC,iBAAd,CAAN;AACD,MAJI,CAAP;AAKD;;AAED;;;;;;;;;AASA,OAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA;AACvB;AACAR,gBAASS,sBAAT,CAAgC,SAAhC,EACGN,IADH,CACQ;AAAA,gBAAYC,SAASC,IAArB;AAAA,QADR,EAEGC,KAFH,CAES,6BAAqB;AAC1B,eAAM,qCAAcC,iBAAd,CAAN;AACD,QAJH;AAFuB;AAAA,IAAzB;;AAUA;;;;;;;;;;AAUA,OAAMG,qBAAqB,SAArBA,kBAAqB;AAAA,YACzBV,SAASW,sBAAT,CAAgCC,KAAKC,EAArC,EAAyCD,IAAzC,EACGT,IADH,CACQ;AAAA,cAAYC,SAASC,IAArB;AAAA,MADR,EAEGC,KAFH,CAES,6BAAqB;AAC1B,aAAM,qCAAcC,iBAAd,CAAN;AACD,MAJH,CADyB;AAAA,IAA3B;;AAQA;;;;;;;AAOA,UAAO;AACLN,eADK;AAELO,uCAFK;AAGLE;AAHK,IAAP;AAKD;;AAED;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;AAMC;;;;;;AAMA;;;;;;;;;;;;;;;;;;;AApHD,gE;;;;;;;ACAA,iD","file":"model-bb-personal-profile-ng/scripts/model-bb-personal-profile-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"data-bb-user-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"model-bb-personal-profile-ng\", [\"vendor-bb-angular\", \"data-bb-user-http-ng\", \"lib-bb-model-errors\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"model-bb-personal-profile-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"data-bb-user-http-ng\"), require(\"lib-bb-model-errors\"));\n\telse\n\t\troot[\"model-bb-personal-profile-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"data-bb-user-http-ng\"], root[\"lib-bb-model-errors\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_22__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e9a8cf4452f4666f063d","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./model-bb-personal-profile-ng/model.xml\n// module id = 0\n// module chunks = 4","/**\n * @module model-bb-personal-profile-ng\n *\n * @description\n * Personal profile widget model.\n *\n * @usage\n * import modelPersonalProfileModuleKey, {\n *   modelPersonalProfileKey,\n * } from 'model-bb-personal-profile-ng';\n *\n * angular.module('widget-bb-payment-ng', [\n *   modelPersonalProfileModuleKey,\n * ])\n * .controller('PersonalProfileController', [\n *   modelPersonalProfileKey,\n *   ...,\n * ])\n */\nimport angular from 'vendor-bb-angular';\n\nimport userDataModuleKey, {\n  userDataKey,\n} from 'data-bb-user-http-ng';\n\nimport PersonalProfileModel from './personal-profile';\n\nexport const moduleKey = 'model-bb-personal-profile-ng';\nexport const modelPersonalProfileKey = 'model-bb-personal-profile-ng:model';\n\nexport default angular\n  .module('model-bb-personal-profile-ng', [\n    userDataModuleKey,\n  ])\n\n  .factory(modelPersonalProfileKey, [\n    '$q',\n    userDataKey,\n    /* into */\n    PersonalProfileModel,\n  ])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-personal-profile-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 19\n// module chunks = 4 5 6","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"data-bb-user-http-ng\"\n// module id = 20\n// module chunks = 4","/* eslint max-len: [\"error\", 100, { \"ignoreComments\": true }]*/\nimport { fromHttpError } from 'lib-bb-model-errors';\n\n/**\n * @description\n * Model for widget-bb-personal-profile-ng\n *\n * @param {object} Promise An ES2015 compatible `Promise` object.\n * @param {UserData} userData -\n * A Data module to allow access to user data.\n *\n * type {function}\n * @return {UserModel}\n */\nexport default function personalProfileModel(Promise, userData) {\n  /**\n   * @name PersonalProfileModel#load\n   * @type {function}\n   *\n   * @description\n   * Loads the data for the current logged in user\n   *\n   * @returns {Promise<User, module:lib-bb-model-errors.ModelError>} A Promise with the user's data.\n   */\n  function load() {\n    // @TODO: change hardcoded id to the real user id from the session\n    return userData.getUsersRecord('userId1')\n      .then(response => response.data)\n      .catch(httpErrorResponse => {\n        throw fromHttpError(httpErrorResponse);\n      });\n  }\n\n  /**\n   * @name PersonalProfileModel#loadUsersProfile\n   * @type {function}\n   *\n   * @description\n   * Loads the data for the current logged in user\n   *\n   * @returns {Promise<UserProfile, module:lib-bb-model-errors.ModelError>} A Promise with the user's data.\n   */\n  const loadUsersProfile = () => (\n    // @TODO: change hardcoded id to the real user id from the session\n    userData.getUsersProfilesRecord('userId3')\n      .then(response => response.data)\n      .catch(httpErrorResponse => {\n        throw fromHttpError(httpErrorResponse);\n      })\n  );\n\n\n  /**\n   * @name PersonalProfileModel#updateUsersProfile\n   * @type {function}\n   *\n   * @description\n   * Updates a user\n   *\n   * @param {UserProfile} user User data\n   * @returns {Promise<UserProfile, module:lib-bb-model-errors.ModelError>} A Promise with the user's data.\n   */\n  const updateUsersProfile = user => (\n    userData.putUsersProfilesRecord(user.id, user)\n      .then(response => response.data)\n      .catch(httpErrorResponse => {\n        throw fromHttpError(httpErrorResponse);\n      })\n  );\n\n  /**\n   * @name PersonalProfileModel\n   * @type {Object}\n   *\n   * @description\n   * Personal Profile model service\n   */\n  return {\n    load,\n    loadUsersProfile,\n    updateUsersProfile,\n  };\n}\n\n/**\n * @typedef {Object} User\n * @property {string} bbid - Internal Backbase identifier\n * @property {string} exid - External bank identifier\n * @property {string} entityId - External entity identifier\n * @property {string} id - Internally used unique identification of the user\n * @property {string} imageAvatar - Base64 encoded picture of the user\n * @property {string} firstName - The given name of a user\n * @property {string} lastName - The given family name of a user\n * @property {string} dateOfBirth - The date the user was born in format \"DD-MM-YYYY\"\n * @property {string} street - Street name (part of the address)\n * @property {string} houseNumber - House number (part of the address)\n * @property {string} postalCode - Postal code (part of the address)\n * @property {string} area - Area (part of the address)\n * @property {string} city - City (part of the address)\n * @property {string} citizenship - Country where the user is citizen of\n * @property {string} email - The primary email address of the user\n * @property {array} phone - The phone numbers where the user can be reached\n */\n\n/**\n * @typedef {Object} Email\n * @property {string} value - The email address of the user\n * @property {boolean} primary - The flag to identidy if an email is primary\n */\n\n /**\n * @typedef {Object} Phone\n * @property {string} value - The phone number of the user\n * @property {boolean} primary - The flag to identidy if a phone is primary\n */\n\n /**\n * @typedef {Object} UserProfile\n * @property {string} bbid - Internal Backbase identifier\n * @property {string} exid - External bank identifier\n * @property {string} entityId - External entity identifier\n * @property {string} id - Internally used unique identification of the user\n * @property {string} imageAvatar - Base64 encoded picture of the user\n * @property {string} firstName - The given name of a user\n * @property {string} lastName - The given family name of a user\n * @property {string} dateOfBirth - The date the user was born in format \"DD-MM-YYYY\"\n * @property {string} street - Street name (part of the address)\n * @property {string} houseNumber - House number (part of the address)\n * @property {string} postalCode - Postal code (part of the address)\n * @property {string} area - Area (part of the address)\n * @property {string} city - City (part of the address)\n * @property {string} citizenship - Country where the user is citizen of\n * @property {array<Email>} emails - Email adresses of the user\n * @property {array<Phone>} phones - Phone numbers where the user can be reached\n */\n\n\n\n// WEBPACK FOOTER //\n// ./model-bb-personal-profile-ng/scripts/personal-profile.js","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 22\n// module chunks = 4"],"sourceRoot":""}
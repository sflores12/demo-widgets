{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///webpack/bootstrap ba9372d13c966203e28a?ccfa*****","webpack:///./widget-bb-income-spending-analysis-category-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114**","webpack:///external \"lib-bb-widget-ng\"?84ad*","webpack:///external \"lib-bb-model-errors\"?7567*","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/index.js","webpack:///external \"lib-bb-event-bus-ng\"","webpack:///external \"lib-bb-currency-ng\"","webpack:///external \"model-bb-income-spending-analysis-category-ng\"","webpack:///external \"model-bb-turnovers-ng\"","webpack:///external \"lib-bb-widget-extension-ng\"","webpack:///external \"lib-bb-extension-helpers-ng\"","webpack:///external \"lib-bb-intent-ng\"","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/controller.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/message.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/constants.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/default-hooks.js","webpack:///./widget-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"names":["moduleKey","hooksKey","helpersKey","module","factory","$compile","$rootScope","bus","getRule","controller","run","widget","publish","id","getId","name","IncomeSpendingAnalysisCategoryController","PRODUCT_SELECTED","PRODUCTS_SELECTED","ANALYSIS_CATEGORY_LOAD_FAILED","PERIOD_START_CHANGED","PERIOD_END_CHANGED","hooks","helpers","model","turnoversModel","bbIntent","$ctrl","analysisIndicator","getStringPreference","isSpendingAnalysis","intents","selectAnalysisCategoryItem","create","SELECT_ANALYSIS_ITEM","selectAnalysisCategoryItemDeprecated","SELECT_ANALYSIS_ITEM_DEPRECATED","init","errorMessage","code","E_PARAMS","setSelectedAnalysisItem","item","selectedAnalysisItem","onSelectedItemChanged","updateAnalysisCategories","validateAnalysisParameters","onAnalysisDataUpdate","creditDebitIndicator","arrangementIds","selectedProducts","map","product","periodStartDate","periodEndDate","then","loadAnalysisData","items","processAnalysisCategoryItems","loaded","series","processAnalysisCategorySeries","transformToSeries","catch","error","processLoadError","updateTurnovers","validateTurnoversParameters","onTurnoversUpdate","intervalDuration","intervalStartDay","loadTurnovers","turnoversItems","processTurnoverResponse","turnoversSeries","processTurnoverSeries","updateProductsSelected","processSelectedProducts","isFirstProductDefault","isMultipleAccount","setSelectedProducts","setSelectedProduct","onPeriodStartDateChanged","startDate","onPeriodEndDateChanged","endDate","onProductSelected","onProductsSelected","products","initProductSelection","getSelectedProducts","getSelectedProduct","selected","bindEvents","subscribe","selection","debounce","accountSelectionDebounce","initPeriodData","defaultPeriodStart","defaultPeriodEnd","updateProductsList","getFromStorage","getProductsArray","processProductsList","$onInit","isLoading","Object","assign","CURRENT_DATE_OBJECT","Date","CURRENT_YEAR","getFullYear","CURRENT_MONTH","getMonth","ANALYSIS_INDICATOR_PREF","SPENDING_ANALYSIS_INDICATOR","MS_IN_MIN","DEFAULT_PERIOD_START","DEFAULT_PERIOD_END","ACCOUNT_CHANGE_DEBOUNCE","Intent","DBIT","CRDT","TURNOVERS_DATA_KEY","data","params","selectedProduct","getTime","getTimezoneOffset","toISOString","slice","$timeout","current","callback","time","cancel"],"mappings":"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","file":"widget-bb-income-spending-analysis-category-ng/scripts/widget-bb-income-spending-analysis-category-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-currency-ng\"), require(\"model-bb-income-spending-analysis-category-ng\"), require(\"model-bb-turnovers-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-intent-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"widget-bb-income-spending-analysis-category-ng\", [\"vendor-bb-angular\", \"lib-bb-widget-ng\", \"lib-bb-model-errors\", \"lib-bb-event-bus-ng\", \"lib-bb-currency-ng\", \"model-bb-income-spending-analysis-category-ng\", \"model-bb-turnovers-ng\", \"lib-bb-widget-extension-ng\", \"lib-bb-extension-helpers-ng\", \"lib-bb-intent-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"widget-bb-income-spending-analysis-category-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-widget-ng\"), require(\"lib-bb-model-errors\"), require(\"lib-bb-event-bus-ng\"), require(\"lib-bb-currency-ng\"), require(\"model-bb-income-spending-analysis-category-ng\"), require(\"model-bb-turnovers-ng\"), require(\"lib-bb-widget-extension-ng\"), require(\"lib-bb-extension-helpers-ng\"), require(\"lib-bb-intent-ng\"));\n\telse\n\t\troot[\"widget-bb-income-spending-analysis-category-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-widget-ng\"], root[\"lib-bb-model-errors\"], root[\"lib-bb-event-bus-ng\"], root[\"lib-bb-currency-ng\"], root[\"model-bb-income-spending-analysis-category-ng\"], root[\"model-bb-turnovers-ng\"], root[\"lib-bb-widget-extension-ng\"], root[\"lib-bb-extension-helpers-ng\"], root[\"lib-bb-intent-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_28__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_40__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_43__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ba9372d13c966203e28a","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./widget-bb-income-spending-analysis-category-ng/model.xml\n// module id = 0\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 22\n// module chunks = 3 4 5 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-ng\"\n// module id = 26\n// module chunks = 3 4 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_28__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-model-errors\"\n// module id = 28\n// module chunks = 3 4 6 7","/**\n * @module widget-bb-income-spending-analysis-category-ng\n *\n * @description\n * Income/Spending analysis by category widget\n *\n * @usage\n * <div ng-controller=\"IncomeSpendingAnalysisCategoryController as $ctrl\">\n *   <ui-bb-chartjs-chart-donut-ng\n *     data-series=\"$ctrl.series\"\n *   ></ui-bb-chartjs-chart-donut-ng>\n * </div>\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport widgetModuleKey, { widgetKey } from 'lib-bb-widget-ng';\nimport eventBusModuleKey, { eventBusKey } from 'lib-bb-event-bus-ng';\n\nimport libBbCurrencyNgKey, {\n  bbCurrencyRuleKey,\n} from 'lib-bb-currency-ng';\n\nimport modelIncomeSpendingAnalysisCategoryModuleKey, {\n  modelIncomeSpendingAnalysisCategoryKey,\n} from 'model-bb-income-spending-analysis-category-ng';\n\nimport modelTurnoversModuleKey, { modelTurnoversKey } from 'model-bb-turnovers-ng';\n\nimport extendHooks from 'lib-bb-widget-extension-ng';\n\nimport bbExtensionHelpersModuleKey, {\n  extensionHelpersContextKey,\n} from 'lib-bb-extension-helpers-ng';\n\nimport intentModuleKey, { bbIntentKey } from 'lib-bb-intent-ng';\n\nimport Controller from './controller';\nimport defaultHooks from './default-hooks';\nimport helpers from './helpers';\n\nconst moduleKey = 'widget-bb-income-spending-analysis-category-ng';\nconst hooksKey = `${moduleKey}:hooks`;\nconst helpersKey = `${moduleKey}:helpers`;\n\nexport default angular\n  .module(moduleKey, [\n    widgetModuleKey,\n    eventBusModuleKey,\n    intentModuleKey,\n\n    modelIncomeSpendingAnalysisCategoryModuleKey,\n    modelTurnoversModuleKey,\n    libBbCurrencyNgKey,\n    bbExtensionHelpersModuleKey,\n  ])\n\n  .factory(extensionHelpersContextKey, [\n    '$compile',\n    '$rootScope',\n    eventBusKey,\n    bbCurrencyRuleKey,\n    ($compile, $rootScope, bus, getRule) => ({\n      $compile,\n      $rootScope,\n      bus,\n      getRule,\n    }),\n  ])\n\n  .factory(hooksKey, extendHooks(defaultHooks))\n\n  .factory(helpersKey, [\n    '$timeout',\n    helpers,\n  ])\n\n  .controller('IncomeSpendingAnalysisCategoryController', [\n    // dependencies to inject\n    eventBusKey,\n    hooksKey,\n    helpersKey,\n    modelIncomeSpendingAnalysisCategoryKey,\n    modelTurnoversKey,\n    bbIntentKey,\n    widgetKey,\n    /* into */\n    Controller,\n  ])\n\n  .run([eventBusKey, widgetKey, (bus, widget) => {\n    bus.publish('cxp.item.loaded', {\n      id: widget.getId(),\n    });\n  }])\n\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-event-bus-ng\"\n// module id = 37\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_38__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-currency-ng\"\n// module id = 38\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-income-spending-analysis-category-ng\"\n// module id = 39\n// module chunks = 6","module.exports = __WEBPACK_EXTERNAL_MODULE_40__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"model-bb-turnovers-ng\"\n// module id = 40\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-widget-extension-ng\"\n// module id = 41\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-extension-helpers-ng\"\n// module id = 42\n// module chunks = 6 7","module.exports = __WEBPACK_EXTERNAL_MODULE_43__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-intent-ng\"\n// module id = 43\n// module chunks = 6 7","/**\n * @module widget-bb-income-spending-analysis-category-ng\n * @name IncomeSpendingAnalysisCategoryController\n *\n * @description\n * Income/Spending analysis by category\n */\n\nimport { E_AUTH, E_CONNECTIVITY, E_USER } from 'lib-bb-model-errors';\nimport Message from './message';\n\nimport {\n  Intent,\n  ANALYSIS_INDICATOR_PREF,\n  SPENDING_ANALYSIS_INDICATOR,\n  TURNOVERS_DATA_KEY,\n} from './constants';\n\nconst {\n  PRODUCT_SELECTED,\n  PRODUCTS_SELECTED,\n  ANALYSIS_CATEGORY_LOAD_FAILED,\n  PERIOD_START_CHANGED,\n  PERIOD_END_CHANGED,\n} = Message;\n\nexport default function IncomeSpendingAnalysisCategoryController(\n  bus,\n  hooks,\n  helpers,\n  model,\n  turnoversModel,\n  bbIntent,\n  widget\n) {\n  const $ctrl = this;\n\n  /**\n   * @name analysisIndicator\n   * @type {string}\n   * @inner\n   * @description\n   * Credit/Debit indicator that will be used for analysis\n   */\n  const analysisIndicator =\n    widget.getStringPreference(ANALYSIS_INDICATOR_PREF, SPENDING_ANALYSIS_INDICATOR);\n\n  /**\n   * @name isSpendingAnalysis\n   * @type {function}\n   * @description\n   * Is current analysis spending analysis\n   * @returns {boolean}\n   */\n  const isSpendingAnalysis = () => analysisIndicator === SPENDING_ANALYSIS_INDICATOR;\n\n  /**\n   * @description\n   * A set of intents that the controller uses or handles\n   *\n   * @name intents\n   * @type {Object}\n   * @inner\n   */\n  const intents = {};\n\n  /**\n   * @description\n   * The intent to select an analysis category item\n   *\n   * @name intents#selectAnalysisCategoryItem\n   * @type {function}\n   * @inner\n   */\n  intents.selectAnalysisCategoryItem =\n    bbIntent.create(Intent.SELECT_ANALYSIS_ITEM[analysisIndicator]);\n\n  /**\n   * @description\n   * Deprecated intent to select an analysis category item\n   *\n   * @name intents#selectAnalysisCategoryItemDeprecated\n   * @type {function}\n   * @inner\n   */\n  intents.selectAnalysisCategoryItemDeprecated =\n    bbIntent.create(Intent.SELECT_ANALYSIS_ITEM_DEPRECATED);\n\n  bbIntent.init(() => {});\n\n  /**\n   * @description\n   * Converts error code to error message translation key\n   *\n   * @inner\n   * @name errorMessage\n   * @type {function}\n   * @param {string} code Error code\n   * @returns {string} Error message translation key\n   */\n  const errorMessage = (code) => ({\n    [E_AUTH]: 'error.load.auth',\n    [E_CONNECTIVITY]: 'error.load.connectivity',\n    [E_USER]: 'error.load.user',\n    [model.E_PARAMS]: model.E_PARAMS,\n  }[code] || 'error.load.unexpected');\n\n  /**\n   * @description\n   * Setter for the selected analysis category.\n   * It creates an intent 'view.account.category.transactions'\n   * that can be handled by transaction widget\n   *\n   * @name setSelectedAnalysisItem\n   * @param {any} item selected item\n   * @type {function}\n   * @returns {void}\n   */\n  const setSelectedAnalysisItem = (item) => {\n    $ctrl.selectedAnalysisItem = hooks.onSelectedItemChanged(item);\n    intents.selectAnalysisCategoryItem($ctrl.selectedAnalysisItem);\n    intents.selectAnalysisCategoryItemDeprecated($ctrl.selectedAnalysisItem);\n  };\n\n  /**\n   * Updates analysis items list based on selected product\n   *\n   * @name updateAnalysisCategories\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateAnalysisCategories = () =>\n    model.validateAnalysisParameters(hooks.onAnalysisDataUpdate({\n      creditDebitIndicator: analysisIndicator,\n      arrangementIds: $ctrl.selectedProducts.map(product => product.id),\n      periodStartDate: $ctrl.periodStartDate,\n      periodEndDate: $ctrl.periodEndDate,\n    }))\n    .then(model.loadAnalysisData)\n    .then(loaded => {\n      $ctrl.items = hooks.processAnalysisCategoryItems(loaded);\n      $ctrl.series = hooks.processAnalysisCategorySeries(model.transformToSeries(loaded), loaded);\n      setSelectedAnalysisItem(null);\n    })\n    .catch(error => {\n      $ctrl.error = hooks.processLoadError(errorMessage(error.code));\n      bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n    });\n\n  /**\n   * Updates turnovers list based on selected product\n   *\n   * @inner\n   * @name updateTurnovers\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateTurnovers = () => turnoversModel.validateTurnoversParameters(hooks.onTurnoversUpdate({\n    arrangementIds: $ctrl.selectedProducts.map(product => product.id),\n    periodStartDate: $ctrl.periodStartDate,\n    periodEndDate: $ctrl.periodEndDate,\n    intervalDuration: $ctrl.intervalDuration || 'MONTH',\n    intervalStartDay: $ctrl.intervalStartDay || 1,\n  }))\n  .then(turnoversModel.loadTurnovers)\n  .then(loaded => {\n    $ctrl.error = null;\n    $ctrl.turnoversItems = hooks.processTurnoverResponse(loaded);\n    $ctrl.turnoversSeries = hooks.processTurnoverSeries(\n      turnoversModel.transformToSeries(loaded, TURNOVERS_DATA_KEY[analysisIndicator]\n    ), loaded);\n  })\n  .catch(error => {\n    $ctrl.error = hooks.processLoadError(errorMessage(error.code));\n    bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n  });\n\n  /**\n   * @description\n   * Updates selected product\n   *\n   * @inner\n   * @name updateProductsSelected\n   * @type {function}\n   * @param {module:model-bb-product-summary-ng.Product[]} selectedProducts Products to select\n   */\n  const updateProductsSelected = selectedProducts => {\n    $ctrl.selectedProducts = hooks.processSelectedProducts(selectedProducts);\n    // if this widget doesn't do the change in selection there is no need to update storage\n    if (!model.isFirstProductDefault()) {\n      return;\n    }\n\n    if (model.isMultipleAccount()) {\n      model.setSelectedProducts($ctrl.selectedProducts);\n    } else {\n      model.setSelectedProduct($ctrl.selectedProducts[0]);\n    }\n  };\n\n  /**\n   * @description\n   * Handler to be called on period start date change\n   *\n   * @name onPeriodStartDateChanged\n   * @type {function}\n   * @param {string} startDate Date as string in format yyyy-mm-dd\n   * @returns {void}\n   */\n  const onPeriodStartDateChanged = (startDate) => {\n    $ctrl.periodStartDate = startDate;\n    bus.publish(PERIOD_START_CHANGED, $ctrl.periodStartDate);\n  };\n\n  /**\n   * @description\n   * Handler to be called on period end date change\n   *\n   * @name onPeriodEndDateChanged\n   * @type {function}\n   * @param {string} endDate Date as string in format yyyy-mm-dd\n   * @returns {void}\n   */\n  const onPeriodEndDateChanged = (endDate) => {\n    $ctrl.periodEndDate = endDate;\n    bus.publish(PERIOD_END_CHANGED, $ctrl.periodEndDate);\n  };\n\n  /**\n   * @description\n   * Handler to be used on product selection, is using\n   * selected product value from {@link Hooks.processSelectedProducts} hook\n   *\n   * @name onProductSelected\n   * @type {function}\n   * @returns {void}\n   */\n  const onProductSelected = () => {\n    bus.publish(PRODUCT_SELECTED, {\n      product: $ctrl.selectedProducts[0],\n    });\n  };\n\n  /**\n   * @description\n   * Handler to be used on products selection, is using\n   * selected products value from {@link Hooks.processSelectedProducts} hook\n   *\n   * @name onProductsSelected\n   * @type {function}\n   * @returns {void}\n   */\n  const onProductsSelected = () => {\n    bus.publish(PRODUCTS_SELECTED, {\n      products: $ctrl.selectedProducts,\n    });\n  };\n\n  /**\n   * Reads product selection from storage\n   *\n   * @inner\n   * @name initProductSelection\n   * @type {function}\n   */\n  const initProductSelection = () => {\n    if (model.isMultipleAccount()) {\n      return model.getSelectedProducts()\n        .then(updateProductsSelected)\n        .then(() => {\n          if (model.isFirstProductDefault()) {\n            onProductsSelected();\n          }\n        });\n    }\n\n    return model.getSelectedProduct()\n      .then(selected => updateProductsSelected([selected]));\n  };\n\n  /**\n   * Adds subscriptions to bus events\n   * @inner\n   * @name bindEvents\n   * @type {function}\n   */\n  function bindEvents() {\n    bus.subscribe(PRODUCT_SELECTED, selection => {\n      updateProductsSelected([selection.product]);\n      updateAnalysisCategories();\n    });\n    bus.subscribe(PRODUCTS_SELECTED, selection => {\n      helpers.debounce(() => {\n        updateProductsSelected(selection.products);\n        updateAnalysisCategories();\n      }, hooks.accountSelectionDebounce());\n    });\n    bus.subscribe(PERIOD_START_CHANGED, (startDate) => {\n      $ctrl.periodStartDate = startDate;\n      updateAnalysisCategories();\n    });\n    bus.subscribe(PERIOD_END_CHANGED, (endDate) => {\n      $ctrl.periodEndDate = endDate;\n      updateAnalysisCategories();\n    });\n  }\n\n  /**\n   * @description\n   * Initializes period data via hooks\n   *\n   * @inner\n   * @name initPeriodData\n   * @type {function}\n   */\n  const initPeriodData = () => {\n    $ctrl.periodStartDate = hooks.defaultPeriodStart();\n    $ctrl.periodEndDate = hooks.defaultPeriodEnd();\n  };\n\n  /**\n   * @description\n   * Updates the products list for the ui-bb-account-selector.\n   *\n   * @inner\n   * @name updateProductsList\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const updateProductsList = (getFromStorage) => model.getProductsArray(getFromStorage)\n    .then((products) => {\n      $ctrl.products = hooks.processProductsList(products);\n      return $ctrl.products;\n    })\n    .catch(error => {\n      $ctrl.error = errorMessage(error.code);\n      bus.publish(ANALYSIS_CATEGORY_LOAD_FAILED, { error });\n    });\n\n  /**\n   * @description\n   * AngularJS Lifecycle hook used to initialize the controller\n   *\n   * @name $onInit\n   * @type {function}\n   * @returns {Promise.<void>}\n   */\n  const $onInit = () => {\n    $ctrl.isLoading = true;\n    return updateProductsList()\n      .then(initProductSelection)\n      .then(initPeriodData)\n      .then(updateAnalysisCategories)\n      .then(updateTurnovers)\n      .then(bindEvents)\n      .then(() => { $ctrl.isLoading = false; });\n  };\n\n  Object.assign($ctrl, {\n    $onInit,\n\n    /**\n     * @description\n     * The product selection for analysis\n     *\n     * @name selectedProducts\n     * @type {module:model-bb-product-summary-ng.Product[]}\n     */\n    selectedProducts: [],\n\n    /**\n     * @description\n     * List of products to be used by account selector for the analysis.\n     * Is recieved from {@link Hooks.processProductsList}\n     *\n     * @name products\n     * @type {module:model-bb-product-summary-ng.Product[]}\n     */\n    products: [],\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processAnalysisCategoryItems} hook.\n     * null if the items aren't loaded.\n     *\n     * @name items\n     * @type {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n     */\n    items: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processTurnoverResponse} hook.\n     * null if the data isn't loaded.\n     *\n     * @name turnoversItems\n     * @type {module:model-bb-turnovers-ng.Turnover}\n     */\n    turnoversItems: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processAnalysisCategorySeries} hook.\n     * Formatted for use within chart UI component.\n     * null if the data isn't loaded\n     *\n     * @name series\n     * @type {object}\n     */\n    series: null,\n\n    /**\n     * @description\n     * The value returned from {@link Hooks.processTurnoverSeries} hook.\n     * Formatted for use within chart UI component.\n     * null if the data isn't loaded\n     *\n     * @name turnoversSeries\n     * @type {module:model-bb-turnovers-ng.BBSeries}\n     */\n    turnoversSeries: null,\n\n    /**\n     * @description\n     * Date of the analysis period start\n     *\n     * @name periodStartDate\n     * @type {string}\n     */\n    periodStartDate: null,\n\n    /**\n     * @description\n     * Date of the analysis period end\n     *\n     * @name periodEndDate\n     * @type {string}\n     */\n    periodEndDate: null,\n\n    /**\n     * @description\n     * selected analysis item\n     *\n     * @name selectedAnalysisItem\n     * @type {any}\n     */\n    selectedAnalysisItem: null,\n    setSelectedAnalysisItem,\n    isSpendingAnalysis,\n\n    /**\n     * @description\n     * Loading status\n     *\n     * @name isLoading\n     * @type {boolean}\n     */\n    isLoading: false,\n    onPeriodStartDateChanged,\n    onPeriodEndDateChanged,\n    onProductSelected,\n    onProductsSelected,\n    updateAnalysisCategories,\n    updateTurnovers,\n\n    /**\n     * @description\n     * The error encountered when attempting to fetch from the model\n     *\n     * @name SpendingController#error\n     * @type {module:lib-bb-model-errors.ModelError}\n     */\n    error: null,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/controller.js","export default {\n /**\n  * Triggered when product is selected.\n  * @event bb.event.product.selected\n  * @type {any}\n  */\n  PRODUCT_SELECTED: 'bb.event.product.selected',\n\n /**\n  * Triggered when products selection has changed\n  * @event bb.event.products.selected\n  * @type {any}\n  */\n  PRODUCTS_SELECTED: 'bb.event.products.selected',\n\n /**\n  * Triggered when spending widget fails to load.\n  * @event widget-bb-income-spending-analysis-category-ng.load.failed\n  * @type {any}\n  */\n  ANALYSIS_CATEGORY_LOAD_FAILED: 'widget-bb-income-spending-analysis-category-ng.load.failed',\n\n /**\n  * Triggered when period start date is changed.\n  * @event bb.event.analysis.category.period.start.date.changed\n  * @type {any}\n  */\n  PERIOD_START_CHANGED: 'bb.event.analysis.category.period.start.date.changed',\n\n /**\n  * Triggered when period end date is changed.\n  * @event bb.event.analysis.category.period.end.date.changed\n  * @type {any}\n  */\n  PERIOD_END_CHANGED: 'bb.event.analysis.category.period.end.date.changed',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/message.js","/**\n * @name CURRENT_DATE_OBJECT\n * @description\n * Current date\n * Cache the date object to negate possible miss synchronization\n * @type {object}\n * @inner\n */\nconst CURRENT_DATE_OBJECT = new Date();\n\n/**\n * @name CURRENT_YEAR\n * @description\n * Current year\n * @type {number}\n * @inner\n */\nconst CURRENT_YEAR = CURRENT_DATE_OBJECT.getFullYear();\n\n/**\n * @name CURRENT_MONTH\n * @description\n * Current month\n * @type {number}\n * @inner\n */\nconst CURRENT_MONTH = CURRENT_DATE_OBJECT.getMonth();\n\n/**\n * @name ANALYSIS_INDICATOR_PREF\n * @description\n * Name of analysis indicator preference in the model\n * @type {string}\n */\nexport const ANALYSIS_INDICATOR_PREF = 'analysisIndicator';\n\n/**\n * @name SPENDING_ANALYSIS_INDICATOR\n * @description\n * Analysis indicator value for spending analysis\n * @type {string}\n */\nexport const SPENDING_ANALYSIS_INDICATOR = 'DBIT';\n\n/**\n * @name MS_IN_MIN\n * @description\n * Amount of milliseconds in a minute\n * @type {number}\n */\nexport const MS_IN_MIN = 60000;\n\n/**\n * @name DEFAULT_PERIOD_START\n * @description\n * First day in the current month\n * @type {number}\n */\nexport const DEFAULT_PERIOD_START = new Date(CURRENT_YEAR, CURRENT_MONTH, 1);\n\n/**\n * @name DEFAULT_PERIOD_END\n * @description\n * Current day\n * @type {number}\n */\nexport const DEFAULT_PERIOD_END = new Date();\n\n/**\n * Delay for account selection change callback execution\n * @name ACCOUNT_CHANGE_DEBOUNCE\n * @type {number}\n */\nexport const ACCOUNT_CHANGE_DEBOUNCE = 0;\n\n/**\n * @name Intents\n * @description\n * An object with all the intents names\n * @type {Object}\n */\nexport const Intent = {\n  // view.account.category.transactions key is deprecated\n  // TODO: remove in 2.10.1\n  SELECT_ANALYSIS_ITEM_DEPRECATED: 'view.account.category.transactions',\n  SELECT_ANALYSIS_ITEM: {\n    DBIT: 'intent.rb.transactions.dbit.list.view',\n    CRDT: 'intent.rb.transactions.crdt.list.view',\n  },\n};\n\nexport const TURNOVERS_DATA_KEY = {\n  DBIT: 'debitAmount',\n  CRDT: 'creditAmount',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/constants.js","/* eslint no-unused-vars: [\"error\", { \"args\": \"none\" }] */\n/**\n * @name default-hooks\n * @type {object}\n *\n * @description\n * Default hooks for widget-bb-income-spending-analysis-category-ng\n */\n\nimport {\n  DEFAULT_PERIOD_START,\n  DEFAULT_PERIOD_END,\n  ACCOUNT_CHANGE_DEBOUNCE,\n  MS_IN_MIN,\n} from './constants';\n\n/**\n * @name default-hooks#processAnalysisCategoryItems\n * @type {function}\n *\n * @description\n * Default hook for income/spending analysis by category collection post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} items\n * items to process\n * @returns {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData}\n * processed items\n */\nconst processAnalysisCategoryItems = items => items || [];\n\n/**\n * @name default-hooks#processAnalysisCategorySeries\n * @type {function}\n *\n * @description\n * Default hook for donut chart series object post processing\n *\n * @param {module:model-bb-income-spending-analysis-category-ng.BBSeries} series chart series data\n * @param {module:model-bb-income-spending-analysis-category-ng.AnalysisCategoryData} data\n * original analysis object\n * @returns {object} processed series\n */\nconst processAnalysisCategorySeries = (series, data) => series || {};\n\n/**\n * @name default-hooks#onAnalysisDataUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params parameters to process\n * @returns {object} processed params\n */\nconst onAnalysisDataUpdate = params => params;\n\n/**\n * @name default-hooks#onTurnoversUpdate\n * @type {function}\n *\n * @description\n * Process parameters before they are sent to the model's load method\n *\n * @param {object} params to process\n * @returns {object} processed params\n */\nconst onTurnoversUpdate = params => params;\n\n/**\n * @name default-hooks#processTurnoverResponse\n * @type {function}\n *\n * @description\n * Default hook for turnovers response object post processing\n *\n * @param {module:model-bb-turnovers-ng.Turnover} data turnover object to process\n * @returns {module:model-bb-turnovers-ng.Turnover} turnover response object\n */\nconst processTurnoverResponse = data => data;\n\n/**\n * @name default-hooks#processTurnoverSeries\n * @type {function}\n *\n * @description\n * Default hook for turnovers chart series object post processing\n *\n * @param {module:model-bb-turnovers-ng.BBSeries} series chart series data\n * @param {module:model-bb-turnovers-ng.Turnover} data original turnover object\n * @returns {object} processed series\n */\nconst processTurnoverSeries = (series, data) => series;\n\n/**\n * @name default-hooks#processSelectedProducts\n * @type {function}\n *\n * @description\n * Default hook to process products when selection is changed\n * @param {module:model-bb-product-summary-ng.Product[]} product which is selected\n * @returns {module:model-bb-product-summary-ng.Product[]} product after processing\n */\nconst processSelectedProducts = selectedProduct => selectedProduct;\n\n/**\n * @name default-hooks#processProductsList\n * @type {function}\n *\n * @description\n * Process passed products list before passing it to the view.\n *\n * @param {module:model-bb-product-summary-ng.Product[]} products products to process\n * @returns {module:model-bb-product-summary-ng.Product[]} processed products\n */\nconst processProductsList = products => products;\n\n/**\n * @name default-hooks#defaultPeriodStart\n * @type {function}\n *\n * @description\n * Sets period start property on init\n *\n * @returns {string} Start period string in format yyyy-mm-dd\n */\nconst defaultPeriodStart = () =>\n  new Date(DEFAULT_PERIOD_START.getTime() - (DEFAULT_PERIOD_START.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @name default-hooks#defaultPeriodEnd\n * @type {function}\n *\n * @description\n * Sets period end property on init\n *\n * @returns {string} End period string in format yyyy-mm-dd\n */\nconst defaultPeriodEnd = () =>\n  new Date(DEFAULT_PERIOD_END.getTime() - (DEFAULT_PERIOD_END.getTimezoneOffset() * MS_IN_MIN))\n    .toISOString()\n    .slice(0, 10);\n\n/**\n * @name default-hooks#accountSelectionDebounce\n * @type {function}\n *\n * @description\n * Used when multiple account selection is active. Defines account selection change\n * silence interval after which widget should send a new request and refresh\n *\n * @returns {number} Time in ms\n */\nconst accountSelectionDebounce = () => ACCOUNT_CHANGE_DEBOUNCE;\n\n/**\n * @name default-hooks#onSelectedItemChanged\n * @type {function}\n *\n * @description\n * Sets a selected analysis item\n *\n * @param {any} item selected analysis item\n * @returns {any} selected analysis item\n */\nconst onSelectedItemChanged = item => item;\n\n/**\n * @name default-hooks#processLoadError\n * @type {function}\n *\n * @description\n * Sets the error for missing parameters in the income/spending analysis request\n *\n * @param {error} error error passed\n * @returns {error} processed error\n */\nconst processLoadError = error => error;\n\nexport default {\n  processAnalysisCategoryItems,\n  processAnalysisCategorySeries,\n  onAnalysisDataUpdate,\n  onTurnoversUpdate,\n  processTurnoverResponse,\n  processTurnoverSeries,\n  processSelectedProducts,\n  processProductsList,\n  defaultPeriodStart,\n  defaultPeriodEnd,\n  accountSelectionDebounce,\n  processLoadError,\n  onSelectedItemChanged,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/default-hooks.js","/**\n * @name helpers\n * @description Controller helpers\n * @type {Object}\n *\n * @property {function} debounce Executes a callback after some time\n */\nconst helpers = ($timeout) => {\n  /**\n   * @name current\n   * @description Keeps current timeout identifier for debounce helper\n   * @inner\n   * @type {any}\n   */\n  let current = null;\n\n  return {\n    debounce: (callback, time) => {\n      if (current) {\n        $timeout.cancel(current);\n      }\n\n      current = $timeout(callback, time);\n    },\n  };\n};\n\nexport default helpers;\n\n\n\n// WEBPACK FOOTER //\n// ./widget-bb-income-spending-analysis-category-ng/scripts/helpers.js"],"sourceRoot":""}
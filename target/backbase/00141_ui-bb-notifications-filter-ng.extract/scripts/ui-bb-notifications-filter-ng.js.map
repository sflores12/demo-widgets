{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******","webpack:///webpack/bootstrap 779b1f71a92f6bec7e36?1313*******","webpack:///./ui-bb-notifications-filter-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*","webpack:///./ui-bb-notifications-filter-ng/scripts/index.js","webpack:///external \"ui-bb-calendar-popup-ng\"","webpack:///external \"ui-bb-track-form-changes-ng\"","webpack:///./ui-bb-notifications-filter-ng/scripts/component.js","webpack:///./ui-bb-notifications-filter-ng/scripts/controller.js"],"names":["module","component","controller","name","uiBbNotificationsFilterComponent","bindings","onFilter","headerLabels","levelLabels","statusLabels","buttonLabels","onClearFilter","template","uiBbNotificationsFilterController","$scope","$ctrl","defaultFilterParams","levels","status","fromDate","toDate","filterParams","Object","assign","key","value","checked","isSelectAll","statuses","config","minDate","maxDate","Date","maxMode","$watch","newVal","getNormalizedDate","date","correction","timeStamp","parse","toISOString","slice","getCheckedOptions","options","reduce","result","option","push","onToggleCheckbox","currentOption","getParams","toString","read","clearCheckedMapper","item","resetFormState","form","$setUntouched","$setPristine","onApplyFilter","params","map","toggleFilter","isOpen","isFilterPristine","$pristine"],"mappings":"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","file":"ui-bb-notifications-filter-ng/scripts/ui-bb-notifications-filter-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-track-form-changes-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ui-bb-notifications-filter-ng\", [\"vendor-bb-angular\", \"ui-bb-calendar-popup-ng\", \"ui-bb-track-form-changes-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ui-bb-notifications-filter-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"ui-bb-calendar-popup-ng\"), require(\"ui-bb-track-form-changes-ng\"));\n\telse\n\t\troot[\"ui-bb-notifications-filter-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"ui-bb-calendar-popup-ng\"], root[\"ui-bb-track-form-changes-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_36__, __WEBPACK_EXTERNAL_MODULE_47__, __WEBPACK_EXTERNAL_MODULE_48__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 779b1f71a92f6bec7e36","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ui-bb-notifications-filter-ng/model.xml\n// module id = 0\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_36__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 36\n// module chunks = 6 7 8 9 10 11 12","/**\n * @module ui-bb-notifications-filter-ng\n * @description\n * UI notifications filter component\n *\n * @example\n * // In an extension:\n * // file: scripts/index.js\n * import uiBbNotificationsFilterKey from 'ui-bb-notifications-filter-ng';\n *\n * export const dependencyKeys = [\n *   uiBbNotificationsFilterKey,\n * ];\n *\n * // file: templates/template.ng.html\n * <ui-bb-notifications-filter-ng on-filter=\"$ctrl.filter()\"\n * header-labels=\"{\n *  date: 'Date', searchInText: 'Search', searchInType: 'Search in type', level: 'Levels'\n * }\"\n * level-labels=\"{ info: 'Info', alert: 'Alert', warning: 'Warning', success: 'Success' }\"\n * status-labels=\"{ read: 'Read', unread: 'Unread', all: 'All' }\"\n * button-labels=\"{\n *  main: 'Filter',\n *  apply: 'Apply',\n *  reset: 'Reset',\n *  clearFromDate: 'Clear \"from\" date\"',\n *  clearToDate: 'Clear \"to\" date\"',\n * }\"\n * on-clear-filter=\"$ctrl.clearFilter\">\n * </ui-bb-notifications-filter-ng>\n */\n\nimport angular from 'vendor-bb-angular';\n\nimport uiBbCalendarPopupNgKey from 'ui-bb-calendar-popup-ng';\nimport uiBbTrackChangesKey from 'ui-bb-track-form-changes-ng';\n\nimport Component from './component';\nimport Controller from './controller';\n\n/**\n * @name default\n * @type {string}\n * @description The angular module name\n */\nexport default angular\n  .module('ui-bb-notifications-filter-ng', [\n    uiBbCalendarPopupNgKey,\n    uiBbTrackChangesKey,\n  ])\n  .component('uiBbNotificationsFilter', Component)\n  .controller('uiBbNotificationsFilterController', ['$scope', Controller])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-calendar-popup-ng\"\n// module id = 47\n// module chunks = 8","module.exports = __WEBPACK_EXTERNAL_MODULE_48__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-track-form-changes-ng\"\n// module id = 48\n// module chunks = 8","const uiBbNotificationsFilterComponent = {\n  bindings: {\n    onFilter: '&?',\n    headerLabels: '<',\n    levelLabels: '<',\n    statusLabels: '<',\n    buttonLabels: '<',\n    onClearFilter: '=',\n  },\n  controller: 'uiBbNotificationsFilterController',\n  template: `\n    <form data-role=\"search\"\n      name=\"filterForm\"\n      data-ng-submit=\"$ctrl.onApplyFilter()\"\n      data-ui-bb-track-changes=\"$ctrl.filterParams\">\n      <div class=\"clearfix\">\n        <div class=\"pull-right\">\n          <button class=\"btn btn-default\"\n            type=\"button\"\n            data-ng-click=\"$ctrl.toggleFilter()\"\n            title=\"{{ $ctrl.buttonLabels.main }}\">\n            <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>\n            <span data-ng-bind=\"$ctrl.buttonLabels.main\"></span>\n          </button>\n        </div>\n      </div>\n      <div data-ng-if=\"$ctrl.isOpen\">\n        <div class=\"form-group row\">\n          <div class=\"col-md-5\">\n            <h5 data-ng-bind=\"$ctrl.headerLabels.date\"></h5>\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <ui-bb-calendar-popup data-config=\"$ctrl.fromDate.config\"\n                  data-date=\"$ctrl.filterParams.fromDate\"\n                  data-disabled=\"false\">\n                </ui-bb-calendar-popup>\n              </div>\n              <div class=\"col-sm-6\">\n                <ui-bb-calendar-popup data-config=\"$ctrl.toDate.config\"\n                  data-date=\"$ctrl.filterParams.toDate\"\n                  data-disabled=\"!$ctrl.filterParams.fromDate\">\n                </ui-bb-calendar-popup>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <h5 data-ng-bind=\"$ctrl.headerLabels.level\"></h5>\n          <label class=\"checkbox-inline\"\n            data-ng-repeat=\"level in $ctrl.levels track by $index\">\n            <input type=\"checkbox\"\n              name=\"{{ $ctrl.levels.name }}\"\n              data-ng-value=\"level.value\"\n              data-ng-model=\"level.checked\"\n              data-ng-change=\"$ctrl.onToggleCheckbox(level, $ctrl.levels)\">\n            <span data-ng-bind=\"$ctrl.levelLabels[level.key]\"></span>\n          </label>\n        </div>\n        <div class=\"form-group\">\n          <h5 data-ng-bind=\"$ctrl.headerLabels.status\"></h5>\n          <label class=\"radio-inline\"\n            data-ng-repeat=\"status in $ctrl.statuses track by $index\">\n            <input type=\"radio\"\n              name=\"{{ $ctrl.statuses.name }}\"\n              data-ng-model=\"$ctrl.filterParams.status\"\n              data-ng-checked=\"status.checked\"\n              data-ng-value=\"status.value\">\n            <span data-ng-bind=\"$ctrl.statusLabels[status.key]\"></span>\n          </label>\n        </div>\n        <div class=\"form-group text-right\">\n          <button class=\"btn btn-default btn-link\"\n            type=\"button\"\n            data-ng-if=\"!$ctrl.isFilterPristine(filterForm)\"\n            data-ng-click=\"$ctrl.onClearFilter(filterForm)\"\n            data-ng-bind=\"$ctrl.buttonLabels.clear\">\n          </button>\n          <button class=\"btn btn-default\"\n            type=\"button\"\n            data-ng-click=\"$ctrl.toggleFilter()\"\n            data-ng-bind=\"$ctrl.buttonLabels.cancel\">\n          </button>\n          <button class=\"btn btn-primary\"\n            type=\"submit\"\n            data-ng-bind=\"$ctrl.buttonLabels.apply\">\n          </button>\n        </div>\n      </div>\n    </form>\n  `,\n};\n\n/**\n * @name uiBbNotificationsFilterComponent\n * @type {object}\n */\nexport default uiBbNotificationsFilterComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/component.js","export default function uiBbNotificationsFilterController($scope) {\n  /**\n   * @name uiBbNotificationsFilterController\n   * @ngkey uiBbNotificationsFilterController\n   * @type {object}\n   * @description Notifications filter controller\n   */\n  const $ctrl = this;\n\n  const defaultFilterParams = {\n    levels: [],\n    status: null,\n    fromDate: null,\n    toDate: null,\n  };\n\n  /**\n   * @description\n   * `filterParams` parameters object.\n   *\n   * @name uiBbNotificationsFilterController#filterParams\n   * @type {object}\n   */\n  const filterParams = Object.assign({}, defaultFilterParams);\n\n  /**\n   * @description\n   * Array of `Severity levels` parameters objects.\n   *\n   * @name uiBbNotificationsFilterController#levels\n   * @type {array}\n   */\n  const levels = [\n    { key: 'all', value: '', checked: false, isSelectAll: true },\n    { key: 'info', value: 'INFO', checked: false },\n    { key: 'warning', value: 'WARNING', checked: false },\n    { key: 'alert', value: 'ALERT', checked: false },\n    { key: 'success', value: 'SUCCESS', checked: false },\n  ];\n\n  /**\n   * @description\n   * Array of `Statuses` parameters objects.\n   *\n   * @name uiBbNotificationsFilterController#statuses\n   * @type {array}\n   */\n  const statuses = [\n    { key: 'all', value: null, checked: false },\n    { key: 'read', value: true, checked: false },\n    { key: 'unread', value: false, checked: false },\n  ];\n\n  /**\n   * @description\n   * `From date` parameters object.\n   *\n   * @name uiBbNotificationsFilterController#fromDate\n   * @type {object}\n   */\n  const fromDate = {\n    config: { minDate: null, maxDate: new Date(), maxMode: 'year' },\n  };\n\n  /**\n   * @description\n   * `To date` parameters object.\n   *\n   * @name uiBbNotificationsFilterController#toDate\n   * @type {object}\n   */\n  const toDate = {\n    config: { minDate: null, maxDate: new Date(), maxMode: 'year' },\n  };\n\n  /**\n   * @description\n   * Watcher object evaluating current toDate param config.\n   *\n   * @type {object}\n   */\n  $scope.$watch(() => filterParams.fromDate, (newVal) => {\n    toDate.config = Object.assign({}, toDate.config, {\n      minDate: newVal ? new Date(newVal) : null,\n    });\n  });\n\n  /**\n   * @description\n   * Watcher object evaluation current fromDate param config.\n   *\n   * @type {object}\n   */\n  $scope.$watch(() => filterParams.toDate, (newVal) => {\n    fromDate.config = Object.assign({}, fromDate.config, {\n      maxDate: newVal ? new Date(newVal) : new Date(),\n    });\n  });\n\n  /**\n   * @description\n   * Normalize date to required format.\n   *\n   * @inner\n   * @name uiBbNotificationsFilterController#getNormalizedDate\n   * @type {function}\n   * @param {object} date Date string\n   * @param {object} correction Number of miliseconds added to given date\n   * @returns {Date|null} Date object or null\n   */\n  const getNormalizedDate = (date, correction = 0) => {\n    const timeStamp = Date.parse(date) + correction;\n\n    // add timezone to returned date\n    return date ? `${new Date(timeStamp).toISOString().slice(0, -5)}Z` : null;\n  };\n\n  /**\n   * @description\n   * Return Array of checked option values.\n   *\n   * @inner\n   * @name uiBbNotificationsFilterController#getCheckedOptions\n   * @type {function}\n   * @param {array} options Array of checkbox option objects\n   * @returns {array} rray of checked option values\n   */\n  const getCheckedOptions = (options) => options.reduce((result, option) => {\n    if (option.checked && !option.isSelectAll) {\n      result.push(option.value);\n    }\n\n    return result;\n  }, []);\n\n  /**\n   * @description\n   * Update levels value for request according to options.\n   *\n   * @name uiBbNotificationsFilterController#onToggleCheckbox\n   * @type {function}\n   * @param {object} currentOption Checkbox option object\n   * @param {array} options Array of checkbox option objects\n   */\n  const onToggleCheckbox = (currentOption, options) => {\n    if (!currentOption.isSelectAll || (!currentOption.checked && currentOption.isSelectAll)) {\n      filterParams.levels = getCheckedOptions(options);\n    } else {\n      filterParams.levels = [];\n    }\n  };\n\n  /**\n   * @description\n   * Get all filter params.\n   *\n   * @name uiBbNotificationsFilterController#getParams\n   * @type {function}\n   * @returns {object} Filter params\n   */\n  const getParams = () => ({\n    levels: filterParams.levels.toString() || null,\n    read: filterParams.status,\n    fromDate: getNormalizedDate(filterParams.fromDate),\n    toDate: getNormalizedDate(filterParams.toDate || filterParams.fromDate, 1000 * 60 * 60 * 24),\n  });\n\n  /**\n   * @description\n   * Uncheck checkbox input.\n   *\n   * @name uiBbNotificationsFilterController#clearCheckedMapper\n   * @type {function}\n   * @param {object} item Checkbox input object\n   * @returns {object} Processed checkbox input object\n   */\n  const clearCheckedMapper = (item) => Object.assign(item, {\n    checked: false,\n  });\n\n  /**\n   * @description\n   * Reset form state method.\n   *\n   * @inner\n   * @name uiBbTransactionSearchFilterController#resetFormState\n   * @param {object} form Angular form object\n   * @type {function}\n   */\n  const resetFormState = (form) => {\n    if (form) {\n      form.$setUntouched();\n      form.$setPristine();\n    }\n  };\n\n  /**\n   * @description\n   * Call filter method.\n   *\n   * @name uiBbNotificationsFilterController#onApplyFilter\n   * @type {function}\n   * @returns {Promise|null} A Promise that returns from filter method or null if method isn't set\n   */\n  const onApplyFilter = () => ($ctrl.onFilter ? $ctrl.onFilter({ params: getParams() }) : null);\n\n  /**\n   * @description\n   * Reset filter parameters.\n   *\n   * @name uiBbNotificationsFilterController#onClearFilter\n   * @param {object} form Angular form object\n   * @type {function}\n   */\n  const onClearFilter = (form) => {\n    Object.assign(filterParams, defaultFilterParams);\n\n    $ctrl.levels = $ctrl.levels.map(clearCheckedMapper);\n    $ctrl.statuses = $ctrl.statuses.map(clearCheckedMapper);\n\n    resetFormState(form);\n  };\n\n  /**\n   * @description\n   * Toggle filter component.\n   *\n   * @name uiBbNotificationsFilterController#toggleFilter\n   * @type {function}\n   * @returns {boolean} A status of filter component\n   */\n  const toggleFilter = () => ($ctrl.isOpen = !$ctrl.isOpen);\n\n  /**\n   * @description\n   * Check if filter is pristine or not.\n   *\n   * @name uiBbNotificationsFilterController#isFilterPristine\n   * @type {function}\n   * @param {object} form Angular form object\n   * @returns {boolean} True if filter is pristine\n   */\n  const isFilterPristine = (form) => form.$pristine;\n\n  Object.assign($ctrl, {\n    isOpen: false,\n    filterParams,\n    levels,\n    statuses,\n    fromDate,\n    toDate,\n    onToggleCheckbox,\n    onApplyFilter,\n    onClearFilter,\n    toggleFilter,\n    isFilterPristine,\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ui-bb-notifications-filter-ng/scripts/controller.js"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6****","webpack:///webpack/bootstrap 5cca3903bb887dfc34d7?ea53****","webpack:///./ext-bbm-initiate-payment-schedule-ng/model.xml","webpack:///external \"ui-bb-i18n-ng\"?dc01****","webpack:///external \"ui-bb-date-label-filter-ng\"?be82","webpack:///external \"ui-bbm-textfield-ng\"?0f1f","webpack:///external \"lib-bbm-plugins\"?dfbe*","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/index.js","webpack:///external \"ui-bbm-datepicker-ng\"","webpack:///external \"ui-bbm-dropdown-ng\"","webpack:///./ext-bbm-initiate-payment-schedule-ng/scripts/helpers.js"],"names":["helpers","dependencyKeys","RecurrenceEnding","NEVER","ON","AFTER","TransferFrequency","ONCE","DAILY","WEEKLY","MONTHLY","QUARTERLY","YEARLY","$filter","date","i18n","frequencyOptions","id","text","recurrenceEndingOptions","getPaymentSchedule","ctrl","state","payment","data","schedule","getToday","Date","now","getDayStart","dateStr","setHours","isPaymentRecurring","transferFrequency","isEndDateValid","endDate","startDate","isRepeatValid","repeat","checkValidity","end","Snackbar","error","getFrequencyOptions","getMinimumRecurrenceEndDate","getMinimumExecutionDate","getMinimumRecurrenceStartDate","getRecurrenceEndingOptions","getStartDateLabel","getStartDateTitle","isRecurrenceRepeatVisible","isRecurrenceEndDateVisible","onScheduleFormSubmit","submitSchedule","dateLabels","TODAY"],"mappings":"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","file":"ext-bbm-initiate-payment-schedule-ng/scripts/ext-bbm-initiate-payment-schedule-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"), require(\"ui-bbm-datepicker-ng\"), require(\"ui-bbm-dropdown-ng\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ext-bbm-initiate-payment-schedule-ng\", [\"ui-bb-i18n-ng\", \"ui-bb-date-label-filter-ng\", \"ui-bbm-textfield-ng\", \"lib-bbm-plugins\", \"ui-bbm-datepicker-ng\", \"ui-bbm-dropdown-ng\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ext-bbm-initiate-payment-schedule-ng\"] = factory(require(\"ui-bb-i18n-ng\"), require(\"ui-bb-date-label-filter-ng\"), require(\"ui-bbm-textfield-ng\"), require(\"lib-bbm-plugins\"), require(\"ui-bbm-datepicker-ng\"), require(\"ui-bbm-dropdown-ng\"));\n\telse\n\t\troot[\"ext-bbm-initiate-payment-schedule-ng\"] = factory(root[\"ui-bb-i18n-ng\"], root[\"ui-bb-date-label-filter-ng\"], root[\"ui-bbm-textfield-ng\"], root[\"lib-bbm-plugins\"], root[\"ui-bbm-datepicker-ng\"], root[\"ui-bbm-dropdown-ng\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_42__, __WEBPACK_EXTERNAL_MODULE_45__, __WEBPACK_EXTERNAL_MODULE_53__, __WEBPACK_EXTERNAL_MODULE_54__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5cca3903bb887dfc34d7","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ext-bbm-initiate-payment-schedule-ng/model.xml\n// module id = 0\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-i18n-ng\"\n// module id = 8\n// module chunks = 0 1 2 3 4 6 7 8 9 11 12","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bb-date-label-filter-ng\"\n// module id = 32\n// module chunks = 1 4","module.exports = __WEBPACK_EXTERNAL_MODULE_42__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-textfield-ng\"\n// module id = 42\n// module chunks = 2 4 12","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bbm-plugins\"\n// module id = 45\n// module chunks = 2 3 4","/**\n * @module ext-bbm-initiate-payment-schedule-ng\n *\n * @description\n * Mobile extension for the payment schedule view in the Mobile initiate payment widget.\n *\n * @example\n * <!-- File model.xml of widget-bbm-initiate-payment-ng -->\n * <property name=\"extension\" viewHint=\"text-input,admin\">\n *   <value type=\"string\">ext-bbm-initiate-payment-schedule-ng</value>\n * </property>\n */\nimport uiBbI18nNgKey from 'ui-bb-i18n-ng';\nimport uiBbmDatepickerNgKey from 'ui-bbm-datepicker-ng';\nimport uiBbmDropdownNgKey from 'ui-bbm-dropdown-ng';\nimport uiBbmTextfieldNgKey from 'ui-bbm-textfield-ng';\nimport extHelpers from './helpers';\n\nexport const helpers = extHelpers;\n\nexport const dependencyKeys = [\n  uiBbI18nNgKey,\n  uiBbmDatepickerNgKey,\n  uiBbmDropdownNgKey,\n  uiBbmTextfieldNgKey,\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_53__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-datepicker-ng\"\n// module id = 53\n// module chunks = 4","module.exports = __WEBPACK_EXTERNAL_MODULE_54__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui-bbm-dropdown-ng\"\n// module id = 54\n// module chunks = 4","// Temporary disable capsInNew until it fixed in lib-bbm-plugins\n/* eslint new-cap: [\"error\", { \"capIsNew\": false }] */\nimport plugins from 'lib-bbm-plugins';\nimport { TimePeriod } from 'ui-bb-date-label-filter-ng';\n\nconst RecurrenceEnding = {\n  NEVER: 'NEVER',\n  ON: 'ON',\n  AFTER: 'AFTER',\n};\n\nconst TransferFrequency = {\n  ONCE: 'ONCE',\n  DAILY: 'DAILY',\n  WEEKLY: 'WEEKLY',\n  MONTHLY: 'MONTHLY',\n  QUARTERLY: 'QUARTERLY',\n  YEARLY: 'YEARLY',\n};\n\n/**\n * @description\n * Helpers for ext-bbm-initiate-payment-schedule-ng\n *\n * @name Helpers\n * @type {Object}\n */\n\nexport default ({ $filter }) => {\n  const date = $filter('date');\n  const i18n = $filter('i18n');\n\n  const frequencyOptions = [\n    { id: TransferFrequency.ONCE, text: i18n('message.payment.schedule.frequency.once') },\n    { id: TransferFrequency.DAILY, text: i18n('message.payment.schedule.frequency.daily') },\n    { id: TransferFrequency.WEEKLY, text: i18n('message.payment.schedule.frequency.weekly') },\n    { id: TransferFrequency.MONTHLY, text: i18n('message.payment.schedule.frequency.monthly') },\n    { id: TransferFrequency.QUARTERLY, text: i18n('message.payment.schedule.frequency.quarterly') },\n    { id: TransferFrequency.YEARLY, text: i18n('message.payment.schedule.frequency.yearly') },\n  ];\n\n  const recurrenceEndingOptions = [\n    { id: RecurrenceEnding.NEVER, text: i18n('recurrence.ending.never') },\n    { id: RecurrenceEnding.ON, text: i18n('recurrence.ending.on') },\n    { id: RecurrenceEnding.AFTER, text: i18n('recurrence.ending.after') },\n  ];\n\n  const getPaymentSchedule = ctrl => ctrl.state.payment.data.schedule;\n\n  const getToday = () => date(Date.now(), 'yyyy-MM-ddTHH:mm:ssZ');\n\n  const getDayStart = dateStr => (new Date(dateStr)).setHours(0, 0, 0, 0);\n\n  const isPaymentRecurring = ctrl => (\n    getPaymentSchedule(ctrl).transferFrequency !== TransferFrequency.ONCE\n  );\n\n  const isEndDateValid = ({ endDate, startDate }) => (\n    getDayStart(startDate) <= getDayStart(endDate)\n  );\n\n  const isRepeatValid = ({ repeat }) => repeat > 0 && repeat <= 99;\n\n  const checkValidity = ctrl => {\n    if (isPaymentRecurring(ctrl)) {\n      const schedule = getPaymentSchedule(ctrl);\n\n      // End date is not entered\n      if (schedule.end === RecurrenceEnding.ON && !schedule.endDate) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.endDate.required'));\n        return false;\n      }\n\n      // End date is not valid\n      if (schedule.end === RecurrenceEnding.ON && !isEndDateValid(schedule)) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.endDate.invalid'));\n        return false;\n      }\n\n      // Repeat is not valid\n      if (schedule.end === RecurrenceEnding.AFTER && !isRepeatValid(schedule)) {\n        plugins.Snackbar().error(i18n('errors.payment.schedule.repeat.invalid'));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  return {\n    /**\n     * @description\n     * Returns a list of frequency options.\n     *\n     * @name Helpers#getFrequencyOptions\n     * @type {function}\n     *\n     * @returns {Array.<PaymentFrequency>}\n     */\n    getFrequencyOptions: () => frequencyOptions,\n\n    /**\n     * @description\n     * Returns a minimum allowed date to start a recurring payment.\n     *\n     * @name Helpers#getMinimumRecurrenceEndDate\n     * @type {function}\n     *\n     * @returns {string}\n     */\n    getMinimumRecurrenceEndDate: ctrl => getPaymentSchedule(ctrl).startDate,\n\n    /**\n     * @description\n     * Returns a minimum allowed date to make a payment.\n     *\n     * @name Helpers#getMinimumExecutionDate\n     * @type {function}\n     *\n     * @returns {string}\n     */\n    getMinimumExecutionDate: () => getToday(),\n\n    /**\n     * @description\n     * Returns a minimum allowed date to start a recurring payment.\n     *\n     * @name Helpers#getMinimumStartDate\n     * @type {function}\n     *\n     * @returns {string}\n     */\n    getMinimumRecurrenceStartDate: () => getToday(),\n\n    /**\n     * @description\n     * Returns a list of possible recurring payment endings.\n     *\n     * @name Helpers#getRecurrenceEndingOptions\n     * @type {function}\n     *\n     * @returns {Array.<RecurrenceEnding>}\n     */\n    getRecurrenceEndingOptions: () => recurrenceEndingOptions,\n\n    /**\n     * @description\n     * Returns the label of the start date field.\n     *\n     * @name Helpers#getStartDateLabel\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl Instance of the controller\n     * @returns {string}\n     */\n    getStartDateLabel: ctrl => (\n      isPaymentRecurring(ctrl)\n        ? i18n('form.label.startDate')\n        : i18n('form.label.executionDate')\n    ),\n\n    /**\n     * @description\n     * Returns the title of the start date datepicker.\n     *\n     * @name Helpers#getStartDateTitle\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl Instance of the controller\n     * @returns {string}\n     */\n    getStartDateTitle: ctrl => (\n      isPaymentRecurring(ctrl)\n        ? i18n('form.title.selectStartDate')\n        : i18n('form.title.selectExecutionDate')\n    ),\n\n    /**\n     * @description\n     * Checks whether the payment is recurring.\n     * Returns true, if the payment is recurring, false otherwise.\n     *\n     * @name Helpers#isPaymentRecurring\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl\n     * @returns {boolean}\n     */\n    isPaymentRecurring,\n\n    /**\n     * @description\n     * Defines whether the recurrence repeat field should be visible.\n     *\n     * @name Helpers#isRecurrenceRepeatVisible\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl\n     * @returns {boolean}\n     */\n    isRecurrenceRepeatVisible: ctrl => (\n      isPaymentRecurring(ctrl) && getPaymentSchedule(ctrl).end === RecurrenceEnding.AFTER\n    ),\n\n    /**\n     * @description\n     * Defines whether the recurrence end date field should be visible.\n     *\n     * @name Helpers#isRecurrenceEndDateVisible\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl\n     * @returns {boolean}\n     */\n    isRecurrenceEndDateVisible: ctrl => (\n      isPaymentRecurring(ctrl) && getPaymentSchedule(ctrl).end === RecurrenceEnding.ON\n    ),\n\n    /**\n     * @description\n     * Handles submit of the schedule payment form.\n     *\n     * @name Helpers#onScheduleFormSubmit\n     * @type {function}\n     *\n     * @param {ScheduleController} ctrl Instance of the controller\n     * @returns {string}\n     */\n    onScheduleFormSubmit: ctrl => {\n      if (checkValidity(ctrl)) {\n        ctrl.submitSchedule();\n      }\n    },\n    dateLabels: {\n      [TimePeriod.TODAY]: i18n('calendar.label.today'),\n    },\n  };\n};\n\n/**\n * @typedef {Object} PaymentFrequency\n * @property {string} id Frequency identifier\n * @property {string} text Frequency as a text to be displayed\n */\n\n\n\n// WEBPACK FOOTER //\n// ./ext-bbm-initiate-payment-schedule-ng/scripts/helpers.js"],"sourceRoot":""}
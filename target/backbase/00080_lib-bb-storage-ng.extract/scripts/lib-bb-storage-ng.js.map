{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*******************","webpack:///webpack/bootstrap ae8dfb8780f1a537e6f0?6d38*******************","webpack:///./lib-bb-storage-ng/model.xml","webpack:///external \"vendor-bb-angular\"?a114*********","webpack:///external \"lib-bb-storage\"?acbc","webpack:///./lib-bb-storage-ng/scripts/index.js"],"names":["moduleKey","bbStorageServiceKey","module","factory","$q","$rootScope","noop","afterPublish","$evalAsync","name"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA,0C;;;;;;;ACAA,gD;;;;;;;ACAA,iD;;;;;;;;;;;;;;ACwCA;;;;AAEA;;;;;;AA1CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,KAAMA,YAAY,gBAAlB;;AAEA;;;;;AAKO,KAAMC,oDAAyBD,SAAzB,sBAAN;;AAEP;;;;;mBAKe,0BAAQE,MAAR,CAAeF,SAAf,EAA0B,EAA1B;;AAEb;;;;;;;;;;AAFa,EAYZG,OAZY,CAYJF,mBAZI,EAYiB,CAC5B,IAD4B,EAE5B,YAF4B,EAG5B,UAACG,EAAD,EAAKC,UAAL,EAAoB;AAClB,OAAMC,OAAO,SAAPA,IAAO,GAAM,CAAE,CAArB;AACA,OAAMC,eAAe,SAAfA,YAAe;AAAA,YAAMF,WAAWG,UAAX,CAAsBF,IAAtB,CAAN;AAAA,IAArB;AACA,UAAO,4BAAiBF,EAAjB,EAAqBG,YAArB,CAAP;AACD,EAP2B,CAZjB,EAqBZE,I","file":"lib-bb-storage-ng/scripts/lib-bb-storage-ng.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-storage\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lib-bb-storage-ng\", [\"vendor-bb-angular\", \"lib-bb-storage\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lib-bb-storage-ng\"] = factory(require(\"vendor-bb-angular\"), require(\"lib-bb-storage\"));\n\telse\n\t\troot[\"lib-bb-storage-ng\"] = factory(root[\"vendor-bb-angular\"], root[\"lib-bb-storage\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_57__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae8dfb8780f1a537e6f0","module.exports = require(\"./scripts/index.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib-bb-storage-ng/model.xml\n// module id = 0\n// module chunks = 20","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"vendor-bb-angular\"\n// module id = 5\n// module chunks = 3 4 5 6 7 8 9 11 15 17 20 22 24 25","module.exports = __WEBPACK_EXTERNAL_MODULE_57__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lib-bb-storage\"\n// module id = 57\n// module chunks = 15 20","/**\n * @module lib-bb-storage-ng\n * @description\n * Provides a cross-platform interface for temporary storage or data between widget/page instances.\n * It provides a key-value store that is persisted between Page loads in the browser and between\n * WebViews on mobile.\n *\n * @example\n * import bbStorageModuleKey, { bbStorageServiceKey } from 'lib-bb-storage-ng';\n *\n * angular\n *   .module('ExampleModule', [\n *     bbStorageModuleKey,\n *   ])\n *   .controller('MyController', [\n *     bbStorageServiceKey,\n *     // into //\n *     (bbStorage) => {\n *       const $ctrl = this;\n *       let unsubscribe = () => {};\n *\n *       const counterStorage = 'counter';\n *\n *       $ctrl.$onInit = () => {\n *         unsubscribe = bbStorage.subscribe(counterStorage, (newValue) => {\n *           // called whenever the value in the storage is set\n *           $ctrl.counter = newValue;\n *         });\n *       };\n *\n *       $ctrl.$onDestroy = () => {\n *         unsubscribe();\n *       };\n *\n *       $ctrl.increment = () =>\n *         bbStorage.getItem(counterStorage)\n *         .then((oldValue = 0) => bbStorage.setItem(counterStorage, oldValue + 1));\n *     },\n *   ]);\n */\nimport angular from 'vendor-bb-angular';\n\nimport bbStorageService from 'lib-bb-storage';\n\nconst moduleKey = 'lib-bb-storage';\n\n/**\n * @name bbStorageServiceKey\n * @type {string}\n * @description Injector name for a [bbStorageService](#bbStorageService)\n */\nexport const bbStorageServiceKey = `${moduleKey}:bbStorageService`;\n\n/**\n * @name default\n * @type {string}\n * @description The angular module name\n */\nexport default angular.module(moduleKey, [])\n\n  /**\n   * The {@link module:lib-bb-storage.StorageService} factory.\n   * Creates a new storage service by detecting the best storage mechanism available in the\n   * current environment.\n   *\n   * @name bbStorageService\n   * @ngkey lib-bb-storage-ng:bbStorageService\n   * @type {function}\n   * @return {module:lib-bb-storage.StorageService} Storage API\n   */\n  .factory(bbStorageServiceKey, [\n    '$q',\n    '$rootScope',\n    ($q, $rootScope) => {\n      const noop = () => {};\n      const afterPublish = () => $rootScope.$evalAsync(noop);\n      return bbStorageService($q, afterPublish);\n    },\n  ])\n  .name;\n\n\n\n// WEBPACK FOOTER //\n// ./lib-bb-storage-ng/scripts/index.js"],"sourceRoot":""}